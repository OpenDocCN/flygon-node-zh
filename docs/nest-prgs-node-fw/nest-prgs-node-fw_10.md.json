["```js\nimport { Controller, Get } from '@nestjs/common';\n\n@Controller('entries')\nexport class EntryController {\n    @Get()\n    index(): Entry[] {\n        const entries: Entry[] = this.entriesService.findAll();\n        return entries;\n    }\n\n```", "```js\nimport { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class EntryController {\n    @Get('entries')\n    index(): Entry[] {\n        const entries: Entry[] = this.entriesService.findAll();\n        return entries;\n    }\n\n```", "```js\n@HttpCode(204)\n@Post()\ncreate() {\n  // This handler will return a 204 status response\n}\n\n```", "```js\nimport { Controller, Get, Res } from '@nestjs/common';\nimport { Response } from 'express';\n\n@Controller('entries')\nexport class EntryController {\n    @Get()\n    index(@Res() res: Response) {\n        const entries: Entry[] = this.entriesService.findAll();\n        return res.status(HttpStatus.OK).json(entries);\n    }\n}\n\n```", "```js\nimport { Controller, Get, Param } from '@nestjs/common';\n\n@Controller('entries')\nexport class EntryController {\n    @Get(':entryId')\n    show(@Param() params) {\n        const entry: Entry = this.entriesService.find(params.entryId);\n        return entry;\n    }\n}\n\n```", "```js\nimport { Controller, Get, Param } from '@nestjs/common';\n\n@Controller('entries')\nexport class EntryController {\n    @Get(':entryId')\n    show(@Param('entryId') entryId) {\n        const entry: Entry = this.entriesService.findOne(entryId);\n        return entry;\n    }\n}\n\n```", "```js\nimport { Body, Controller, Post } from '@nestjs/common';\n\n@Controller('entries')\nexport class EntryController {\n    @Post()\n    create(@Body() body: Entry) {\n        this.entryService.create(body);\n    }\n}\n\n```", "```js\nimport { Controller, Get, Req } from '@nestjs/common';\nimport { Request } from 'express';\n\n@Controller('entries')\nexport class EntryController {\n    @Get()\n    index(@Req() req: Request): Entry[] {\n        const entries: Entry[] = this.entriesService.findAll();\n        return entries;\n    }\n\n```", "```js\nimport { Controller, Get } from '@nestjs/common';\n\n@Controller('entries')\nexport class EntryController {\n    @Get()\n    async index(): Promise<Entry[]> {\n        const entries: Entry[] = await this.entryService.findAll();\n        return entries;\n    }\n\n```", "```js\nimport { Controller, Get } from '@nestjs/common';\n\n@Controller('entries')\nexport class EntryController {\n    @Get()\n    index(): Promise<Entry[]> {\n        const entriesPromise: Promise<Entry[]> = this.entryService.findAll();\n        return entriesPromise;\n    }\n\n```", "```js\nimport { Controller, Get } from '@nestjs/common';\n\n@Controller('entries')\nexport class EntryController {\n    @Get()\n    index(): Observable<Entry[]> {\n        const entriesPromise: Observable<Entry[]> = this.entryService.findAll();\n        return entriesPromise;\n    }\n\n```", "```js\nimport { Body, Controller, HttpException, HttpStatus, Post } from '@nestjs/common';\n\n@Controller('entries')\nexport class EntryController {\n    @Post()\n    create(@Body() entry: Entry) {\n        if (!entry) throw new HttpException('Bad request', HttpStatus.BAD_REQUEST);\n        this.entryService.create(entry);\n    }\n}\n\n```", "```js\n{\n    \"statusCode\": 400,\n    \"message\": \"Bad request\"\n}\n\n```", "```js\nimport { Body, Controller, HttpException, HttpStatus, Post } from '@nestjs/common';\n\n@Controller('entries')\nexport class EntryController {\n    @Post()\n    create(@Body() entry: Entry) {\n        if (!entry) throw new HttpException({ status: HttpStatus.BAD_REQUEST, error: 'Entry required' });\n        this.entryService.create(entry);\n    }\n}\n\n```", "```js\n{\n    \"statusCode\": 400,\n    \"error\": \"Entry required\"\n}\n\n```", "```js\n{\n    \"statusCode\": 500,\n    \"message\": \"Internal server error\"\n}\n\n```"]