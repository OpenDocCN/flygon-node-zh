["```js\ncurl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -\nsudo apt-get install nodejs\n```", "```js\nnode --version \n```", "```js\napt-get npm install\n```", "```js\nsudo npm i -g npm\n```", "```js\nexport PATH=$PATH:/path/to/npm\n```", "```js\nbojinov@developer-machine:~$ npm ls\n/home/bojinov\n\u251c\u2500\u252c accepts@1.3.3\n\u2502 \u251c\u2500\u252c mime-types@2.1.13\n\u2502 \u2502 \u2514\u2500\u2500 mime-db@1.25.0\n\u2502 \u2514\u2500\u2500 negotiator@0.6.1\n\u251c\u2500\u2500 array-flatten@1.1.1\n\u251c\u2500\u252c cache-control@1.0.3\n\u2502 \u251c\u2500\u252c cache-header@1.0.3\n\u2502 \u2502 \u251c\u2500\u2500 lodash.isnumber@2.4.1 deduped\n\u2502 \u2502 \u251c\u2500\u2500 lodash.isstring@2.4.1\n\u2502 \u2502 \u2514\u2500\u2500 regular@0.1.6 deduped\n\u2502 \u251c\u2500\u252c fast-url-parser@1.1.3\n\u2502 \u2502 \u2514\u2500\u2500 punycode@1.4.1\n\u2502 \u251c\u2500\u252c glob-slasher@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 glob-slash@1.0.0\n\u2502 \u2502 \u251c\u2500\u252c lodash.isobject@2.4.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash._objecttypes@2.4.1\n\u2502 \u2502 \u2514\u2500\u252c toxic@1.0.0\n\u2502 \u2502 \u2514\u2500\u2500 lodash@2.4.2\n\u2502 \u251c\u2500\u252c globject@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 minimatch@2.0.10 extraneous\n\u2502 \u251c\u2500\u2500 lodash.isnumber@2.4.1\n\u2502 \u251c\u2500\u2500 on-headers@1.0.1\n\u2502 \u2514\u2500\u2500 regular@0.1.6\n\u251c\u2500\u2500 content-disposition@0.5.1\n\u251c\u2500\u2500 content-type@1.0.2\n\u251c\u2500\u2500 cookie@0.3.1\n\u251c\u2500\u2500 cookie-signature@1.0.6\n```", "```js\nnpm install -g express \n```", "```js\nnpm install nodeunit -g \n```", "```js\n{\n  \"_from\": \"express\",\n  \"_id\": \"express@4.16.1\",\n  \"_inBundle\": false,\n  \"_integrity\": \"sha512-STB7LZ4N0L+81FJHGla2oboUHTk4PaN1RsOkoRh9OSeEKylvF5hwKYVX1xCLFaCT7MD0BNG/gX2WFMLqY6EMBw==\",\n  \"_location\": \"/express\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"type\": \"tag\", \"registry\": true, \"raw\": \"express\", \"name\": \"express\",\n    \"escapedName\": \"express\",\"rawSpec\": \"\", \"saveSpec\": null, \"fetchSpec\": \"latest\"\n  },\n  \"_requiredBy\": [\n    \"#USER\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/express/-/express-4.16.1.tgz\",\n  \"_shasum\": \"6b33b560183c9b253b7b62144df33a4654ac9ed0\",\n  \"_spec\": \"express\",\n  \"_where\": \"/home/valio/Downloads\",\n  \"author\": {\n    \"name\": \"TJ Holowaychuk\",\n    \"email\": \"tj@vision-media.ca\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/expressjs/express/issues\"\n  },\n  \"bundleDependencies\": false,\n  \"contributors\": [\n    {\n      \"name\": \"Aaron Heckmann\",\n      \"email\": \"aaron.heckmann+github@gmail.com\"\n    },\n   ...,\n    {\n      \"name\": \"Young Jae Sim\",\n      \"email\": \"hanul@hanul.me\"\n    }\n  ],\n  \"dependencies\": {\n    \"accepts\": \"~1.3.4\",\n    \"array-flatten\": \"1.1.1\",\n    \"body-parser\": \"1.18.2\",\n    ...,\n    \"type-is\": \"~1.6.15\",\n    \"utils-merge\": \"1.0.1\",\n    \"vary\": \"~1.1.2\"\n  },\n  \"deprecated\": false,\n  \"description\": \"Fast, unopinionated, minimalist web framework\",\n  \"devDependencies\": {\n    \"after\": \"0.8.2\",\n    \"connect-redis\": \"~2.4.1\",\n    ...,\n    \"should\": \"13.1.0\",\n    \"supertest\": \"1.2.0\",\n    \"vhost\": \"~3.0.2\"\n  },\n  \"engines\": {\n    \"node\": \">= 0.10.0\"\n  },\n  \"files\": [\"LICENSE\", \"History.md\", \"Readme.md\", \"index.js\",\"lib/\"],\n  \"homepage\": \"http://expressjs.com/\",\n  \"keywords\": [\n    \"express\", \"framework\", \"sinatra\", \"web\", \"rest\", \"restful\", \"router\", \"app\", \"api\"\n  ],\n  \"license\": \"MIT\",\n  \"name\": \"express\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/expressjs/express.git\"\n  },\n  \"scripts\": {\n    \"lint\": \"eslint .\",\n    \"test\": \"mocha --require test/support/env --reporter spec --bail --check-leaks test/ test/acceptance/\"\n  },\n  \"version\": \"4.16.1\"\n}\n```", "```js\nnpm init\n\npackage name: (hello-node) \nversion: (1.0.0) \ndescription: Simple hello world http handler\nentry point: (index.js) app.js\ntest command: test\ngit repository: \nkeywords: \nauthor: Valentin Bojinov\nlicense: (ISC) \nAbout to write to /home/valio/nodejs8/hello-node/package.json:\n\n{\n \"name\": \"hello-node\",\n \"version\": \"1.0.0\",\n \"description\": \"Simple hello world http handler\",\n \"main\": \"app.js\",\n \"scripts\": {\n \"test\": \"test\"\n },\n \"author\": \"Valentin Bojinov\",\n \"license\": \"ISC\"\n}\n\nIs this ok? (yes) yes\n\n```", "```js\nvar http = require('http');\n\nhttp.createServer((request, response) => {\n  response.writeHead(200, {\n    'Content-Type' : 'text/plain'\n  });\n  response.end('Hello from Node.JS');\n  console.log('Hello handler requested');\n}).listen(8180, '127.0.0.1', () => {\n  console.log('Started Node.js http server at http://127.0.0.1:8180');\n});\n```", "```js\nnpm install -g http --save\nnode hello-node.js  \n```", "```js\nvar http = require('http');\nvar port = 8180;\n\nfunction handleGetRequest(response) {\n  response.writeHead(200, {'Content-Type' : 'text/plain'});\n  response.end('Get action was requested');\n}\n\nfunction handlePostRequest(response) {\n  response.writeHead(200, {'Content-Type' : 'text/plain'});\n  response.end('Post action was requested');\n}\n\nfunction handlePutRequest(response) {\n  response.writeHead(200, {'Content-Type' : 'text/plain'});\n  response.end('Put action was requested');\n}\n\nfunction handleDeleteRequest(response) {\n  response.writeHead(200, {'Content-Type' : 'text/plain'});\n  response.end('Delete action was requested');\n}\n\nfunction handleBadRequest(response) {\n  console.log('Unsupported http mehtod');\n  response.writeHead(400, {'Content-Type' : 'text/plain'  });\n  response.end('Bad request');\n}\n\nfunction handleRequest(request, response) {\n  switch (request.method) {\n    case 'GET':\n      handleGetRequest(response);\n      break;\n    case 'POST':\n      handlePostRequest(response);\n      break;\n    case 'PUT':\n      handlePutRequest(response);\n      break;\n    case 'DELETE':\n      handleDeleteRequest(response);\n      break;\n    default:\n      handleBadRequest(response);\n      break;\n  }\n  console.log('Request processing completed');\n}\n\nhttp.createServer(handleRequest).listen(8180, '127.0.0.1', () => {\n  console.log('Started Node.js http server at http://127.0.0.1:8180');\n});\n```", "```js\nfunction handleGetRequest(response) {\n  response.writeHead(200, {'Content-Type' : 'text/plain'});\n  response.end('Get action was requested');\n}\n\nfunction handlePostRequest(response) {\n  response.writeHead(200, {'Content-Type' : 'text/plain'});\n  response.end('Post action was requested');\n}\n\nfunction handlePutRequest(response) {\n  response.writeHead(200, {'Content-Type' : 'text/plain'});\n  response.end('Put action was requested');\n}\n\nfunction handleDeleteRequest(response) {\n  response.writeHead(200, {'Content-Type' : 'text/plain'});\n  response.end('Delete action was requested');\n}\n\nfunction handleBadRequest(response) {\n  console.log('Unsupported http mehtod');\n  response.writeHead(400, {'Content-Type' : 'text/plain'  });\n  response.end('Bad request');\n}\n\nexports.handleRequest = function(request, response) {\n  switch (request.method) {\n    case 'GET':\n      handleGetRequest(response);\n      break;\n    case 'POST':\n      handlePostRequest(response);\n      break;\n    case 'PUT':\n      handlePutRequest(response);\n      break;\n    case 'DELETE':\n      handleDeleteRequest(response);\n      break;\n    default:\n      handleBadRequest(response);\n      break;\n  }\n  console.log('Request processing completed');\n}\n```", "```js\nvar http = require('http');\nvar port = 8180;\n\nvar httpModule = require('./modules/http-module');\n\nhttp.createServer(httpModule.handleRequest).listen(8180, '127.0.0.1', () => {\n  console.log('Started Node.js http server at http://127.0.0.1:8180');\n});\n```", "```js\nexports.add = function (x, y) { \n  return x + y; \n}; \nexports.subtract = function (x, y) { \n  return x - y; \n}; \n```", "```js\nvar math = require('../modules/math');\nexports.addTest = function (test) {\n  test.equal(math.add(1, 1), 2);\n  test.done();\n};\nexports.subtractTest = function (test) {\n  test.equals(math.subtract(4,2), 2);\n  test.done();\n};\n```", "```js\nnodeunit test/test-math.js    \n    test-math.js\n    test-math.js\n addTest\n subtractTest\n\nOK: 2 assertions (5ms)\n```", "```js\nexports.test_add = function (test) { \n    test.equal(math.add(1, 1), 3); \n    test.done(); \n}; \n```", "```js\nnodeunit test-math.js\ntest-math.js\n addTest\nat Object.equal (/usr/lib/node_modules/nodeunit/lib/types.js:83:39)\nat Object.exports.addTest (../hello-node/test/test-math.js:\n(..)\n\nAssertionError: 2 == 3\n subtractTest\nFAILURES: 1/2 assertions failed (12ms)\n```", "```js\nnpm install -g sinon\n```", "```js\nvar sinon = require('sinon'); \nexports.testAPI(test){...} \n```", "```js\nvar api = {'methodX' : function () {},  \n  'methodY' : function() {},  \n  'methodZ' : function() {}}; \n```", "```js\nvar mock = sinon.mock(api);\n```", "```js\nmock.expects('methodX').once().withArgs('xyz') \n.returns('abc'); \napi.methodX('xyz') \n```", "```js\nmock.expects('methodX').once().withArgs('xyz') \n.returns('abc');           \ntest.equals(api.methodX('xyz'), 'abc'); \nmock.verify(); \n```", "```js\nvar sinon = require('sinon');\nexports.handleGetRequestTest =  (test) => {\n  var response = {'writeHead' : () => {}, 'end': () => {}};\n  var responseMock = sinon.mock(response);\n    responseMock.expects('end').once().withArgs('Get action was requested');\n    responseMock.expects('writeHead').once().withArgs(200, {\n      'Content-Type' : 'text/plain'});\n\n  var request = {};\n  var requestMock = sinon.mock(request);\n  requestMock.method = 'GET';\n\n  var http_module = require('../modules/http-module');\n  http_module.handleRequest(requestMock, response);\n  responseMock.verify();\n  test.done();\n};\n```", "```js\nnodeunit test/test-http-module.js \n\ntest-http-module.js\nRequest processing completed\n handleGetRequestTest\n\nOK: 0 assertions (32ms)\n```", "```js\nnpm install -g jitsu \n```", "```js\nnpm install -g heroku-cli\n```"]