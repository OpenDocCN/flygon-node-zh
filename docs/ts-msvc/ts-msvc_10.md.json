["```ts\nscripts:{ \u2026 \"audit\":\"auditjs\" ...}\n```", "```ts\nnpm install express-limiter redis --save\n```", "```ts\nlet client = require('redis').createClient()\n..\nlet limiter = require('express-limiter')(this.app, client)\n..\n//limits requests to 100 per hour ip ip address\n    limiter({\n        lookup:['connection.remoteAddress'],\n        total:100,\n        expire:1000*60*60\n    });\n```", "```ts\nthis.app.use(\n  session({\n    secret: 'mySecretCookieSalt',\n    name: 'mycookieSessionid',\n    saveUninitialized: true,\n    resave: false,\n    cookie: {\n      httpOnly: true,\n      secure: true,\n      domain: 'typescript-microservices.com',\n      path: '/hello-world',\n      expires: new Date(Date.now() + 60 * 60 * 1000)\n    }\n  }))\n```", "```ts\nthis.app.use(helmet())\n```", "```ts\nnpm install tslint --save\nnpm install tslint-microsoft-contrib --save\n```", "```ts\n \"analyze\":\"node ./node_modules/tslint/bin/tslint \n            -r node_modules/tslint-microsoft-contrib/\n            -c tslint.json\n            -s src/**/*.ts\"\n```", "```ts\nloadtest -c 100 --rps 250 <my-aws-load-balancer-url>\n```", "```ts\n gcloud config set project <project_id>\n```", "```ts\nsudo docker build -t firstypescriptms\nsudo docker run -p 8080:3000 -d firsttypescriptms:latest\n```", "```ts\ngcloud container clusters create <name> --zone <zone>\n```", "```ts\ngcloud container clusters get-credentials hello-world-cluster --zone us-east1-b\n```", "```ts\ndocker build -t gcr.io/<PROJECT_ID>/hello-world-image:v1 .\ngcloud docker -- push gcr.io/<PROJECT_ID>/hello-world-image:v1\n```", "```ts\nkubectl create -f deployment.yml --save-config\n```", "```ts\nkubectl expose deployment hello-world-deployment --type=\"LoadBalancer\"\n```"]