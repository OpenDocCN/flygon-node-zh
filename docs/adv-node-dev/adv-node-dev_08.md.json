["```js\n<!DOCTYPE html>\n<html>\n  <head>\n  </head>\n  <body>\n  </body>\n</html>\n```", "```js\n<head>\n  <meta charset=\"utf-8\">\n\n</head>\n```", "```js\n<head>\n  <meta charset=\"utf-8\">\n  <title>Join | ChatApp</title>\n  <link rel=\"stylesheet\" href=\"/css/styles.css\">\n</head>\n```", "```js\n<!DOCTYPE html>\n\n<html>\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Chat | ChatApp</title>\n  <link rel=\"stylesheet\" href=\"/css/styles.css\">\n</head>\n```", "```js\n<head> \n  <meta charset=\"utf-8\"> \n  <title>Join | ChatApp</title> \n  <meta name=\"viewport\" content=\"\"> \n  <link rel=\"stylesheet\" href=\"/css/style.css\"> \n</head> \n```", "```js\n<head>\n  <meta charset=\"utf-8\">\n  <title>Join | ChatApp</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\">\n  <link rel=\"stylesheet\" href=\"/css/styles.css\">\n</head>\n```", "```js\n  <body class=\"centered-form\">\n  </body>\n</html>\n```", "```js\n<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"utf-8\">\n  <title>Join | ChatApp</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\">\n  <link rel=\"stylesheet\" href=\"/css/styles.css\">\n</head>\n\n<body class=\"centered-form\">\n  <div class=\"centered-form__form\">\n  </div>\n</body>\n\n</html>\n```", "```js\n<body class=\"centered-form\">\n  <div class=\"centered-form__form\">\n    <div class=\"form-field\"></div>\n    <div class=\"form-field\"></div>\n    <div class=\"form-field\"></div>\n    <div class=\"form-field\"></div>\n  </div>\n```", "```js\n<body class=\"centered-form\">\n  <div class=\"centered-form__form\">\n    <form>\n      <div class=\"form-field\"></div>\n      <div class=\"form-field\"></div>\n      <div class=\"form-field\"></div>\n      <div class=\"form-field\"></div>\n    </form>\n  </div>\n</body>\n```", "```js\n<form action=\"/chat.html\">\n  <div class=\"form-field\">\n    <h3>Join a Chat</h3>\n  </div>\n```", "```js\n<div class=\"form-field\">\n  <label>Display name</label>\n</div>\n```", "```js\n<div class=\"form-field\">\n  <label>Display name</label>\n  <input type=\"text\" name=\"name\" autofocus/>\n</div>\n```", "```js\n<div class=\"form-field\">\n  <label>Room name</label>\n  <input type=\"text\" name=\"room\"/>\n</div>\n```", "```js\n<div class=\"form-field\">\n  <button>Join</button>\n</div>\n```", "```js\ngit commit -m 'Add join page that submits to chat.html'\n```", "```js\n<script src=\"img/socket.io.js\"></script>\n<script src=\"img/jquery-3.3.1.min.js\"></script>\n<script src=\"img/moment.js\"></script>\n<script src=\"img/mustache.js\"></script>\n<script src=\"img/deparam.js\"></script>\n<script src=\"img/chat.js\"></script>\n```", "```js\nsocket.on('connect', function () {\n  console.log('Connected to server');\n});\n```", "```js\nsocket.on('connect', function () {\n  var params = jQuery.deparam(window.location.search);\n\n  socket.emit('join')\n});\n```", "```js\nsocket.emit('join', params)\n```", "```js\nsocket.on('connect', function () {\n  var params = jQuery.deparam(window.location.search);\n\n  socket.emit('join', params, function (err) {\n  });\n});\n```", "```js\nsocket.on('connect', function () {\n  var params = jQuery.deparam(window.location.search);\n\n  socket.emit('join', params, function (err) {\n    if(err) {\n\n   } else {\n\n  });\n});\n```", "```js\nsocket.on('join');\n```", "```js\nsocket.on('join', (params, callback) => {\n\n});\n```", "```js\nvar isRealString = (str) => {\n  return typeof str === 'string';\n};\n```", "```js\n''\n```", "```js\n'   '\n```", "```js\n' f  '\n```", "```js\n'f'\n```", "```js\n' f r  '\n```", "```js\n'f r'\n```", "```js\nvar isRealString = (str) => {\n  return typeof str === 'string' && str.trim().length > 0;\n};\n```", "```js\nvar isRealString = (str) => {\n  return typeof str === 'string' && str.trim().length > 0;\n};\n\nmodule.exports = {isRealString};\n```", "```js\nconst {generateMessage, generateLocationMessage} = require('./utils/message');\nconst {isRealString} = require('./utils/validation');\n```", "```js\nsocket.on('join', (params, callback) => {\n  if(isRealString(params.name))\n});\n```", "```js\nsocket.on('join', (params, callback) => {\n  if(!isRealString(params.name) || !isRealString(params.room))\n});\n```", "```js\nsocket.on('join', (params, callback) => {\n  if(!isRealString(params.name) || !isRealString(params.room)) {\n    callback('Name and room name are required.');\n  }\n});\n```", "```js\nsocket.on('join', (params, callback) => {\n  if(!isRealString(params.name) || !isRealString(params.room)) {\n    callback('Name and room name are required.');\n  }\n\n  callback();\n});\n```", "```js\nsocket.on('connect', function () {\n  var params = jQuery.deparam(window.location.search);\n\n  socket.emit('join', params, function (err) {\n    if(err) {\n\n    } else {\n\n    } \n  });\n});\n```", "```js\nsocket.on('connect', function () {\n  var params = jQuery.deparam(window.location.search);\n  socket.emit('join', params, function (err) {\n    if(err) {\n      window.location.href = '/';\n    } else {\n\n    }\n  });\n});\n```", "```js\nif(err) {\n  alert(err);\n    window.location.href = '/';\n  } else {\n```", "```js\nsocket.on('connect', function () {\n  var params = jQuery.deparam(window.location.search);\n\n  socket.emit('join', params, function (err) {\n    if(err) {\n      alert(err);    \n      window.location.href = '/';    \n    } else {\n      console.log('No error');\n    }\n  });\n});\n```", "```js\nconst expect = require('expect');\n```", "```js\nconst expect = require('expect');\n\n  // import isRealString\n  const {isRealString} = require('./validation');\n```", "```js\ndescribe('isRealString', () => {\n  it('should reject non-string values')\n});\n```", "```js\ndescribe('isRealString', () => {\n  it('should reject non-string values', () => {\n    var res = isRealString(98);\n```", "```js\ndescribe('isRealString', () => {\n  it('should reject non-string values', () => {\n    var res = isRealString(98);\n    expect(res).toBe(false);\n  });\n});\n```", "```js\nit('should reject string with only spaces', () => {\n  var res = isRealString(' ');\n  expect(res).toBe(false);\n});\n```", "```js\nit('should allow string with non-space characters', () => {\n  var res = isRealString('  Andrew  ');\n});\n```", "```js\nconst expect = require('expect');\n\nconst {isRealString} = require('./validation');\n\ndescribe('isRealString', () => {\n  it('should reject non-string values', () => {\n    var res = isRealString(98);\n    expect(res).toBe(false);\n  });\n\n  it('should reject string with only spaces', () => {\n    var res = isRealString('    ');\n    expect(res).toBe(false);\n  });\n\n  it('should allow string with non-space characters', () => {\n    var res = isRealString('D');\n    expect(res).toBe(true);\n  });\n});\n```", "```js\nsocket.on('join', (params, callback) => {\n  if(!isRealString(params.name) || !isRealString(params.room)) {\n    callback('Name and room name are required.');\n  }\n\n  socket.join(params.room);\n\n  callback();\n});\n```", "```js\nsocket.on('join', (params, callback) => {\n  if(isRealString(params.name) || !isRealString(params.room)) {\n    callback('Name and room name are required.');\n  }\n\n  socket.join(params.room);\n  // socket.leave('The Office Fans');\n\n  callback();\n});\n```", "```js\nsocket.join(params.room);\n// socket.leave('The Office Fans');\n\n// io.emit ->io.to('The Office Fans')\n```", "```js\nsocket.join(params.room);\n// socket.leave('The Office Fans');\n\n// io.emit ->io.to('The Office Fans').emit\n```", "```js\nsocket.join(params.room); \n// socket.leave('The Office Fans'); \n\n// io.emit ->io.to('The Office Fans').emit\n// socket.broadcast.emit -> socket.broadcast.to('The Office Fans') \n```", "```js\nsocket.join(params.room);\n  // socket.leave('The Office Fans');\n  // io.emit ->io.to('The Office Fans').emit\n  // socket.broadcast.emit -> socket.broadcast.to('The Office Fans').emit\n  // socket.emit\n```", "```js\nsocket.emit('newMessage', generateMessage('Admin', 'Welcome to the chat app'));\n\nsocket.broadcast.emit('newMessage', generateMessage('Admin', 'New user joined'));\n```", "```js\nsocket.emit('newMessage', generateMessage('Admin', 'Welcome to the chat app'));\n```", "```js\nsocket.broadcast.to(params.room).emit('newMessage', generateMessage('Admin', 'New user joined'`));\n```", "```js\nsocket.broadcast.to(params.room).emit('newMessage', generateMessage('Admin', `${params.name} has joined.`));\n```"]