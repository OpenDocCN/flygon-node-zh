["```js\n* {\n   color: red;\n}\n```", "```js\n<head>\n  <meta charset=\"utf-8\">\n  <link rel=\"stylesheet\" href=\"/css/styles.css\">\n</head>\n```", "```js\n<body class=\"chat\">\n```", "```js\n<body class =\"chat\">\n\n  <div class=\"chat\">\n\n  </div>\n```", "```js\n<div class =\"chat__sidebar\">\n  <h3>People</h3>\n  <div id=\"user\"></div>\n</div>\n```", "```js\n<div class=\"chat__main\">\n  <ol id=\"messages\"></ol>\n\n  <form id=\"message-form\">\n    <input name=\"message\" type=\"text\" placeholder=\"Message\"/>\n    <button>Send</button>\n  </form>\n  <button id=\"send-location\">Send Location</button>\n</div>\n```", "```js\n<div class=\"chat__main\">\n  <ol id=\"messages\" class=\"chat__messages\"></ol>\n\n  <form id=\"message-form\">\n    <input name=\"message\" type=\"text\" placeholder=\"Message\"/>\n    <button>Send</button>\n  </form>\n  <button id=\"send-location\">Send Location</button>\n</div>\n```", "```js\n<div class=\"chat__footer\">\n  <form id=\"message-form\">\n    <input name=\"message\" type=\"text\" placeholder=\"Message\"/>\n    <button>Send</button>\n  </form>\n  <button id=\"send-location\">Send Location</button>\n</div>\n```", "```js\njQuery('#message-form').on('submit', function (e) {\n  e.prevenDefault();\n\n  var messageTextbox =\n\n  socket.emit('createMessage', {\n    from: 'User',\n    text: jQuery('[name=message]').val()\n }, function () {\n    jQuery('[name=message]').val('')\n  });\n});\n```", "```js\nvar messageTextbox = jQuery('[name=message]'); \n\nsocket.emit('createMessage', { \n  from: 'User', \n  text: messageTextbox.val() \n}, function() { \n  messageTextbox.val('') \n}); \n```", "```js\nsocket.broadcast.emit('newMessage', generateMessage('Admin, 'New user joined'));\n\nsocket.on('createMessage', (message, callback) => {\n  console.log('createMessage', message);\n  io.emit('newMessage', generateMessage(message.form, message.text));\n  callback();\n});\n```", "```js\n<div class=\"chat__footer\">\n<form id=\"message-form\">\n  <input name=\"message\" type=\"text\" placeholder=\"Message\" autofocus autocomplete=\"off\"/>\n  <button>Send</button>\n<form>\n<button id=\"send-location\">Send Location</button>\n```", "```js\nvar locationButton = jQuery('#send-location');\nlocationButton.on('click', function () {\n  if (!navigator.geolocation) {\n    return alert('Geolocation not supported by your browser.');\n  }\n\n  locationButton.attr('disabled', 'disabled');\n```", "```js\nlocationButton.attr('disabled', 'disabled');\n\nnavigator.geolocation.getCurrentPosition(function (position) {\n  locationButton.removeAttr('disabled');\n  socket.emit('createLocationMessage', {\n    latitude: position.coords.latitude,\n    longitude: position.coords.longitude\n  });\n```", "```js\nnavigator.geolocation.getCurrentPosition(function (position){ \n  locationButton.removeAttr('disabled'); \n  socket.emit('createLocationMessage', { \n    latitude: position.coords.latitude, \n    longitude: position.coords.longitude \n  }); \n}, function(){ \n   locationButton.removeAttr('disabled');\n   alert('Unable to fetch location'); \n}); \n```", "```js\nvar locationButton = jQuery('#send-location');\nlocationButton.on('click', function (){\n  if (!navigator.geolocation){\n    return alert('Geolocation not supported by your browser.');\n  }\n  locationButton.attr('disabled', 'disabled').text('Sending location...');\n```", "```js\nlocationButton.attr('disabled', 'disabled').text('Sending location...'); \n\nnavigator.geolocation.getCurrentPosition(function (position){ \n  locationButton.removeAttr('disabled').text('Send location'); \n  socket.emit('createLocationMessage', { \n    latitude: position.coords.latitude, \n    longitude: position.coords.longitude \n  }); \n}, function(){ \n    locationButton.removeAttr('disabled').text('Send location'); \n    alert('Unable to fetch location'); \n}); \n```", "```js\n**git commit -m 'Add css for chat page'**\n```", "```js\n// Jan 1st 1970 00:00:00 am\n\n0\n```", "```js\n// Jan 1st 1970 00:00:10 am\n\nvar date = new Date();\nconsole.log(date.getMonth());\n```", "```js\n**nodemon playground/time.js**\n```", "```js\nvar date = new Date();\nvar months = ['Jan', 'Feb']\nconsole.log(date.getMonth());\n```", "```js\n**npm i moment@2.21.0 --save**\n```", "```js\nvar moment = require('moment');\n\n// Jan 1st 1970 00:00:10 am\n\n//var date = new Date();\n//var months = ['Jan', 'Feb']\n//console.log(date.getMonth());\n```", "```js\nvar moment = require('moment');\n\n// Jan 1st 1970 00:00:10 am\n\n//var date = new Date();\n//var months = ['Jan', 'Feb']\n//console.log(date.getMonth());\n\nvar date = moment();\n```", "```js\nvar moment = require('moment');\nvar date = moment(); \nconsole.log(date.format());\n```", "```js\nvar date = moment(); \nconsole.log(date.format('MMM'));\n```", "```js\nconsole.log(date.format('MMM YYYY')); \n```", "```js\nconsole.log(date.format('MMM Do YYYY')); \n```", "```js\nconsole.log(date.format('MMM Do, YYYY'));\n```", "```js\nvar date = moment();\ndate.add(1, 'years')\nconsole.log(date.format('MMM Do, YYY'));\n```", "```js\nvar date = moment();\ndate.add(100, 'year')\nconsole.log(date.format('MMM Do, YYY'))\n```", "```js\ndate.add(100, 'year').subtract(9, 'months');\n```", "```js\nvar date = moment();\nconsole.log(date.format(''))\n```", "```js\nvar date = moment(); \nconsole.log(date.format('h')); \n```", "```js\nconsole.log(date.format('h:mm')); \n```", "```js\nvar date = moment();\nconsole.log(date.format('h:mm a'))\n```", "```js\nvar createdAt = 1234; \nvar date = moment(createdAt); \n```", "```js\nvar someTimestamp = moment().valueOf(); \nconsole.log(someTimestamp);\n```", "```js\nvar moment = require('moment');\n\nvar generateMessage = (from, text) => {\n  return {\n    from,\n    text,\n    createAt: new Date().getTime()\n  };\n};\n```", "```js\nvar moment = require('moment');\n\nvar generateMessage = (from, text) => {\n  return {\n    from,\n    text,\n    createdAt: moment().valueOf()\n  };\n};\n\nvar generateLocationMessage = (from, latitude, longitude) => {\n  return {\n    from,\n    url: `https://www.google.com/maps?q=${latitude},${longitude}`,\n    createdAt: moment().valueOf()\n  }\n};\n```", "```js\n**npm test**\n```", "```js\n<script src=\"img/socket.io.js\"></script>\n<script src=\"img/jquery-3.1.0.min.js\"></script>\n<script src=\"img/moment.js\"></script>\n<script src=\"img/index.js\"></script>\n```", "```js\n**nodemon server/server.js**\n```", "```js\nsocket.on('newMessage', function (message) {\n  var formattedTime = moment(message.createAt)\n```", "```js\nvar formattedTime = moment(message.createdAt).format('h:mm a'); \n```", "```js\nsocket.on('newMessage', function (message) {\n  var formattedTime = moment(message.createAt).format('h:mm a');\n  var li = jQuery('<li></li>');\n  li.text('${message.from} ${formattedTime}: ${message.text}');\n```", "```js\nvar formattedTime = moment(message.createdAt).format('h:mm a'); \n```", "```js\nsocket.on('newLocationMessage', function(message) {\n  var formattedTime = moment(message.createAt).format('h:mm a');\n```", "```js\nsocket.on('newLocationMessage', function(message) {\n  var formattedTime = moment(message.createAt).format('h:mm a');\n  var li = jquery('<li></li>');\n  var a = jQuery('<a target=\"_blank\">My current location</a>');\n\n  li.text(`${message.from} ${formattedTime}: `);\n```", "```js\ngit commit -m 'Format timestamp using momentjs'\n```", "```js\n<script src=\"img/moment.js\"></script>\n<script src=\"img/mustache.js\"></script>\n```", "```js\n<script id = \"message-template\" type=\"text/template\">\n\n</script>\n```", "```js\n<script id=\"message-template\" type=\"text/template\"> \n  <p>This is a template</p> \n</script>\n```", "```js\nsocket.on('newMessage', function (message) {\n  var template = jquery('#message-template').html();\n```", "```js\nsocket.on('newMessage', function (message) {\n  var template = jquery('#message-template').html();\n  var html = Mustache.render(template);\n```", "```js\nsocket.on('newMessage', function (message) {\n  var template = jQuery('#message-template').html();\n  var html = Mustache.render(template);\n\n  jQuery('#messages').append(html);\n```", "```js\n<script id=\"message-template\" type=\"text/template\">\n  <p>{{text}}</p>\n</script>\n```", "```js\nsocket.on('newMessage', function (message) {\n  var template = jquery('#message-template').html();\n  var html = Mustache.render(template, {\n\n  });\n```", "```js\nvar html = Mustache.render(template, { \n  text: message.text \n}); \n```", "```js\nsocket.on('newMessage', function (message) {\n  var formattedTime = moment(message.createAt).format('h:mm a');\n  var template = jQuery('#message-template').html();\n  var html = Mustache.render(template, {\n\n  });\n```", "```js\nvar html = Mustache.render(template, { \n  text: message.text, \n  from: message.from, \n  createdAt: formattedTime \n}); \n```", "```js\n<script id=\"message-template\" type=\"text/template\">\n  <li class=\"message\">\n    <div></div>\n    <div></div>\n  </li>\n</script>\n```", "```js\n<script id=\"message-template\" type=\"text/template\">\n  <li class=\"message\">\n    <div class=\"message__title\">\n      <h4>{{from}}</h4>\n    </div>\n```", "```js\n<script id=\"message-template\" type=\"text/template\">\n  <li class=\"message\">\n    <div class=\"message__title\">\n      <h4>{{from}}</h4>\n      <span>{{createAt}}</span>\n    </div>\n```", "```js\n<script id=\"message-template\" type=\"text/template\"> \n  <li class=\"message\"> \n    <div class=\"message__title\"> \n      <h4>{{from}}</h4> \n      <span>{{createdAt}}</span> \n    </div> \n    <div class=\"message__body\"> \n      <p>{{text}}</p> \n    </div> \n  </li> \n</script> \n```", "```js\n<script id=\"location-message-template\" type=\"text/template\">\n  <li class=\"message\">\n    <div class=\"message__title\">\n    <h4>{{from}}</h4>\n    <span>{{createAt}}</span>\n  </div>\n  <div class=\"message__body\">\n    <p>{{text}}</p>\n  </div>\n</li>\n</script>\n```", "```js\n<div class=\"message__body\">\n  <p>\n    <a href=\"{{url}}\"\n  </p>\n</div>\n```", "```js\n<script id=\"location-message-template\" type=\"text/template\"> \n  <li class=\"message\"> \n    <div class=\"message__title\"> \n      <h4>{{from}}</h4> \n      <span>{{createdAt}}</span> \n    </div> \n    <div class=\"message__body\"> \n      <p> \n        <a href=\"{{url}}\" target=\"_blank\">My current location</a> \n      </p> \n    </div> \n  </li> \n</script> \n```", "```js\nsocket.on('newLocationMessage', function (message) {\n  var formattedTime = moment(message.createAt).format('h:mm a');\n  // var li = jQuery('<li></li>');\n  // var a = jQuery('<a target=\"_blank\">My current location</a>');\n  // \n  // li.text(`${message.from} ${formattedTime}: `);\n  // a.attr('href', message.url);\n  // li.append(a);\n  // jQuery('#message').append(li);\n});\n```", "```js\nsocket.on('newLocationMessage', function (message) {\n  var formattedTime = moment(message.createAt).format('h:mm a');\n  var template = jQuery('#location-message-template').html();\n```", "```js\nsocket.on('newLocationMessage', function (message) {\n  var formattedTime = moment(message.createAt).format('h:mm a');\n  var template = jQuery('#location-message-template').html();\n  var html = Mustache.render(template, {\n\n  });\n```", "```js\nsocket.on('newLocationMessage', function (message) {\n  var formattedTime = moment(message.createAt).format('h:mm a');\n  var template = jQuery('#location-message-template').html();\n  var html = Mustache.render(template, {\n    from: message.from,\n    url: message.url,\n    createdAt: formattedTime\n  });\n```", "```js\nsocket.on('newLocationMessage', function(message) { \n  var formattedTime = moment(message.createdAt).format('h:mm a'); \n  var template = jQuery('#location-message-template').html(); \n  var html = Mustache.render(template, { \n    from: message.from, \n    url: message.url, \n    createdAt: formattedTime \n  }); \n\n  jQuery('#messages').append(html);\n}); \n```", "```js\n**git commit -m 'Add mustache.js for message templates'**\n```", "```js\nvar socket = io();\n\nfunction scrollToBottom () {\n\n}\n```", "```js\nsocket.on('newMessage', function (message) {\n  var formattedTime = moment(message.createAt).format('h:mm a');\n  var template = jQuery('#message-template').html();\n  var html = Mustache.render(template, {\n    text: message.text,\n    from: message.from,\n    createdAt: formattedTime\n  });\n\n  jQuery('#message').append(html);\n  scrollToBottom();\n}); \n```", "```js\nsocket.on('newLocationMessage', function (message) {\n  var formattedTime = moment(message.createAt).format('h:mm a');\n  var template = jQuery('#message-template').html();\n  var html = Mustache.render(template, {\n    from: message.from,\n    url: message.url,\n    createdAt: formattedTime\n  });\n\n  jQuery('#message').append(html);\n  scrollToBottom();\n}); \n```", "```js\nfunction scrollToBottom () {\n  // Selectors\n  var message = jQuery('#message');\n```", "```js\nfunction scrollToBottom () {\n  // Selectors\n  var message = jQuery('#message'); \n  // Heights\n  var clientHeight = message.prop('clientHeight');\n}\n```", "```js\nfunction scrollToBottom() { \n  //selectors \n  var messages = jQuery('#messages'); \n  //Heights \n  var clientHeight = messages.prop('clientHeight'); \n  var scrollTop = messages.prop('scrollTop'); \n  var scrollHeight = messages.prop('scrollHeight');\n}\n```", "```js\nvar scrollHeight = message.prop('scrollHeight');\n\nif (clientHeight + scrollTop >= scrollHeight) {\n\n}\n```", "```js\nif (clientHeight + scrollTop >= scrollHeight) {\n  console.log('Should scroll');\n}\n```", "```js\nfunction scrollToBottom () {\n  // Selectors\n  var message = jQuery('#message'); \n  var newMessage = message.children();\n```", "```js\nvar newMessage = messages.children('li:last-child');\n```", "```js\nvar scrollHeight = messages.prop('scrolHeight');\nvar newMessageHeight = newMessage.innerHeight();\n```", "```js\nvar newMessageHeight = newMessage.innerHeight();\nvar lastMessageHeight = newMessage.prev().innerHeight();\n```", "```js\nfunction scrollToBottom() { \n  //selectors \n  var messages = jQuery('#messages'); \n  //Heights \n  var clientHeight = messages.prop('clientHeight'); \n  var scrollTop = messages.prop('scrollTop'); \n  var scrollHeight = messages.prop('scrollHeight'); \n  var newMessageHeight = newMessage.innerHeight(); \n  var lastMessageHeight = newMessage.prev().innerHeight(); \n\n  if(clientHeight + scrollTop + newMessageHeight + lastMessageHeight >= scrollHeight) { \n    console.log('Should scroll'); \n  }\n}\n```", "```js\nif(clientHeight + scrollTop + newMessageHeight + lastMessageHeight >= scrollHeight) {\n  messages.scrollTop(scrollHeight);\n}\n```", "```js\n**git commit -am 'Scroll to bottom if user is close to bottom'**\n```"]