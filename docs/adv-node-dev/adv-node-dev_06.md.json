["```js\nvar generateMessage = (from, text) => {\n\n};\n```", "```js\nvar generateMessage = (from, text) => { \n  return { \n    from, \n    text, \n    createdAt: new Date().getTime() \n  }; \n}; \n```", "```js\nvar generateMessage = (from, text) => { \n  return { \n    from, \n    text, \n    createdAt: new Date().getTime() \n  }; \n}; \n\nmodule.exports = {generateMessage}; \n```", "```js\nnpm install expect@1.20.2 mocha@5.0.5 --save-dev\n```", "```js\n\"scripts\": {\n  \"start\": \"node server/server.js\",\n  \"test\": \"echo \"Error: no test specified\" && exit 1\",\n  \"test-watch\": \"\"\n},\n```", "```js\n\"scripts\": {\n  \"start\": \"node server/server.js\",\n  \"test\": \"\",\n  \"test-watch\": \"nodemon --exec 'npm test'\"\n},\n```", "```js\nnpm install nodemon@1.17.2 --save-dev\n```", "```js\n\"scripts\": {\n  \"start\": \"node server/server.js\",\n  \"test\": \"mocha server/**/*.test.js\",\n  \"test-watch\": \"nodemon --exec 'npm test'\"\n},\n```", "```js\nvar expect = require('expect');\n```", "```js\ndescribe('generateMessage', () => {\n\n});\n```", "```js\nvar expect = require('expect');\nvar {generateMessage} = require('./message');\n\ndescribe('generateMessage', () => {\n\n});\n```", "```js\ndescribe('generateMessage', () => {\n  it('should generate correct message object', () => {\n    //store res in variable\n  });\n});\n```", "```js\nvar expect = require('expect');\nvar {generateMessage} = require('./message');\n\ndescribe('generateMessage', () => {\n  it('should generate correct message object', () => {\n    // store res in variable\n    // assert from match\n    // assert text match\n    // assert createdAt is number\n  });\n});\n```", "```js\ndescribe('generateMessage', () => {\n  it('should generate correct message object', () => {\n    var from = 'Jen';\n    var text = 'Some message';\n    var message = generateMessage(from, text);\n```", "```js\ndescribe('generateMessage', () => {\n  it('should generate correct message object', () => {\n    var from = 'Jen';\n    var text = 'Some message';\n    var message = generateMessage(from, text);\n\n    expect(message.createdAt).toBeA('number');\n```", "```js\nexpect(message.createdAt).toBeA('number');\nexpect(message).toInclude({\n\n});\n```", "```js\nexpect(message.createdAt).toBeA('number');\nexpect(message).toInclude({from, text});\n```", "```js\nconst socketIO = require('socket.io');\n\nconst {generateMessage} = require('./utils/message');\n```", "```js\nsocket.emit('newMessage', generateMessage('Admin', 'Welcome to the chat app'));\n```", "```js\nsocket.emit('newMessage', generateMessage('Admin', 'Welcome to the chat app'));\n```", "```js\nsocket.on('createMessage', (message) => {\n  console.log('createMessage', message);\n  io.emit('newMessage', generateMessage('Admin', 'New user joined'));                                \n```", "```js\nnodemon server/server.js\n```", "```js\ngit commit -m 'create generateMessage utility'\n```", "```js\nsocket.emit('createMessage', {\n  from: 'Frank',\n  text: 'Hi'\n});\n```", "```js\nnodemon server/server.js\n```", "```js\nsocket.emit('createMessage', { \n  from: 'Frank', \n  text: 'Hi' \n}, function () { \n  console.log('Got it'); \n}); \n```", "```js\nsocket.on('createMessage', (message, callback) => {\n  console.log('createMessage', message);\n  io.emit('newMessage', generateMessage(message.from, message.text));\n  callback();\n```", "```js\nsocket.on('createMessage', (message, callback) => {\n  console.log('createMessage', message);\n  io.emit('newMessage', generateMessage(message.from, message.text));\n  callback('This is from the server.');\n});\n```", "```js\nsocket.emit('createMessage', {\n  from: 'Frank',\n  text: 'Hi'\n}, function (data) {\n  console.log('Got it', data);\n});\n```", "```js\n<script src=\"img/socket.io.js\"></script>\n<script src=\"img/jquery-3.3.1.min.js\"></script>\n<script src=\"img/index.js\"></script>\n```", "```js\n<form id>\n\n</form>\n```", "```js\n<form id=\"message-form\">\n\n</form>\n```", "```js\n<form id=\"message-form\">\n  <button>Send</button>\n</form>\n```", "```js\n<form id=\"message-form\">\n  <input/>\n  <button>Send</button>\n</form>\n```", "```js\n<input name=\"message\" type=\"text\"/>\n```", "```js\n<form id=\"message-form\">\n  <input name=\"message\" type=\"text\" placeholder=\"Message\"/>\n  <button>Send</button>\n</form>\n```", "```js\nnodemon server/server.js\n```", "```js\njQuery('p');\n```", "```js\njQuery('#message-form').on('submit', function(){\n\n});\n```", "```js\njQuery('#message-form').on('submit', function(){\n  e.preventDefault();\n});\n```", "```js\njQuery('#message-form').on('submit', function(){\n  e.preventDefault();\n\n  socket.emit('createMessage', {\n\n  });\n});\n```", "```js\n  socket.emit('createMessage', { \n    from: 'User', \n    text: jQuery('')\n  })\n});\n```", "```js\n<input name=\"message\" type=\"text\" placeholder=\"Message\"/> \n```", "```js\n  socket.emit('createMessage', { \n    from: 'User', \n    text: jQuery('[name=message]').val();\n  })\n});\n```", "```js\njQuery('#message-form').on('submit', function (e) {\n  e.preventDefault();\n\n  socket.emit('createMessage', {\n    from: 'User',\n   text: jQuery('[name=message]').val()\n  }, function () {\n\n  })\n});\n```", "```js\n<body>\n  <p>Welcome to the chat app</p>\n  <ol></ol>\n```", "```js\n<ol id=\"messages\"></ol>\n```", "```js\nsocket.on('newMessage', function (message) {\n  console.log('newMessage', message);\n  var li = jQuery();\n});\n```", "```js\nsocket.on('newMessage', function (message) {\n  console.log('newMessage', message);\n  var li = jQuery('<li></li>');\n});\n```", "```js\nvar li = jQuery('<li></li>');\nli.text(`${message.from}: ${message.text}`);\n```", "```js\nvar li = jQuery('<li></li>');\nli.text(`${message.from}: ${message.text}`);\n\njQuery('#messeges').append\n```", "```js\nvar li = jQuery('<li></li>');\nli.text(`${message.from}: ${message.text}`);\n\njQuery('#messeges').append(li);\n});\n```", "```js\nsocket.emit('createMessage', { \n  from: 'Frank', \n  text: 'Hi' \n}, function (data) { \n  console.log('Got it', data); \n}); \n```", "```js\ngit commit -m 'Add form for messages and show incoming messages in browser'\n```", "```js\n  <form id=\"message-form\"> \n    <input name=\"message\" type=\"text\" placeholder=\"Message\"/> \n    <button>Send</button> \n  </form> \n  <button id=\"send-location\">Send Location</button> \n```", "```js\nvar locationButton = jQuery('#send-location');\n```", "```js\nvar locationButton = jQuery('#send-location');\nlocationButton.on\n```", "```js\nvar locationButton = jQuery('#send-location');\nlocationButton.on('click', function () {\n\n});\n```", "```js\nvar locationButton = jQuery('#send-location');\nlocationButton.on('click', function () {\n  if(navigator.geolocation){\n\n  }\n});\n```", "```js\nif(navigator.geolocation){\n  return.alert()\n}\n```", "```js\nvar locationButton = jQuery('#send-location');\nlocationButton.on('click', function ()\n  if (!navigator.geolocation) {\n    return alert('Geolocation not supported by your browser.');\n  }\n```", "```js\n  navigator.geolocation.getCurrentPosition(function (position) { \n  } \n}); \n```", "```js\n  navigator.geolocation.getCurrentPosition(function (position) { \n\n  }, function() {\n    alert('Unable to fetch location.');\n  });\n});\n```", "```js\n  navigator.geolocation.getCurrentPosition(function (position) {\n    console.log(position);\n      }, function () {\n    alert('Unable to fetch location.');\n  });\n});\n```", "```js\nnavigator.geolocation.getCurrentPosition(function (position) {\n  socket.emit('createLocationMessage', {\n  });\n});\n```", "```js\nnavigator.geolocation.getCurrentPosition(function (position) {\n  socket.emit('createLocationMessage', {\n    latitude: position.coords.latitude,\n    longitude: position.coords.longitude\n  });\n```", "```js\n  socket.on('createMessage', (message, callback) => { \n    console.log('createMessage', message); \n    io.emit('newMessage', generateMessage(message.from, message.text)); \n    callback('This is from the server.'); \n\n}); \n\n  socket.on('createLocationMessage', (coords) => { \n\n}); \n```", "```js\nsocket.on('createLocationMessage', (coords) => {\n  io.emit('newMessage', generateMessage)\n});\n```", "```js\nsocket.on('createLocationMessage', (coords) => {\n  io.emit('newMessage', generateMessage('Admin', `${coords.latitude}, ${coords.longitude}`));\n});\n```", "```js\nsocket.on('createLocationMessage', (coords) => { \n  io.emit('newLocationMessage', generateMessage('Admin', `${coords.latitude}, ${coords.longitude}`)); \n});\n```", "```js\nio.emit('newLocationMessage', generateLocationMessage('Admin', `${coords.latitude}, ${coords.longitude}`));\n```", "```js\nio.emit('newLocationMessage', generateLocationMessage('Admin', coords.latitude, coords.longitude));\n```", "```js\nconst {generateMessage, generateLocationMessage} = require('./utils/message');\n```", "```js\nvar generateLocationMessage = (from, latitude, longitude)\n```", "```js\nvar generateLocationMessage = (from, latitude, longitude) => {\n  return {\n\n  };\n};\n```", "```js\nvar generateLocationMessage = (from, latitude, longitude) => {\n  return {\n    from,\n    from,\n    url: ``,\n    createdAt: new Date().getTime()\n  };\n};\n```", "```js\nvar generateLocationMessage = (from, latitude, longitude) => { \n  return { \n    from, \n    url: `https://www.google.com/maps?q=${latitude},${longitude}`, \n    createdAt: new Date().getTime() \n  }; \n}; \n```", "```js\nvar generateLocationMessage = (from, latitude, longitude) => { \n  return { \n    from, \n    url: `https://www.google.com/maps?q=${latitude},${longitude}`, \n    createdAt: new Date().getTime() \n  }; \n}; \n\nmodule.exports = {generateMessage, generateLocationMessage}; \n```", "```js\nsocket.on('createLocationMessage', (coords) => {\n  io.emit('newLocationMessage', generateLocationMessage('Admin', coords.latitude, coords.longitude));\n});\n```", "```js\nsocket.on('newLocationMessage', function (message) { \n\n}); \n```", "```js\nsocket.on('newLocationMessage', function (message) {\n  var li = jQuery('<li></li>');\n});\n```", "```js\nsocket.on('newLocationMessage', function (message) {\n  var li = jQuery('<li></li>');\n  var a = jQuery('<a>My current location</a>');\n});\n```", "```js\nvar a = jQuery('<a target=\"_blank\">My current location</a>');\n```", "```js\nsocket.on('newLocationMessage', function (message) { \n  var li = jQuery('<li></li>'); \n  var a = jQuery('<a target=\"_blank\">My current location</a>'); \n\n}); \n```", "```js\nvar a = jQuery('<a target=\"_blank\">My current location</a>');\n\nli.text(`${message.from}: `);\n```", "```js\nli.text(`${message.from}: `);\na.attr('href', message.url)\n```", "```js\nsocket.on('newLocationMessage', function (message) {\n  var li = jQuery('<li></li>');\n  var a = jQuery('<a target=\"_blank\">My current location'</a>);\n\n  li.text(`${message.from}: `);\n  a.attr('href', message.url);\n  li.append(a);\n  jQuery('#messages').append(li);\n});\n```", "```js\ndescribe('generateLocationMessage', () => {\n\n});\n```", "```js\ndescribe('generateLocationMessage', () => {\n  it('should generate correct location object', () => {\n\n  });\n});\n```", "```js\ndescribe('generateLocationMessage', () => {\n  it('should generate correct location object', () => {\n    var from = 'Deb';\n    var latitude = 15;\n    var longitude = 19;\n  });\n});\n```", "```js\ndescribe('generateLocationMessage', () => {\n  it('should generate correct location object', () => {\n    var from = 'Deb';\n    var latitude = 15;\n    var longitude = 19;\n    var url = 'https://www.google.com/maps?q=15,19';\n  });\n});\n```", "```js\ndescribe('generateLocationMessage', () => {\n  it('should generate correct location object', () => {\n    var from = 'Deb';\n    var latitude = 15;\n    var longitude = 19;\n    var url = 'https://www.google.com/maps?q=15,19';\n    var message = generateLocationMessage(from, latitude, longitude);\n  });\n});\n```", "```js\nvar expect = require('expect');\n\nvar {generateMessage, generateLocationMessage} = require('./message');\n```", "```js\nexpect(message.createdAt).toBeA('number');\nexpect(message).toInclude({from, text});\n```", "```js\ndescribe('generateLocationMessage', () => {\n  it('should generate correct location object', () => {\n    var from = 'Deb';\n    var latitude = 15;\n    var longitude = 19;\n    var url = 'https://www.google.com/maps?q=15,19';\n    var message = generateLocationMessage(from, latitude, longitude);\n\n    expect(message.createdAt).toBeA('number');\n    expect(message).toInclude({from, url});\n  });\n});\n```", "```js\ngit commit -am 'Add geolocation support via geolocation api'\n```"]