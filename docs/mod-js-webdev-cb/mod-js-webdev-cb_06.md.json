["```js\n> npx create-react-app chapter06 Creating a new React app in /home/fkereki/JS_BOOK/modernjs/chapter06.\n\nInstalling packages. This might take a couple minutes.\nInstalling react-scripts...\n\n*...many lines describing installed packages, snipped out...*\n\nSuccess! Created chapter06 at /home/fkereki/JS_BOOK/modernjs/chapter06\nInside that directory, you can run several commands:\n\n  npm start\n    Starts the development server.\n\n  npm run build\n    Bundles the app into static files for production.\n\n  npm test\n    Starts the test runner.\n\n  npm run eject\n    Removes this tool and copies build dependencies, configuration files\n    and scripts into the app directory. If you do this, you can\u2019t go back!\n\nWe suggest that you begin by typing:\n\n  cd chapter06\n  npm start\n\nHappy hacking!\n```", "```js\n{\n    \"tabWidth\": 4,\n    \"printWidth\": 75\n}\n```", "```js\nnpm run addTypes prop-types@15\n```", "```js\nnpm install react-app-rewired react-app-rewire-eslint --save-dev\n```", "```js\nnpm install eslint-plugin-flowtype eslint-config-recommended eslint-plugin-react --save-dev\n```", "```js\n\"scripts\": {\n    \"start\": \"react-app-rewired start\",\n    \"build\": \"react-app-rewired build\",\n    \"test\": \"react-app-rewired test --env=jsdom\",\n    \"eject\": \"react-app-rewired eject\",\n    .\n    .\n    .\n```", "```js\nconst rewireEslint = require(\"react-app-rewire-eslint\");\nfunction overrideEslintOptions(options) {\n    // *do stuff with the eslint options...*\n    return options;\n}\n\n/* global module */\nmodule.exports = function override(config, env) {\n    config = rewireEslint(config, env, overrideEslintOptions);\n    return config;\n};\n```", "```js\n{\n    \"parser\": \"babel-eslint\",\n    \"parserOptions\": {\n        \"ecmaVersion\": 2017,\n        \"sourceType\": \"module\"\n    },\n    \"env\": {\n        \"node\": true,\n        \"browser\": true,\n        \"es6\": true,\n        \"jest\": true\n    },\n    \"extends\": [\n        \"eslint:recommended\",\n        \"plugin:flowtype/recommended\",\n        \"plugin:react/recommended\"\n    ],\n    \"plugins\": [\"babel\", \"flowtype\", \"react\"],\n    \"rules\": {\n        \"no-console\": \"off\",\n        \"no-var\": \"error\",\n        \"prefer-const\": \"error\",\n        \"flowtype/no-types-missing-file-annotation\": 0\n    }\n}\n```", "```js\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        .\n        .\n        .\n        <title>React App</title>\n    </head>\n    <body>\n <div id=\"root\"></div>\n    </body>\n</html>\n```", "```js\n/* @flow */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst root = document.getElementById(\"root\");\nif (root) {\n    ReactDOM.render(<App />, root);\n}\n```", "```js\n/* @flow */\n\nimport React from \"react\";\nimport { RegionsInformationTable } from \"./components/regionsInformationTable\";\n\nclass App extends React.PureComponent<{}> {\n render() {\n return <RegionsInformationTable />;\n }\n}\n\nexport default App;\n```", "```js\n// Source file: src/components/regionsInformationTable/index.js\n\n/* @flow */\n\nimport React from \"react\";\n\nimport { CountryFilterBar } from \"../countryFilterBar\";\nimport { ResultsDataTable } from \"../resultsDataTable.2\";\n\nexport class RegionsInformationTable extends React.PureComponent<\n    {},\n    {\n        countries: Array<{\n            code: string,\n            name: string\n        }>,\n        regions: Array<{\n            id: string,\n            name: string,\n            cities: number,\n            pop: number\n        }>\n    }\n> {\n    state = {\n        countries: [\n            { code: \"AR\", name: \"Argentine\" },\n            { code: \"BR\", name: \"Brazil\" },\n            { code: \"PY\", name: \"Paraguay\" },\n            { code: \"UY\", name: \"Uruguay\" }\n        ],\n\n        regions: []\n    };\n\n    update = (country: string) => {\n        console.log(`Country ... ${country}`);\n\n        this.setState(() => ({\n            regions: [\n                {\n                    id: \"UY/5\",\n                    name: \"Durazno\",\n                    cities: 8,\n                    pop: 60000\n                },\n                {\n                    id: \"UY/7\",\n                    name: \"Florida\",\n                    cities: 20,\n                    pop: 67000\n                },\n                {\n                    id: \"UY/9\",\n                    name: \"Maldonado\",\n                    cities: 17,\n                    pop: 165000\n                },\n                {\n                    id: \"UY/10\",\n                    name: \"Montevideo\",\n                    cities: 1,\n                    pop: 1320000\n                },\n                {\n                    id: \"UY/11\",\n                    name: \"Paysandu\",\n                    cities: 16,\n                    pop: 114000\n                }\n            ]\n        }));\n    }\n\n    render() {\n        return (\n            <div>\n <CountryFilterBar\n list={this.state.countries}\n onSelect={this.update}\n />\n <ResultsDataTable results={this.state.regions} />\n            </div>\n        );\n    }\n}\n```", "```js\n// Source file: src/components/countryFilterBar.js\n\n/* @flow */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class CountryFilterBar extends React.PureComponent<{\n    list?: Array<{ code: string, name: string }>,\n    onSelect: string => void\n}> {\n    static propTypes = {\n        list: PropTypes.arrayOf(PropTypes.object),\n        onSelect: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        list: []\n    };\n// *continued...*\n```", "```js\n// *...continues*\n\n    onSelect(e) {\n        this.props.onSelect(e.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                Country:&nbsp;\n                <select onChange={this.onSelect}>\n                    <option value=\"\">Select a country:</option>\n                    {this.props.list.map(x => (\n <option key={x.code} value={x.code}>\n {x.name}\n </option>\n ))}\n                </select>\n            </div>\n        );\n    }\n}\n```", "```js\n// Source file: src/components/resultsDataTable.1/index.js\n\n/* @flow */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ExpandableCard } from \"../expandableCard.1\";\nimport \"../general.css\";\n\nexport class ResultsDataTable extends React.PureComponent<{\n    results: Array<{\n        id: string,\n        name: string,\n        cities: number,\n        pop: number\n    }>\n}> {\n    static propTypes = {\n        results: PropTypes.arrayOf(PropTypes.object).isRequired\n    };\n\n    render() {\n        if (this.props.results.length === 0) {\n            return <div className=\"bordered\">No regions.</div>;\n        } else {\n            return (\n                <div className=\"bordered\">\n                    {this.props.results.map(x => (\n <ExpandableCard\n key={x.id}\n name={x.name}\n cities={x.cities}\n population={x.pop}\n />\n ))}\n                </div>\n            );\n        }\n    }\n}\n```", "```js\n    static propTypes = {\n        results: PropTypes.arrayOf(PropTypes.object)\n    };\n\n static defaultProps = {\n results: []\n }\n```", "```js\n// Source file: src/components/expandableCard.1/index.js\n\n/* @flow */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../general.css\";\n\nexport class ExpandableCard extends React.PureComponent<{\n    name: string,\n    cities: number,\n    population: number\n}> {\n    static propTypes = {\n        name: PropTypes.string.isRequired,\n        cities: PropTypes.number.isRequired,\n        population: PropTypes.number.isRequired\n    };\n\n    render() {\n        return (\n            <div className=\"bordered\">\n                NAME:{this.props.name}\n                <br />\n                CITIES:{this.props.cities}\n                <br />\n                POPULATION:{this.props.population}\n            </div>\n        );\n    }\n}\n```", "```js\n// Source file: src/components/countryFilterBar.old.style.js\n\n/* @flow */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../general.css\";\n\nexport class CountryFilterBar extends React.PureComponent<{\n    list: Array<{ code: string, name: string }>,\n    onSelect: string => void\n}> {\n constructor(props) {\n super(props);\n this.onSelect = this.onSelect.bind(this);\n }\n\n onSelect(e: { target: HTMLOptionElement }) {\n this.props.onSelect(e.target.value);\n }\n\n    render() {\n        return (\n            <div className=\"bordered\">\n                Country:&nbsp;\n                <select onChange={this.onSelect}>\n                    <option value=\"\">Select a country:</option>\n                    {this.props.list.map(x => (\n                        <option key={x.code} value={x.code}>\n                            {x.name}\n                        </option>\n                    ))}\n                </select>\n            </div>\n        );\n    }\n}\n\nCountryFilterBar.propTypes = {\n list: PropTypes.arrayOf(PropTypes.object).isRequired,\n onSelect: PropTypes.func.isRequired\n};\n\nCountryFilterBar.defaultProps = {\n list: []\n};\n```", "```js\nexport class RegionsInformationTable extends React.PureComponent<...> {\n state = {\n        countries: [\n            { code: \"AR\", name: \"Argentine\" },\n            { code: \"BR\", name: \"Brazil\" },\n            { code: \"PY\", name: \"Paraguay\" },\n            { code: \"UY\", name: \"Uruguay\" }\n        ],\n\n        regions: []\n };\n```", "```js\nupdate(country: string) {\n        .\n        .\n        .\n        this.setState((state, props) => ({ regions: [ \n                .\n                .\n                .\n            ]}));\n```", "```js\nthis.setState({ regions: [ ...]});\n```", "```js\nrender() {\n    if (this.props.results.length === 0) {\n        return <div className=\"bordered\">No regions.</div>;\n    } else {\n        return (\n            <div className=\"bordered\">\n                {this.props.results.map(x => (\n <ExpandableCard key={x.id} title={x.name}>\n <div>CITIES:{x.cities}</div>\n <div>POPULATION:{x.pop}</div>\n </ExpandableCard>\n                ))}\n            </div>\n        );\n    }\n}\n```", "```js\n// Source file: src/comopnents/expandableCard.2/index.js\n\n/* @flow */\n\nimport * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../general.css\";\nimport \"./expandableCard.css\";\n\nexport class ExpandableCard extends React.PureComponent<\n    {\n        children: React.ChildrenArray<React.ChildrenArray<React.Node>>,\n        title: string\n    },\n    { open: boolean }\n> {\n    static propTypes = {\n        children: PropTypes.arrayOf(PropTypes.element).isRequired,\n        title: PropTypes.string.isRequired\n    };\n\n    state = {\n        open: false\n    };\n\n// *continues...*\n```", "```js\n// *continued*...\n\n    toggle = () => {\n        this.setState(state => ({ open: !state.open }));\n    }\n\n    render() {\n        if (this.state.open) {\n            return (\n                <div className=\"bordered\">\n                    {this.props.title}\n                    <div\n                        className=\"toggle\"\n                        onClick={this.toggle}\n                    >\n                        \u25b3\n                    </div>\n <div>{this.props.children}</div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"bordered\">\n                    {this.props.title}\n                    <div\n                        className=\"toggle\"\n                        onClick={this.toggle}\n                    >\n                        \u25bd\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n```", "```js\nnpm install @storybook/react --save-dev\n```", "```js\n\"scripts\": { \n \"storybook\": \"start-storybook -p 9001 -c .storybook\",    \"build-storybook\": \"build-storybook -c .storybook -o out_sb\",\n    .\n    .\n    .\n\n```", "```js\n// Source file: src/components/expandableCard.2/expandableCard.story.js\n\nimport React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\n\nimport { ExpandableCard } from \"./\";\n\nstoriesOf(\"Expandable Card\", module)\n    .add(\"with normal contents\", () => (\n        <ExpandableCard key={229} title={\"Normal\"}>\n            <div>CITIES: 12</div>\n            <div>POPULATION: 41956</div>\n        </ExpandableCard>\n    ))\n\n    .add(\"with many lines of content\", () => (\n        <ExpandableCard key={229} title={\"Long contents\"}>\n            Many, many lines<br />\n            Many, many lines<br />\n            Many, many lines<br />\n            Many, many lines<br />\n            Many, many lines<br />\n            Many, many lines<br />\n            Many, many lines<br />\n            Many, many lines<br />\n            Many, many lines<br />\n            Many, many lines<br />\n            Many, many lines<br />\n            Many, many lines<br />\n            Many, many lines<br />\n            Many, many lines<br />\n        </ExpandableCard>\n    ))\n\n    .add(\"with expandable cards inside\", () => (\n        <ExpandableCard key={229} title={\"Out card\"}>\n            <ExpandableCard key={1} title={\"First internal\"}>\n                A single 1\n            </ExpandableCard>\n            <ExpandableCard key={2} title={\"Second internal\"}>\n                Some twos\n            </ExpandableCard>\n            <ExpandableCard key={3} title={\"Third internal\"}>\n                Three threes: 333\n            </ExpandableCard>\n        </ExpandableCard>\n    ));\n```", "```js\n// Source file: src/components/countryFilterBar/countryFilterBar.story.js\n\nimport React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\n\nimport { CountryFilterBar } from \"./\";\n\nconst countries = [\n    { code: \"AR\", name: \"Argentine\" },\n    { code: \"BR\", name: \"Brazil\" },\n    { code: \"PY\", name: \"Paraguay\" },\n    { code: \"UY\", name: \"Uruguay\" }\n];\n\nstoriesOf(\"Country Filter Bar\", module).add(\"with some countries\", () => (\n    <CountryFilterBar list={countries} onSelect={() => null} />\n));\n```", "```js\nimport { configure } from \"@storybook/react\";\n\nconfigure(() => {\n    const req = require.context(\"../src\", true, /\\.story\\.js$/);\n    req.keys().forEach(filename => req(filename));\n}, module);\n\nconfigure(loadStories, module);\n```", "```js\nnpm run storybook\n```", "```js\n$ npm run build-storybook\n\n> chapter06@0.1.0 build-storybook /home/fkereki/JS_BOOK/modernjs/chapter06\n> build-storybook -s public -o out_sb\n\ninfo @storybook/react v3.4.8\ninfo\ninfo => Loading custom addons config.\ninfo => Using default webpack setup based on \"Create React App\".\ninfo => Copying static files from: public\ninfo Building storybook ...\ninfo Building storybook completed.\n```", "```js\nimport \"@storybook/addon-actions/register\";\nimport \"@storybook/addon-knobs/register\";\nimport \"@storybook/addon-notes/register\";\n```", "```js\n// Source file: src/components/expandableCard.2/expandableCardWithAddon.story.js\n\nimport React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\nimport { action } from \"@storybook/addon-actions\";\nimport { withNotes } from \"@storybook/addon-notes\";\n\nimport { CountryFilterBar } from \"./\";\nimport markDownText from \"./countryFilterBar.md\";\n\nconst countries = [\n    { code: \"AR\", name: \"Argentine\" },\n    { code: \"BR\", name: \"Brazil\" },\n    { code: \"PY\", name: \"Paraguay\" },\n    { code: \"UY\", name: \"Uruguay\" }\n];\n\nstoriesOf(\"Country Filter Bar (with addons)\", module).add(\n    \"with some countries - with actions and notes\",\n    withNotes(markDownText)(() => (\n        <CountryFilterBar\n            list={countries}\n            onSelect={action(\"change:country\")}\n        />\n    ))\n);\n```", "```js\nimport React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\n\nimport { withKnobs, text, number } from \"@storybook/addon-knobs\";\n\nimport { ExpandableCard } from \"./\";\n\nstoriesOf(\"Expandable Card (with knobs)\", module)\n .addDecorator(withKnobs)\n    .add(\"with normal contents\", () => (\n        <ExpandableCard key={229} title={text(\"Card title\", \"XYZZY\")}>\n            <div>CITIES: {number(\"Number of cities\", 12)}</div>\n            <div>POPULATION: {number(\"Population\", 54321)}</div>\n        </ExpandableCard>\n    ));\n```"]