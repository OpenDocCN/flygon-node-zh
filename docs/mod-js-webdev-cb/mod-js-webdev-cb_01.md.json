["```js\n\"editor.fontFamily\": \"'Fira Code', 'Droid Sans Mono', 'Courier New'\",\n\"editor.fontLigatures\": true,\n.\n.\n.\n```", "```js\n> npm -v \n5.5.1 \n\n \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \n   \u2502                                    \u2502\n   \u2502  Update available 5.5.1 \u2192 5.7.1    \u2502\n   \u2502     Run npm i -g npm to update     \u2502\n   \u2502                                    \u2502\n    \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n```", "```js\n~ > md sample\n~ > cd sample\n~/sample > npm install lodash \nnpm WARN saveError ENOENT: no such file or directory, open '/home/fkereki/sample/package.json' \nnpm notice created a lockfile as package-lock.json. You should commit this file. \nnpm WARN enoent ENOENT: no such file or directory, open '/home/fkereki/sample/package.json' \nnpm WARN sample No description \nnpm WARN sample No repository field. \nnpm WARN sample No README data \nnpm WARN sample No license field. \n\n+ lodash@4.17.11\nadded 1 package from 2 contributors and audited 1 package in 1.945s \nfound 0 vulnerabilities\n\n~/sample> dir \ntotal 4 \ndrwxr-xr-x 3 fkereki users  20 Mar 15 11:39 node_modules \n-rw-r--r-- 1 fkereki users 313 Mar 15 11:39 package-lock.json\n```", "```js\n~/sample> cd node_modules\n~/sample/node_modules> dir \ntotal 36 \ndrwxr-xr-x 3 fkereki users 20480 Mar 15 11:39 lodash\n```", "```js\n~/sample> npm init\nThis utility will walk you through creating a package.json file.\nIt only covers the most common items, and tries to guess sensible defaults.\nSee `npm help json` for definitive documentation on these fields\nand exactly what they do.\nUse `npm install <pkg>` afterwards to install a package and\nsave it as a dependency in the package.json file.\n\nPress ^C at any time to quit.\npackage name: (sample) simpleproject\nversion: (1.0.0) \ndescription: A simple project to show package.json creation\nentry point: (index.js) \ntest command: \ngit repository: \nkeywords: \nauthor: Federico Kereki\nlicense: (ISC) \nAbout to write to /home/fkereki/sample/package.json:\n\n{\n \"name\": \"simpleproject\",\n \"version\": \"1.0.0\",\n \"description\": \"A simple project to show package.json creation\",\n \"main\": \"index.js\",\n \"scripts\": {\n \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n },\n \"author\": \"Federico Kereki\",\n \"license\": \"ISC\"\n}\nIs this ok? (yes)\n```", "```js\n~/sample> cat package.json  \n{ \n  \"name\": \"simpleproject\", \n  \"version\": \"1.0.0\", \n  \"description\": \"A simple project to show package.json creation\", \n  \"main\": \"index.js\", \n  \"scripts\": { \n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\" \n  }, \n  \"author\": \"Federico Kereki\", \n  \"license\": \"ISC\", \n  \"dependencies\": { \n \"lodash\": \"^4.17.5\" \n }, \n \"devDependencies\": { \n \"prettier\": \"^1.11.1\" \n } \n}\n```", "```js\nconst plus1= (x)=> 1+x\n```", "```js\nconst plus1 = x => 1 + x;\n```", "```js\nfetch('http://some.url').then((response) => {\n    return response.json();\n  }).then((myJson) => {\n    console.log(myJson);\n  }).catch(e => { /* something wrong */ });\n```", "```js\nfetch(\"http://some.url\")\n    .then(response => {\n        return response.json();\n    })\n    .then(myJson => {\n        console.log(myJson);\n    })\n    .catch(e => {\n        /* something wrong */\n    });\n```", "```js\n\"editor.formatOnSave\": true,\n.\n.\n.\n```", "```js\n\"[javascript]\": {\n    \"editor.formatOnSave\": true\n},\n.\n.\n.\n```", "```js\n\"prettier\": {\n    \"tabWidth\": 4,\n    \"printWidth\": 75\n},\n.\n.\n.\n```", "```js\n/**\n * Solves the Hanoi Towers puzzle, for any number of disks.\n *\n * @param {number} disks - How many disks to move\n * @param {string} from - The starting pole's name\n * @param {string} to - The destination pole's name\n * @param {string} extra - The other pole's name\n */\nconst hanoi = (disks, from, to, extra) => {\n    if (disks === 1) {\n        console.log(`Move disk 1 from post ${from} to post ${to}`);\n    } else {\n        hanoi(disks - 1, from, extra, to);\n        console.log(`Move disk ${disks} from post ${from} to post ${to}`);\n        hanoi(disks - 1, extra, to, from);\n    }\n};\n```", "```js\n\"\"==0   // true\n0==\"0\"  // true\n\"\"==\"0\" // false!?\n```", "```js\nfunction mystery() {\n    return\n    { \n        something: true \n    }\n}\n```", "```js\nfunction mystery() {\n    return ;\n    {\n        something: true;\n    }\n}\n```", "```js\n npm install eslint eslint-config-recommended --save-dev\n```", "```js\n\"scripts\": {\n    \"build\": \"babel src -d out\",\n \"eslint\": \"eslint src\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n}\n\n```", "```js\n\"eslintConfig\": {\n    \"parserOptions\": {\n        \"ecmaVersion\": 2017,\n        \"sourceType\": \"module\"\n    },\n    \"env\": {\n        \"browser\": true,\n        \"node\": true\n    },\n    \"extends\": \"eslint:recommended\",\n    \"rules\": {}\n} \n```", "```js\n> npm run eslint\n> simpleproject@1.0.0 eslint /home/fkereki/sample\n> eslint src\n\n/home/fkereki/sample/src/eight_queens.js\n 32:1 error Unexpected console statement no-console\n> X 1 problem (1 error, 0 warnings)\n```", "```js\n// eslint-disable-next-line no-console console.log(`Solutions found: ${solutions}`);\n```", "```js\n\"rules\": {\n \"no-plusplus\": \"error\"\n}\n```", "```js\n/home/fkereki/sample/src/eight_queens.js \n  13:9  error  Unary operator '++' used  no-plusplus\n\n```", "```js\n \"eslintIgnore\": [\"**/out/*.js\"],\n```", "```js\nfunction addTwoNumbers(x, y) {\n    return x + y;\n}\n\nconsole.log(addTwoNumbers(22, 9)); // 31, fine\n```", "```js\nconsole.log(addTwoNumbers(\"F\", \"K\")); // FK - oops..*.*\nconsole.log(addTwoNumbers([], {}));   // [object Object]! more oops...\n```", "```js\nfunction addTwoNumbers(x: number, y: number) {\n    return x + y;\n}\n```", "```js\nnpm install flow-bin babel-preset-flow eslint-plugin-flowtype --save-dev\n```", "```js\n\"babel\": {\n    \"presets\": [\"env\", \"flow\"] \n},\n```", "```js\n\"eslintConfig\": {\n    \"parserOptions\": {\n        \"ecmaVersion\": 2017,\n        \"sourceType\": \"module\"\n    },\n    \"env\": {\n        \"browser\": true,\n        \"node\": true\n    },\n \"parser\": \"babel-eslint\",\n \"extends\": [\"eslint:recommended\", \"plugin:flowtype/recommended\"],\n \"plugins\": [\"flowtype\"],\n    \"rules\": {\n        .\n        .\n        .\n    }\n},\n```", "```js\n\"scripts\": {\n    \"build\": \"babel src -d out\",\n    \"flow\": \"flow\",\n    .\n    .\n    .\n},\n```", "```js\n[lints]\nall=warn\nunsafe-getters-setters=off\n```", "```js\n[options]\ninclude_warnings=true\n```", "```js\n// flowlint-next-line sketchy-null-bool:off\nif (x) {\n    // ...\n} \n```"]