["```js\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\"\n                       alt=\"logo\" />\n                    <h1 className=\"App-title\">Welcome to \n                       React</h1>\n                </header>\n                <p className=\"App-intro\">\n                    To get started, edit <code>src/App.js</code>\n                    and save to reload.\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default App;\n```", "```js\n npm install node-sass-chokidar --save-dev\n```", "```js\n\n[options]\ninclude_warnings=true\nmodule.file_ext=.scss .\n.\n.\n```", "```js\nnpm install npm-run-all --save-dev\n```", "```js\n\"build-scss\": \"node-sass-chokidar src/ -o src/\",\n\"watch-scss\": \"npm run build-scss && node-sass-chokidar src/ -o src/ --watch --recursive\",\n\"start-js\": \"react-app-rewired start\",\n\"build-js\": \"react-app-rewired build\",\n\"storybook-js\": \"start-storybook -p 9001 -c .storybook\",\n\"start\": \"npm-run-all -p watch-scss start-js\",\n\"build\": \"npm-run-all build-scss build-js\",\n\"storybook\": \"npm-run-all -p watch-scss storybook-js\",\n.\n.\n.\n```", "```js\n// Source file: /src/components/sassButton/sassButton.js\n\n/* @flow */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.css\";\n\nexport class SassButton extends React.PureComponent<{\n    normal: boolean,\n    buttonText: string,\n    onSelect: void => void\n}> {\n    static propTypes = {\n        normal: PropTypes.bool.isRequired,\n        buttonText: PropTypes.string.isRequired,\n        onSelect: PropTypes.func.isRequired\n    };\n\n    render() {\n        return (\n            <div\n                className={\n                    this.props.normal ? \"normalButton\" : \"alertButton\"\n                }\n                onClick={this.props.onSelect}\n            >\n                <span>{this.props.buttonText}</span>\n            </div>\n        );\n    }\n}\n```", "```js\n$normalColor: green;\n$normalText: yellow;\n\n$alertColor: red;\n$alertText: white;\n```", "```js\n@mixin darkenBackground($color) {\n    background-color: $color;\n    &:hover {\n        background-color: darken($color, 25%);\n        transition: all 0.5s ease;\n    }\n}\n\n@mixin coloredBoldText($color) {\n    color: $color;\n    font-weight: bold;\n}\n```", "```js\n@import \"_constants.scss\";\n@import \"_mixins.scss\";\n```", "```js\n%baseButton {\n    display: inline-block;\n    text-decoration: none;\n    padding: 5px 10px;\n    border-radius: 3px;\n}\n```", "```js\n/*\n    A simple button for normal situations\n*/\n.normalButton {\n    @extend %baseButton;\n    @include darkenBackground($normalColor);\n\n    span {\n        @include coloredBoldText($normalText);\n    }\n}\n\n/*\n    An alert button for warnings or errors\n*/\n.alertButton {\n @extend %baseButton;\n    @include darkenBackground($alertColor);\n\n    span {\n        @include coloredBoldText($alertText);\n    }\n}\n```", "```js\n.normalButton, .alertButton {\n  display: inline-block;\n  text-decoration: none;\n  padding: 5px 10px;\n  border-radius: 3px; }\n\n.normalButton {\n  background-color: green; }\n  .normalButton:hover {\n    background-color: #000100;\n    transition: all 0.5s ease; }\n  .normalButton span {\n    color: yellow;\n    font-weight: bold; }\n\n.alertButton {\n  background-color: red; }\n  .alertButton:hover {\n    background-color: maroon;\n    transition: all 0.5s ease; }\n  .alertButton span {\n    color: white;\n    font-weight: bold; }\n```", "```js\n// Source file: /src/components/sassButton/sassButton.story.js\n\nimport React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\nimport { action } from \"@storybook/addon-actions\";\n\nimport { SassButton } from \"./\";\n\nstoriesOf(\"SASS buttons\", module)\n    .add(\"normal style\", () => (\n <SassButton\n normal\n buttonText={\"A normal SASSy button!\"}\n onSelect={action(\"click:normal\")}\n />\n    ))\n    .add(\"alert style\", () => (\n <SassButton\n normal={false}\n buttonText={\"An alert SASSy button!\"}\n onSelect={action(\"click:alert\")}\n />\n    ));\n```", "```js\nnpm install styled-components --save\n```", "```js\nnpm install color --save\n```", "```js\nexport const NORMAL_COLOR = \"green\";\nexport const NORMAL_TEXT = \"yellow\";\n\nexport const ALERT_COLOR = \"red\";\nexport const ALERT_TEXT = \"white\";\n```", "```js\n// Source file: /src/components/styledButton/styledButton.js\n\n/* @flow */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Color from \"color\";\n\nimport {\n    NORMAL_TEXT,\n    NORMAL_COLOR,\n    ALERT_TEXT,\n    ALERT_COLOR\n} from \"./constants\";\n\n// *continues...*\n```", "```js\n// ...*continued*\n\nconst makeSpan = props => `\n    span {\n        color: ${props.normal ? NORMAL_TEXT : ALERT_TEXT};\n        font-weight: bold;\n    }\n`;\n\n// *continues...*\n```", "```js\n// ...*continued*\n\nconst BasicStyledDiv = styled.div`\n    display: inline-block;\n    text-decoration: none;\n    padding: 5px 10px;\n    border-radius: 3px;\n`;\n\n// *continues...*\n```", "```js\n// ...*continued*\n\nconst StyledDiv = BasicStyledDiv.extend`\n    background-color: ${props =>\n        props.normal ? NORMAL_COLOR : ALERT_COLOR};\n    &:hover {\n        background-color: ${props =>\n            Color(props.normal ? NORMAL_COLOR : ALERT_COLOR)\n                .darken(0.25)\n                .string()};\n        transition: all 0.5s ease;\n    }\n    ${props => makeSpan(props)};\n`;\n\n// *continues...*\n```", "```js\n// ...*continued*\n\nexport class StyledButton extends React.PureComponent<{\n    normal: boolean,\n    buttonText: string,\n    onSelect: void => void\n}> {\n    static propTypes = {\n        normal: PropTypes.bool.isRequired,\n        buttonText: PropTypes.string.isRequired,\n        onSelect: PropTypes.func.isRequired\n    };\n\n    render() {\n        return (\n <StyledDiv\n normal={this.props.normal}\n onClick={this.props.onSelect}\n >\n                <span>{this.props.buttonText}</span>\n </StyledDiv>\n        );\n    }\n}\n\n// *continues...*\n```", "```js\nnpm install bootstrap --save\n```", "```js\n// Source file: /src/App.1.js\n\n/* @flow */\n\nimport React, { Component } from \"react\";\n\nclass App extends Component<{}> {\n    render() {\n        const cl = \"border border-dark p-2 bg-warning \";\n\n        return (\n            <div className=\"container mw-100\">\n                <div className=\"row border\">\n <div className={cl + \"col-sm-2 col-md-6\"}>2/6</div>\n                    <div className={cl + \"col-sm-4\"}>4</div>\n                    <div className={cl + \"col-sm-1\"}>1</div>\n                    <div className={cl + \"col-sm-1\"}>1</div>\n                    <div className={cl + \"col-sm-1\"}>1</div>\n <div className={cl + \"col-sm-1 col-md-5\"}>1/5</div>\n                    <div className={cl + \"col-sm-2 \"}>2</div>\n <div className={cl + \"col-sm-7 col-md-3\"}>7/3</div>\n                    <div className={cl + \"col-sm-4 \"}>4</div>\n <div className={cl + \"col-sm-1 col-md-3\"}>1/3</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n```", "```js\n// Source file: /src/App.2.js\n\n/* @flow */\n\nimport React, { Component } from \"react\";\n\nclass App extends Component<{}> {\n    render() {\n        const cl = \"border border-dark p-2 bg-warning \";\n        const ch = \"border border-dark p-2 bg-dark text-white \";\n\n        return (\n            <div className=\"container mw-100\">\n                <div className=\"row border\">\n                    <div className={cl + \"col-sm-2 col-md-6\"}>2/6</div>\n                    <div className={cl + \"col-sm-4\"}>4</div>\n                    <div className={cl + \"col-sm-1\"}>1</div>\n <div\n className={\n ch + \"col-sm-1 order-sm-first order-md-\n                            last\"\n }\n >\n 1\n </div>\n                    <div className={cl + \"col-sm-1 col-md-5\"}>1/5</div>\n                    <div className={cl + \"col-sm-3 \"}>3</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n```", "```js\n// Source file: /src/App.3.js\n\n/* @flow */\n\nimport React, { Component } from \"react\";\n\nclass App extends Component<{}> {\n    render() {\n        const cl = \"border border-dark p-2 bg-warning \";\n        const ch = \"border border-dark p-2 bg-dark text-white \";\n\n        return (\n            <div className=\"container mw-100\">\n                <div className=\"row border\">\n                    <div className={cl + \"col-sm-2 col-md-6\"}>2/6</div>\n <div className={ch + \"d-none d-sm-block col-sm-4\"}>\n 0/4\n </div>\n                    <div className={cl + \"col-sm-2\"}>2</div>\n                    <div className={cl + \"col-sm-2\"}>2</div>\n                    <div className={cl + \"col-sm-1 col-md-5\"}>1/5</div>\n                    <div className={cl + \"col-sm-3 \"}>3</div>\n <div className={ch + \"col-sm-7 \"}>\n <div>TOP</div>\n <div className=\"d-none d-sm-block\">(MIDDLE)\n                        </div>\n <div>BOTTOM</div>\n </div>\n                    <div className={cl + \"col-sm-4 \"}>4</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n```", "```js\nnpm install react-responsive --save\n```", "```js\n// Source file: /src/App.4.js\n\n/* @flow */\n\nimport React, { Component } from \"react\";\nimport MediaQuery from \"react-responsive\";\n\nconst XS = 576; // phone\nconst SM = 768; // tablet\nconst MD = 992; // desktop\nconst LG = 1200; // large desktop\n\nclass App extends Component<{}> {\n    render() {\n        return (\n            <div>\n                <MediaQuery minDeviceWidth={MD + 1}>\n                    <div>Device: desktop or laptop</div>\n\n                    <MediaQuery maxWidth={XS}>\n                        <div>Current Size: small phone </div>\n                    </MediaQuery>\n\n                    <MediaQuery minWidth={XS + 1} maxWidth={SM}>\n                        <div>Current Size: normal phone</div>\n                    </MediaQuery>\n\n                    <MediaQuery minWidth={SM + 1} maxWidth={MD}>\n                        <div>Current Size: tablet</div>\n                    </MediaQuery>\n\n                    <MediaQuery minWidth={MD + 1} maxWidth={LG}>\n                        <div>Current Size: normal desktop</div>\n                    </MediaQuery>\n\n                    <MediaQuery minWidth={LG + 1}>\n                        <div>Current Size: large desktop</div>\n                    </MediaQuery>\n                </MediaQuery>\n\n                <MediaQuery maxDeviceWidth={MD}>\n                    <div>Device: tablet or phone</div>\n                    <MediaQuery orientation=\"portrait\">\n                        <div>Orientation: portrait</div>\n                    </MediaQuery>\n                    <MediaQuery orientation=\"landscape\">\n                        <div>Orientation: landscape</div>\n                    </MediaQuery>\n                </MediaQuery>\n            </div>\n        );\n    }\n}\n\nexport default App;\n```", "```js\nnpm install i18next i18next-browser-languagedetector --save\n```", "```js\n{\n    \"details\": \"Details\",\n    \"number\": \"How many things?\",\n    \"color\": \"Thing Color\",\n    \"send it before\": \"Send the thing before\",\n    \"please enter details\": \"Please, enter details for your thing:\",\n    \"summary\": \"Your only thing will be there before {{date, \n     AS_DATE}}\",\n    \"summary_plural\":\n        \"Your {{count}} things will be there before {{date, AS_DATE}}\",\n    \"colors\": {\n        \"none\": \"None\",\n        \"steel\": \"Steel\",\n        \"sand\": \"Sand\"\n    }\n}\n```", "```js\n{\n    \"details\": \"Detalles\",\n    \"number\": \"\u00bfCu\u00e1ntas cosas?\",\n    \"color\": \"Color de la cosa\",\n    \"send it before\": \"Enviar antes de\",\n    \"please enter details\": \"Por favor, ingrese detalles para su \n     cosa:\",\n    \"summary\": \"Su \u00fanica cosa llegar\u00e1 antes de la fecha {{date, \n     AS_DATE}}\",\n    \"summary_plural\":\n        \"Sus {{count}} cosas llegar\u00e1n antes del {{date, AS_DATE}}\",\n    \"colors\": {\n        \"none\": \"Ninguno\",\n        \"steel\": \"Acero\",\n        \"sand\": \"Arena\"\n    }\n}\n```", "```js\n// Source file: /src/components/i18nform/i18n.js\n\nimport i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport EN_TEXTS from \"./translations.en.json\";\nimport ES_TEXTS from \"./translations.es.json\";\n\ni18n.use(LanguageDetector).init({\n    resources: {\n        en: { translations: EN_TEXTS },\n        es: { translations: ES_TEXTS }\n    },\n    fallbackLng: \"en\",\n    ns: [\"translations\"],\n    defaultNS: \"translations\",\n    debug: true,\n    interpolation: {\n        escapeValue: false,\n        format: function(value, format, lang = i18n.language) {\n            if (format === \"AS_DATE\") {\n                try {\n                    const dd = new Date(value);\n                    return new Intl.DateTimeFormat(lang).format(\n                        new Date(\n                            dd.getTime() + dd.getTimezoneOffset() * \n                            60000\n                        )\n                    );\n                } catch (e) {\n                    return \"???\";\n                }\n            } else {\n                return value;\n            }\n        }\n    }\n});\n\nconst t = i18n.t.bind(i18n); // to allow using t(...) instead of i18n.t(...)\n\nexport { i18n, t };\n```", "```js\n// Source file: /src/components/i18nform/i18nform.js\n\n/* @flow */\n\nimport React from \"react\";\n\nimport \"./styles.css\";\n\nimport { i18n, t } from \"./i18n\";\n\nexport class I18nForm extends React.PureComponent<\n    {},\n    {\n        delivery: String,\n        howMany: Number,\n        thingColor: String\n    }\n> {\n    state = {\n        delivery: \"2018-09-22\",\n        howMany: 1,\n        thingColor: \"NC\"\n    };\n\n    constructor(props) {\n        super(props);\n        this.rerender = () => this.forceUpdate();\n    }\n\n    componentDidMount() {\n        i18n.on(\"languageChanged\", this.rerender);\n    }\n\n    componentWillUnmount() {\n        i18n.off(\"languageChanged\", this.rerender);\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h2>{t(\"details\")}</h2>\n                    <button onClick={() => i18n.changeLanguage(\"es\")}>\n                        ES\n                    </button>\n                    <button onClick={() => i18n.changeLanguage(\"en\")}>\n                        EN\n                    </button>\n                </div>\n                <br />\n                <div>{t(\"please enter details\")}</div>\n                <br />\n                <div>\n                    {t(\"send it before\")}:\n                    <input\n                        type=\"date\"\n                        value={this.state.delivery}\n                        onChange={e =>\n                            this.setState({ delivery: e.target.value })\n                        }\n                    />\n                </div>\n                <div>\n                    {t(\"number\")}:\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        value={this.state.howMany}\n                        onChange={e =>\n                            this.setState({\n                                howMany: Number(e.target.value)\n                            })\n                        }\n                    />\n                </div>\n                <div>\n                    {t(\"color\")}:\n                    <select\n                        onChange={e =>\n                            this.setState({ thingColor: e.target.value })\n                        }\n                    >\n                        <option value=\"NC\">{t(\"colors.none\")}</option>\n                        <option value=\"ST\">{t(\"colors.steel\")}</option>\n                        <option value=\"SD\">{t(\"colors.sand\")}</option>\n                    </select>\n                </div>\n                <br />\n                <div>\n                    {t(\"summary\", {\n count: this.state.howMany,\n date: this.state.delivery\n })}\n                </div>\n            </div>\n        );\n    }\n}\n```", "```js\n// Source file: /src/components/i18nform/i18nform.story.js\n\n/* @flow */\n\nimport React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\n\nimport { I18nForm } from \"./\";\n\nstoriesOf(\"i18n form\", module).add(\"standard\", () => <I18nForm />);\n```", "```js\nnpm install eslint-plugin-jsx-a11y --save-dev\n```", "```js\n{\n    .\n    .\n    .\n    \"extends\": [\n        \"eslint:recommended\",\n        \"plugin:flowtype/recommended\",\n        \"plugin:react/recommended\",\n \"plugin:jsx-a11y/recommended\"\n    ],\n    \"plugins\": [\"babel\", \"flowtype\", \"react\", \"jsx-a11y\"],\n    .\n    .\n    .\n}\n```", "```js\nnpm install react-a11y --save\n```", "```js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport a11y from \"react-a11y\";\n\na11y(React, ReactDOM, {\n    rules: {\n        \"avoid-positive-tabindex\": \"warn\",\n        \"button-role-space\": \"warn\",\n        \"hidden-uses-tabindex\": \"warn\",\n        \"img-uses-alt\": \"warn\",\n        \"label-uses-for\": \"warn\",\n        \"mouse-events-map-to-key-events\": \"warn\",\n        \"no-access-key\": \"warn\",\n        \"no-hash-ref\": \"warn\",\n        \"no-unsupported-elements-use-aria\": \"warn\",\n        \"onclick-uses-role\": \"warn\",\n        \"onclick-uses-tabindex\": \"warn\",\n        \"redundant-alt\": [\"warn\", [\"picture\", \"image\", \"photo\", \"foto\", \n        \"bild\"]],\n        \"tabindex-uses-button\": \"warn\",\n        \"use-onblur-not-onchange\": \"warn\",\n        \"valid-aria-role\": \"warn\"\n    }\n});\n\n// a11y.restoreAll() *would undo all changes*\n```", "```js\n<div\n    className={\n        this.props.normal ? \"normalButton\" : \"alertButton\"\n    }\n    onClick={this.props.onSelect}\n onKeyPress={this.keyDownAsClick}\n tabIndex=\"0\"\n role=\"button\"\n>\n    <span>{this.props.buttonText}</span>\n</div>\n```", "```js\nkeyDownAsClick = (e: { keyCode: number }) => {\n    if (e.keyCode === 32 || e.keyCode === 13) {\n        this.props.onSelect();\n    }\n}\n```", "```js\n<img\n    src=\"img/packt-logo.svg\"\n    style={{ width: \"50px\", height: \"25px\" }}\n/>\n```", "```js\nkeyDownAsClick = (e: { keyCode: number }) => {\n if (e.keyCode === 32 || e.keyCode === 13) {\n this.props.onSelect();\n }\n};\n\nrender() {\n    return (\n        <StyledDiv\n            normal={this.props.normal}\n            onClick={this.props.onSelect}\n onKeyDown={this.keyDownAsClick}\n tabIndex=\"0\"\n role=\"button\"\n        >\n            <span>{this.props.buttonText}</span>\n        </StyledDiv>\n    );\n}\n```"]