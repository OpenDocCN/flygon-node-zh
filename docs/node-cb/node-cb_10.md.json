["```js\nrm -fr login/node_modules \n\n```", "```js\nnpm pack login \n\n```", "```js\nmv application-name-0.0.1.tgz login.tgz #Linux/Mac OS X\nrename application-name-0.0.1.tgz login.tgz ::Windows. \n\n```", "```js\nsftp root@nodecookbook.com \n\n```", "```js\ncd /var/www\nput login.tgz \n\n```", "```js\nssh -l root nodecookbook.com \n\n```", "```js\ntar -xvf login.tar.gz \n\n```", "```js\ncd login\nnpm -d install\n\n```", "```js\napp.listen(80, function () { process.setuid('www-data'); });\n\n```", "```js\nchown -R www-data login \n\n```", "```js\ncd login\nnohup node app.js & \n\n```", "```js\nps -ef | grep node \n\n```", "```js\nscreen -S myAppName \n\n```", "```js\ncd login\nnode app.js \n\n```", "```js\nscreen -r myAppName \n\n```", "```js\nssh -l dave nodecookbook.com \n\n```", "```js\nsudo apt-get install authbind \n\n```", "```js\nsudo touch /etc/authbind/byport 80\nsudo chown dave /etc/authbind/byport 80\nsudo chmod 500 /etc/authbind/byport 80 \n\n```", "```js\napp.listen(80);\n\n```", "```js\nchown -R dave login \n\n```", "```js\nnohup authbind node app.js & \n\n```", "```js\nnpm install http-proxy \n\n```", "```js\napp.listen(3000, '127.0.0.1');\n\n```", "```js\nrequire('http-proxy')\n  .createServer({router : {\n    'login.nodecookbook.com': 'localhost:3000',\n    'nodecookbook.com': 'localhost:8080'\n  }}).listen(80, function () {\n    process.setuid('www-data');\n  });\n\n```", "```js\nnohup node login/app.js &\nnohup node server.js &\nnohup node proxy.js & \n\n```", "```js\nvar http = require('http');\nhttp.createServer(function (req, res) {\n  res.end(\"Oh oh! Looks like I'm going to crash...\");\n  throw crashAhoy;\n}).listen(8080);\n\n```", "```js\nstart on started network-services\n\nrespawn\nrespawn limit 100 5\n\nsetuid www-data\n\nexec /usr/bin/node /var/www/crashingserver/server.js >> \\ /var/log/crashingserver.log 2>&1 \n\npost-start exec echo \"Server was (re)started on $(date)\" | mail -s \"Crashing Server (re)starting\" dave@nodecookbook.com\n\n```", "```js\nstart crashingserver \n\n```", "```js\ntask\n\nstart on stopped crashingserver PROCESS=respawn\n\nscript\n  if [ \"$JOB\" != ''  ]\n    then echo \"Server \"$JOB\" has crashed on $(date)\" | mail -s \\\n    $JOB\" site down!!\" dave@nodecookbook.com\n  fi\nend script\n\n```", "```js\nstart crashingserver\nstart sitedownmon \n\n```", "```js\nstart on stopped anotherserver PROCESS=respawn\n\n```", "```js\nnpm -g install forever \n\n```", "```js\nforever server.js \n\n```", "```js\nwarn: Forever detected script exited with code: 1\nwarn: Forever restarting script for 1 time\n\n```", "```js\nforever start server.js \n\n```", "```js\nsudo apt-get install git git-core \n\n```", "```js\ngit config --global user.name \"Dave Clements\"\ngit config --global user.email \"dave@nodecookbook.com\" \n\n```", "```js\nssh -l root nodecookbook.com -t \"cd /var/www/login; bash\" \n\n```", "```js\napp.listen(8000);\n\n```", "```js\ngit init\ngit add *\ngit commit -m \"initial commit\" \n\n```", "```js\nmkdir repo\necho repo > .gitignore\ncd repo\ngit --bare init \n\n```", "```js\ncd ..\ngit remote add repo ./repo\ngit push repo master \n\n```", "```js\ncd repo/hooks\ntouch post-update\nchmod +x post-update\nnano post-update \n\n```", "```js\n#!/bin/sh\n\ncd /root/login\nenv -i git pull repo master\n\nexec forever restart /root/login/app.js\n\n```", "```js\n#!/bin/sh\ngit push repo\n\n```", "```js\nuseradd git\npasswd git   #set a password\n\nmkdir /home/git\nchown git /home/git \n\n```", "```js\ncd /var/www\nchown -R git login \n\n```", "```js\nsu git\nforever start /var/www/login/app.js \n\n```", "```js\ngit clone ssh://git@nodecookbook.com/var/www/login/repo \n\n```", "```js\napp.listen(9000);\n\n```", "```js\ngit commit -a -m \"changed port\"\ngit push \n\n```", "```js\necho node_modules >> .gitignore \n\n```", "```js\n#!/bin/sh\n\ncd /root/login\n\nenv -i git pull repo master && npm rebuild && npm install\n\nexec forever restart /root/login/app.js\n\n```", "```js\n#!/usr/bin/env node\n\nvar npm = require(\"npm\");\n\nnpm.load(function (err) {\n    if (err) { throw err; }\n\n    npm.commands.test(function (err) {\n        if (err) { process.exit(1); }       \n    });\n\n});\n\n```", "```js\n{\n    \"name\": \"application-name\"\n  , \"version\": \"0.0.1\"\n  , \"private\": true\n  , \"dependencies\": {\n      \"express\": \"2.5.5\"\n    , \"jade\": \">= 0.0.1\"\n  },\n   \"scripts\": {\n    \"test\": \"node test\"\n  },\n  \"devDependencies\": {\"npm\": \"1.1.18\"}\n}\n\n```", "```js\nnpm -d install \n\n```", "```js\nsudo npm -g install jitsu \n\n```", "```js\njitsu signup \n\n```", "```js\njitsu users confirm daveclements _sCjXz46in-6IBpl \n\n```", "```js\n{\n  \"name\": \"ncb-login\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"express\": \"2.5.5\",\n    \"jade\": \">= 0.0.1\"\n  },\n  \"subdomain\": \"login\",\n  \"scripts\": {\n    \"start\": \"app.js\"\n  },\n  \"engines\": {\n    \"node\": \"0.6.x\"\n  }\n}\n\n```", "```js\nJitsu deploy\n\n```", "```js\n//prior package.json data\n \"subdomain\": \"login\",\n  \"domains\": \"login.nodecookbook.com\",\n  \"scripts\": {\n    \"start\": \"app.js\"\n  },\n//rest of package.json data\n\n```", "```js\njitsu apps update ncb-login \n\n```", "```js\ndig nodejitsu.com \n\n```", "```js\njitsu databases create mongo profiler \n\n```", "```js\ninfo: Connection url: mongodb://nodejitsu:14dce01bda24e5fe53bbdaa8f2f6547b@flame.mongohq.com:10019/nodejitsudb169742247544\n\n```", "```js\nclient = mongo.db('mongodb://nodejitsu:14dce01bda24e5fe53bbdaa8f2f6547b@flame.mongohq.com:10019/nodejitsudb169742247544'),\n\n```", "```js\nnode prepulate.js \n\n```", "```js\ndb = mongo.db('mongodb://nodejitsu:14dce01bda24e5fe53bbdaa8f2f6547b@flame.mongohq.com:10019/nodejitsudb169742247544'),\n\n```", "```js\njitsu deploy \n\n```"]