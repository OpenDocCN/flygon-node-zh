["```js\nnpm install websocket \n\n```", "```js\nvar http = require('http');\nvar WSServer = require('websocket').server;\nvar url = require('url');\nvar clientHtml = require('fs').readFileSync('client.html');\n\n```", "```js\nvar plainHttpServer = http.createServer(function (request, response) {\n    response.writeHead(200, {'Content-type' : 'text/html'});\n    response.end(clientHtml);\n  }).listen(8080);\n\nvar webSocketServer = new WSServer({httpServer: plainHttpServer});\n\nvar accept = [ 'localhost', '127.0.0.1' ];\n\n```", "```js\nwebSocketServer.on('request', function (request) {\n  request.origin = request.origin || '*'; //no origin? Then use * as wildcard.\n  if (accept.indexOf(url.parse(request.origin).hostname) === -1) {\n    request.reject();\n    console.log('disallowed ' + request.origin);\n    return;\n  }\n\n  var websocket = request.accept(null, request.origin);\n\n  websocket.on('message', function (msg) {\n    console.log('Recieved \"' + msg.utf8Data + '\" from ' + request.origin);\n    if (msg.utf8Data === 'Hello') {\n      websocket.send('WebSockets!');\n    }\n  });\n\n  websocket.on('close', function (code, desc) {\n   console.log('Disconnect: ' + code + ' - ' + desc);\n  });\n\n});\n\n```", "```js\n<html>\n<head>\n</head>\n<body>\n<input id=msg><button id=send>Send</button>\n<div id=output></div>\n\n<script>\n//client side JavaScript will go here\n</script>\n\n</body>\n</html>\n\n```", "```js\n<script>\n(function () {\n  var ws = new WebSocket(\"ws://localhost:8080\"),\n    output = document.getElementById('output'),\n    send = document.getElementById('send');\n\n  function logStr(eventStr, msg) {\n    return '<div>' + eventStr + ': ' + msg + '</div>';\n  }  \n\n  send.addEventListener('click', function () \n      var msg = document.getElementById('msg').value;\n      ws.send(msg);\n      output.innerHTML += logStr('Sent', msg);\n  });\n\n  ws.onmessage = function (e) {\n    output.innerHTML += logStr('Recieved', e.data);\n  };\n\n  ws.onclose = function (e) {\n    output.innerHTML += logStr('Disconnected', e.code + '-' + e.type);\n  };\n\n  ws.onerror = function (e) {\n    output.innerHTML += logStr('Error', e.data);\n  };  \n\n}());\n\n</script>\n\n```", "```js\nRecieved \"Hello\" from http://localhost:8080 \n\n```", "```js\nwindow.WebSocket = window.WebSocket || window.MozWebSocket;\n\n```", "```js\nvar WSClient = require('websocket').client;\n\nnew WSClient()\n\n  .on('connect', function (connection) {\n    var msg = 'Hello';\n\n    connection.send(msg);\n    console.log('Sent: ' + msg);\n\n    connection.on('message', function (msg) {\n      console.log(\"Received: \" + msg.utf8Data);\n    }).on('close', function (code, desc) {\n      console.log('Disconnected: ' + code + ' - ' + desc);\n    }).on('error', function (error) {\n      console.log(\"Error: \" + error.toString());\n    });\n\n  })\n  .on('connectFailed', function (error) {\n    console.log('Connect Error: ' + error.toString());\n  })\n  .connect('ws://localhost:8080/', null, 'http://localhost:8080');\n\n```", "```js\nnpm install socket.io \n\n```", "```js\nvar http = require('http');\nvar clientHtml = require('fs').readFileSync('client.html');\n\nvar plainHttpServer = http.createServer(function (request, response) {\n    response.writeHead(200, {'Content-type' : 'text/html'});\n    response.end(clientHtml);\n  }).listen(8080);\n\n```", "```js\nvar io = require('socket.io').listen(plainHttpServer);\n\nio.set('origins', ['localhost:8080', '127.0.0.1:8080']) ;\n\nio.sockets.on('connection', function (socket) {\n  socket.on('message', function (msg) {\n    if (msg === 'Hello') {\n      socket.send('socket.io!');\n    }\n  });\n});\n\n```", "```js\n<html>\n<head>\n</head>\n<body>\n<input id=msg><button id=send>Send</button>\n<div id=output></div>\n\n<script src=\"img/socket.io.js\"></script>\n<script>\n(function () {\n  var socket = io.connect('ws://localhost:8080'),\n    output = document.getElementById('output'),\n    send = document.getElementById('send');\n\n  function logStr(eventStr, msg) {\n    return '<div>' + eventStr + ': ' + msg + '</div>';\n  } \n  socket.on('connect', function () {\n    send.addEventListener('click', function () {\n      var msg = document.getElementById('msg').value;\n      socket.send(msg);\n      output.innerHTML += logStr('Sent', msg);\n    });\n\n    socket.on('message', function (msg) {\n      output.innerHTML += logStr('Recieved', msg);\n    });\n\n  });\n\n}());\n</script>\n</body>\n</html>\n\n```", "```js\n//require http, load client.html, create plainHttpServer\n//require and initialize socket.io, set origin rules\n\nio.sockets.on('connection', function (socket) {\n  socket.emit('hello', 'socket.io!');\n  socket.on(''helloback, function (from) {\n    console.log('Received a helloback from ' + from);\n  });\n});\n\n```", "```js\n//html structure, #output div, script[src=/socket.io/socket.io.js] tag\nsocket.on('connect', function () {\n  socket.on('hello', function (msg) {\n    output.innerHTML += '<div>Hello ' + msg + '</div>';\n    socket.emit('helloback', 'the client');\n  });\n});\n\n```", "```js\nio.connect('ws://localhost:8080/namespacehere');\n\n```", "```js\nvar http = require('http');\nvar fs = require('fs');\nvar profiles = require('./profiles');\nvar buildXml = require('./buildXml');\nvar index = fs.readFileSync('index.html');\nvar io = require('socket.io').listen(\n    http.createServer(function (request, response) {\n      response.end(index);\n    }).listen(8080)\n  );\n\n```", "```js\nio.of('/json').on('connection', function (socket) {\n  socket.on('profiles', function (cb) {\n    cb(Object.keys(profiles));\n  });\n\n  socket.on('profile', function (profile) {\n    socket.emit('profile', profiles[profile]);\n  });\n});\n\nio.of('/xml').on('connection', function (socket) {\n  socket.on('profile', function (profile) {\n    socket.emit('profile', buildXml(profiles[profile]));\n  });\n});\n\n```", "```js\n<script src=socket.io/socket.io.js></script>\n<script>\n(function () {  // open anonymous function to protect global scope\n  var formats = {\n    json: io.connect('ws://localhost:8080/json'),\n    xml: io.connect('ws://localhost:8080/xml')\n  };\nformats.json.on('connect', function () {\n  $('#profiles').html('<option></option>');\n   this.emit('profiles', function (profile_names) {\n      $.each(profile_names, function (i, pname) {\n       $('#profiles').append('<option>' + pname + '</option>');\n      });\n   });\n});\n\n$('#profiles, #formats').change(function () {\n  var socket = formats[$('#formats').val()];  \n  socket.emit('profile', $('#profiles').val());\n});\n\nformats.json.on('profile', function(profile) {\n    $('#raw').val(JSON.stringify(profile));\n    $('#output').html('');\n    $.each(profile, function (k, v) {\n          $('#output').append('<b>' + k + '</b> : ' + v + '<br>');\n        });\n});\n\nformats.xml.on('profile', function(profile) {\n      $('#raw').val(profile);\n      $('#output').html('');\n       $.each($(profile)[1].nextSibling.childNodes,\n          function (k, v) {\n            if (v && v.nodeType === 1) {\n              $('#output').append('<b>' + v.localName + '</b> : '\n\t\t     + v.textContent + '<br>');\n            }\n          });  \n}());\n\n```", "```js\nvar http = require('http');\nvar clientHtml = require('fs').readFileSync('client.html');\n\nvar plainHttpServer = http.createServer(function (request, response) {\n    response.writeHead(200, {'Content-type' : 'text/html'});\n    response.end(clientHtml);\n  }).listen(8080);\n\nvar io = require('socket.io').listen(plainHttpServer);\nio.set('origins', ['localhost:8080', '127.0.0.1:8080']);\n\n```", "```js\nio.sockets.on('connection', function (socket) {\n\n  socket.on('give me a number', function (cb) {\n    cb(4);\n  });\n\n  socket.emit('give me a sentence', function (sentence) {\n    socket.send(new Buffer(sentence).toString('base64'));\n  });\n\n});\n\n```", "```js\n<html>\n<head> </head>\n<body>\n<div id=output></div>\n<script src=\"img/socket.io.js\"></script>\n<script>\n  var socket = io.connect('http://localhost:8080'),\n    output = document.getElementById('output');\n\n  function square(num) {\n    output.innerHTML = \"<div>\" + num + \" x \" + num + \" is \"\n\t\t\t\t\t\t   + (num * num) + \"</div>\";\n  }\n\n  socket.on('connect', function () {  \n    socket.emit('give me a number', square);\n\n    socket.on('give me a sentence', function (cb) {\n      cb('Ok, here is a sentence.');\n    });\n\n   socket.on('message', function (msg) {\n      output.innerHTML += '<div>Recieved: ' + msg + '</div>';\n    });\n  });\n\n</script>\n</body> </html>\n\n```", "```js\nnpm install now \n\n```", "```js\nvar http = require('http');\nvar clientHtml = require('fs').readFileSync('now_client.html');\n\nvar plainHttpServer = http.createServer(function (request, response) {\n    response.writeHead(200, {'Content-type' : 'text/html'});\n    response.end(clientHtml);\n  }).listen(8080);\n\nvar everyone = require('now').initialize(plainHttpServer);\neveryone.set('origins', ['localhost:8080', '127.0.0.1:8080']);\n\n```", "```js\neveryone.now.base64 = function(sentence, cb) {\n  cb(new Buffer(sentence).toString('base64'));\n}\n\neveryone.on('connect', function () {\n  this.now.square(4);\n});\n\n```", "```js\n<html>\n<head></head>\n<body>\n<div id=output></div>\n<script src=\"img/now.js\"></script>\n<script>  \nvar output = document.getElementById('output');\nnow.square = function (num) {\n  output.innerHTML = \"<div>\" + num + \" x \" + num + \" is \" + (num * num) + \"</div>\";\n}\n\nnow.ready(function () {  \n  now.base64('base64 me server side, function (msg) {\n    output.innerHTML += '<div>Recieved: ' + msg + '</div>';\n  });\n});\n</script>\n</body></html>\n\n```", "```js\nnpm install socket.io-client \n\n```", "```js\n<html>\n<head>\n<style>\n#_loc {color:blue;} /* widget customization */\n</style>\n</head>\n<body>\n<h1> My Web Page </h1>\n<script src=http://localhost:8081/loc/widget_server.js></script>\n<script> locWidget.init(); </script>\n</body></html>\n\n```", "```js\n  window.locWidget = {\n    style : 'position:absolute;bottom:0;right:0;font-size:3em',\n    init : function () {\n      var socket = io.connect('http://localhost:8081', {resource: 'loc'}),\n        style = this.style;\n      socket.on('connect', function () {\n        var head = document.getElementsByTagName('head')[0],\n          body = document.getElementsByTagName('body')[0],\n          loc = document.getElementById('_lo_count');\n        if (!loc) {\n          head.innerHTML = '<style>#_loc {' + style + '}</style>'\n            + head.innerHTML;\n\n          body.innerHTML +=\n            '<div id=_loc>Online: <span id=_lo_count></span></div>';\n\n          loc = document.getElementById('_lo_count');\n        }\n\n        socket.on('total', function (total) {\n          loc.innerHTML = total;\n        });\n      });\n    }\n  }\n\n```", "```js\nvar http = require('http');\nvar fs = require('fs');\nvar clientHtml = fs.readFileSync('index.html');\n\nhttp.createServer(function (request, response) {\n    response.writeHead(200, {'Content-type' : 'text/html'});\n    response.end(clientHtml);\n}).listen(8080);\n\n```", "```js\nvar io = require('socket.io').listen(8081);\nvar sioclient = require('socket.io-client');\nvar widgetScript = require('fs').readFileSync('widget_client.js');\nvar url = require('url');\n\nvar totals = {};\n\nio.configure(function () {\n  io.set('resource', '/loc');\n  io.enable('browser client gzip');\n});\n\nsioclient.builder(io.transports(), function (err, siojs) {\n  if (!err) {\n    io.static.add('/widget.js', function (path, callback) {\n      callback(null, new Buffer(siojs + ';' + widgetScript));\n    });\n  }\n});\n\nio.sockets.on('connection', function (socket) {\n  var origin = (socket.handshake.xdomain)\n    ? url.parse(socket.handshake.headers.origin).hostname\n    : 'local';\n\n  totals[origin] = (totals[origin]) || 0;\n  totals[origin] += 1;\n  socket.join(origin);\n\n  io.sockets.to(origin).emit('total', totals[origin]);\n  socket.on('disconnect', function () {\n    totals[origin] -= 1;\n    io.sockets.to(origin).emit('total', totals[origin]);\n  });\n});\n\n```", "```js\nnode widget_server.js \n\n```", "```js\nnode server.js \n\n```", "```js\nvar totals = require('redis').createClient();\n\n```", "```js\nio.sockets.on('connection', function (socket) {\n  var origin = (socket.handshake.xdomain)\n    ? url.parse(socket.handshake.headers.origin).hostname\n    : 'local';\n  socket.join(origin);\n\n  totals.incr(origin, function (err, total) {\n    io.sockets.to(origin).emit('total', total);  \n  });\n\n  socket.on('disconnect', function () {\n    totals.decr(origin, function (err, total) {\n      io.sockets.to(origin).emit('total', total); \n    });\n  });\n});\n\n```", "```js\nvar fs = require('fs');\nvar io = require('socket.io').listen(8081);\nvar sioclient = require('socket.io-client');\n\nvar watcher = [';(function () {',\n               '  var socket = io.connect(\\'ws://localhost:8081\\');',\n               '  socket.on(\\'update\\', function () {',\n               '    location.reload()',\n               '  });',\n               '}())'].join('');\n\nsioclient.builder(io.transports(), function (err, siojs) {\n  if (!err) {\n    io.static.add('/watcher.js', function (path, callback) {\n      callback(null, new Buffer(siojs + watcher));\n    });\n  }\n});\n\nfs.watch('content', function (e, f) {\n  if (f[0] !== '.') {\n    io.sockets.emit('update');\n  }\n});\n\n```", "```js\n<script src=http://localhost:8081/socket.io/watcher.js></script>\n\n```"]