["```js\nsudo npm -g install express \n\n```", "```js\nexpress nca \n\n```", "```js\n{\n    \"name\": \"application-name\"\n  , \"version\": \"0.0.1\"\n  , \"private\": true\n  , \"dependencies\": {\n      \"express\": \"2.5.8\"\n    , \"jade\": \">= 0.0.1\"\n  }\n}\n\n```", "```js\nnpm install \n\n```", "```js\nnode app.js \n\n```", "```js\n var express = require('express')\n  , routes = require('./routes')\nvar app = module.exports = express.createServer();\n// Configuration\napp.configure(function(){\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(app.router);\n  app.use(express.static(__dirname + '/public'));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\n});\n\napp.configure('production', function(){\n  app.use(express.errorHandler());\n});\n\n// Routes\n\napp.get('/', routes.index);\n\napp.listen(3000, function(){\n\n  console.log(\"Express server listening on port %d in %s mode\", app.address().port, app.settings.env);\n\n});\n\n```", "```js\n<input type=hidden name='_method' value='DELETE'>\n\n```", "```js\nfunction (req, res, next) {\n\t//do stuff\n\tnext();\n}\n\n```", "```js\n, routes = require('./routes')\n\n```", "```js\nexports.index = function(req, res){\n  res.render('index', { title: 'Express' })\n};\n\n```", "```js\napp.get('/', routes.index);\n\n```", "```js\napp.configure('development', function(){\n  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\n});\n\napp.configure('production', function(){\n  app.use(express.errorHandler());\n});\n\n```", "```js\napp.configure(function(){\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(app.router);\n});\n\napp.configure('development', function(){\n  app.use(express.static(__dirname + '/public'));\n  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\n});\n\napp.configure('production', function(){\n  app.use(express.staticCache());\n  app.use(express.static(__dirname + '/public'));\n  app.use(express.errorHandler({dumpExceptions: true}));\n});\n\n```", "```js\nNODE_ENV=production node app.js \n\n```", "```js\nset NODE_ENV=production\nnode app.js \n\n```", "```js\napp.configure('development', function(){\n  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\n});\n\n//our extra staging environment\napp.configure('staging', function(){\n  app.use(express.errorHandler({dumpExceptions: true}));\n});\n\n```", "```js\nvar port;\napp.configure('production', function(){\n  port = 80;\n  app.use(express.errorHandler({dumpExceptions: true}));\n});\n\n// Routes\napp.get('/', routes.index);\n\napp.listen(port || 3000);\n\n```", "```js\nsudo NODE_ENV=production node app.js \n\n```", "```js\nset NODE_ENV=production\nnode app.js \n\n```", "```js\nexport NODE_ENV=staging \n\n```", "```js\necho -e \"export NODE_ENV=staging\\n\" >> ~/.bashrc \n\n```", "```js\nset NODE_ENV=staging\nsetx NODE_ENV=staging \n\n```", "```js\napp.get('/page', function (req, res) {\n  res.send('Hello I am Mr Page');\n});\n\n```", "```js\napp.get('/:page', function (req, res) {\n  res.send('Welcome to the ' + req.params.page + ' page');\n});\n\n```", "```js\nexports.index = function(req, res){\n  res.render('index', { title: 'Express' })\n};\n\nexports.mrpage =  function (req, res) {\n  res.send('Hello I am Mr Page');\n};\n\nexports.anypage = function (req, res) {\n  res.send('Welcome to the ' + req.params.page + ' page');\n};\n\n```", "```js\n// Routes\napp.get('/', routes.index);\napp.get('/page', routes.mrpage);\napp.get('/:page', routes.anypage);\n\n```", "```js\napp.get('/:page([a-zA-Z]+)', routes.anypage);\n\n```", "```js\napp.get('/:page/:admin?', routes.anypageAdmin);\n\n```", "```js\nexports.anypageAdmin = function (req, res) {\n  var admin = req.params.admin\n  if (admin) {\n    if (['add','delete'].indexOf(admin) !== -1) {\n      res.send('So you want to ' + req.params.admin +  ' ' + req.params.page + '?');\n      return;\n    }\n    res.send(404);\n  }\n}\n\n```", "```js\napp.get('/:page/:admin((add|delete))', routes.anypageAdmin);\n\n```", "```js\nexports.anypageAdmin = function (req, res) {\n  res.send('So you want to ' + req.params.admin +  ' ' + req.params.page + '?');\n}\n\n```", "```js\napp.get('/:page/*', routes.anypage);\n\n```", "```js\nexports.anypage = function (req, res) {\n\n  var subpage = req.params[0],\n    parentPage = subpage ? ' of the ' + req.params.page + ' page' : '';\n\n  res.send('Welcome to the ' +\n    (subpage || req.params.page) + ' page' + parentPage);\n\n};\n\n```", "```js\napp.get('/*page*', routes.mrpage);\n\n```", "```js\nexports.index = function(req, res){\n  res.render('index', { title: 'Express'})\n};\n\n```", "```js\nvar profiles = require('../profiles.js');\nexports.index = function(req, res){\n  res.render('index', { title: 'Profiles', profiles: profiles})\n};\n\n```", "```js\nh1= title\np Welcome to #{title}\n\n```", "```js\ntable#profiles\n  tr\n    th Name\n    th Irc\n    th Twitter\n    th Github\n    th Location\n    th Description\n      each profile, id in profiles\n        tr(id=id)\n          each val in profile\n            td #{val}\n\n```", "```js\nnode app.js \n\n```", "```js\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n\n```", "```js\ntable#profiles\n  th Name\n\n```", "```js\n<table id=profiles><th>Name</th></table>\n\n```", "```js\n  each profile, id in profiles\n    tr(id=id)\n      each val in profile\n        td #{val}\n\n```", "```js\nexpress -t ejs nca \n\n```", "```js\n{\n    \"name\": \"application-name\"\n  , \"version\": \"0.0.1\"\n  , \"private\": true\n  , \"dependencies\": {\n      \"express\": \"2.5.8\"\n    , \"ejs\": \"0.7.1\"\n  }\n}\n\n```", "```js\nnpm install \n\n```", "```js\napp.configure(function(){\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'ejs');\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(app.router);\n});\n\n```", "```js\n<h1> <%= title %></h1>\n<p> Welcome to <%= title %></p>\n\n<table>\n<tr><th>Name</th><th>Irc</th><th>Twitter</th>\n<th>Github</th><th>Location</th><th>Description</th></tr>\n\n<% Object.keys(profiles).forEach(function (id) {%>\n  <tr>\n   <% Object.keys(profiles[id]).forEach(function (val) { %>\n   <td><%= profiles[id][val]; %></td>\n   <% }); %>\n\n  </tr>\n<% }); %>\n</table>\n\n```", "```js\n- var headers = ['Name', 'Irc', 'Twitter', 'Github', 'Location', 'Description'];\ntable#profiles\n  tr\n    each header in headers\n      th= header\n    each profile, id in profiles\n      tr(id=id)\n        each val in profile\n          td #{val}\n\n```", "```js\nheaders = ['Name', 'Irc', 'Twitter', 'Github', 'Location', 'Description'];\n\n```", "```js\ntr(id=id)\n  each val in profile\n    td #{val}\n\n```", "```js\ntd= row\n\n```", "```js\n    each profile, id in profiles\n      tr(id=id)\n        != partial('row', {collection: profile})\n\n```", "```js\n!= partial('row', {collection: profile, as: 'line'})\n\n```", "```js\ntd= line\n\n```", "```js\n    each profile, id in profiles\n      tr(id=id)\n       each row in profile\n        td= row\n\n```", "```js\nscript(src='http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js')        \nscript\n  setTimeout(function () {\n    $.get('/', function (row) {\n      $('#profiles tbody').append(row);\n    });\n  }, 1500);\n\n```", "```js\nvar profiles = require('../profiles.js');\n\nexports.index = function(req, res){\n  if (req.xhr) {\n    res.partial('row', {collection: profiles.ryan});\n  }\n  res.render('index', { title: 'Profiles', profiles: profiles});\n};\n\n```", "```js\nh1= title\np Welcome to #{title}\n\ninclude profiles\n\n```", "```js\nbody\nblock content\n\n```", "```js\nextends layout\nblock content\n  h1= title\n  p Welcome to #{title}\n//- the rest of our template...\n\n```", "```js\nexpress -c stylus ourNewAppName \n\n```", "```js\napp.use(require('stylus').middleware({ src: __dirname + '/public' }));\n\n```", "```js\n{\n    \"name\": \"application-name\"\n  , \"version\": \"0.0.1\"\n  , \"private\": true\n  , \"dependencies\": {\n      \"express\": \"2.5.8\"\n    , \"jade\": \">= 0.0.1\"\n    , \"stylus\": \"0.27.x\"\n  }\n}\n\n```", "```js\nnpm install \n\n```", "```js\n  app.use(require('stylus').middleware({\n    src: __dirname + '/views',\n    dest: __dirname + '/public'\n  }));\n\n```", "```js\nbody {\n  padding: 50px;\n  font: 14px \"Lucida Grande\", Helvetica, Arial, sans-serif;\n}\na {\n  color: #00b7ff;\n}\n\n```", "```js\nbody\n  padding 50px\n  font 14px \"Lucida Grande\", Helvetica, Arial, sans-serif;\na\n  color #00B7FF\n\n```", "```js\n.pad\n  padding 0.5em\n#profiles\n  @extend .pad\n  th\n    @extend .pad\n  td\n    @extend .pad\n\n```", "```js\nborderIt(rad = 0, size = 1px, type = solid, col = #000)\n  border size type col\n  if rad\n    -webkit-border-radius rad\n    -moz-border-radius rad\n    border-radius rad\n\n```", "```js\n#profiles\n  borderIt 20px 2px\n  @extend .pad\n  th\n    @extend .pad\n  td\n    @extend .pad    \n    borderIt(col: #000 + 80%)\n\n```", "```js\n.pad,\n#profiles,\n#profiles th,\n#profiles td { padding: 0.5em;}\n\n```", "```js\n-moz-border-radius-topleft: 9px\n\n```", "```js\n-webkit-border-top-left-radius\n\n```", "```js\nrndCorner(rad, sides...)\n  if length(sides) is 2\n    -moz-border-radius-{sides[0]}{sides[1]} rad\n    -webkit-border-{sides[0]}-{sides[1]}-radius rad\n    border-{sides[0]}-{sides[1]}-radius rad\n  else\n    -webkit-border-radius rad\n    -moz-border-radius rad\n    border-radius rad\n\n```", "```js\nborderIt(rad = 0, size = 1px, type = solid, col = #000)\n  border size type col\n  if rad { rndCorner(rad) }\n\n```", "```js\nborderIt(rad = 0, size = 1px, type = solid, col = #000)\n  border size type col\n  if rad\n    rndCorner(rad)\n\n```", "```js\ntdRad = 9px\n#profiles\n  borderIt 20px 2px\n  @extend .cell\n  th\n    @extend .cell    \n  td\n    @extend .cell    \n    borderIt(col: #000 + 80%)\n  tr\n    &:nth-child(2)\n        td:first-child\n         rndCorner tdRad top left\n        td:last-child\n         rndCorner tdRad top right\n    &:last-child\n        td:first-child\n         rndCorner tdRad bottom left\n        td:last-child\n         rndCorner tdRad bottom right\n\n```", "```js\n#profiles\n  borderIt 20px, 2px\n  @extend .pad\n  background: #000;\n  color: #fff;\n  th\n    @extend .pad\n  td\n    @extend .pad    \n    background blue + 35%\n    borderIt(col: @background)\n    color pink - green - brown + salmon - yellow + gray - salmon + pink\n    color desaturate(@color, 100)\n    &:hover\n      color @background + 180deg\n      background desaturate(@background, 40)\n      border-color @background\n\n```", "```js\napp.use(require('stylus').middleware({\n    src: __dirname + '/views',\n    dest: __dirname + '/public'\n  }));\n\n```", "```js\n  app.use(express.compiler({\n    src: __dirname + '/views',\n    dest: __dirname + '/public',\n    enable: ['less']\n}));\n\n```", "```js\n{\n    \"name\": \"application-name\"\n  , \"version\": \"0.0.1\"\n  , \"private\": true\n  , \"dependencies\": {\n      \"express\": \"2.5.8\"\n    , \"jade\": \">= 0.0.1\"\n    , \"less\": \"1.3.x\"\n  }\n\n```", "```js\nnpm install \n\n```", "```js\nbody { padding: 50px;\n      font: 14px \"Lucida Grande\", Helvetica, Arial, sans-serif; }\n\na { color: #00B7FF; }\n\n .pad() { padding: 0.5em; }\n\n.borderIt (@rad:0, @size:1px, @type: solid, @col: #000) {\n  border: @size @type @col;\n}\n\n.borderIt (@rad:0) when (@rad > 0) {\n  -webkit-border-radius: @rad;\n  -moz-border-radius: @rad;\n  border-radius: @rad;\n}\n\n#profiles {\n.borderIt(20px, 2px);\n.pad();\nth { .pad(); }\ntd { .pad();\n  .borderIt(0,1px,solid,lighten(#000, 80%));\n  }\n}\n\n```", "```js\nexpress login \n\n```", "```js\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(express.cookieParser());\n  app.use(express.session({secret: 'kooBkooCedoN'}));\n  app.use(app.router);\n  app.use(express.static(__dirname + '/public'));\n});\n\n```", "```js\napp.use(express.cookieParser('kooBkooCedoN'));\napp.use(express.session());\n\n```", "```js\napp.get('/', routes.index);\napp.post('/', routes.login, routes.index);\napp.del('/', routes.logout, routes.index);\n\n```", "```js\nvar users = {'dave' : 'expressrocks'}; //fake user db:\nexports.login = function (req, res, next) {\n  var user = req.body.user;\n  if (user) {\n    Object.keys(users).forEach(function (name) {\n      if (user.name === name && user.pwd === users[name]) {\n        req.session.user = {\n          name: user.name,\n          pwd: user.pwd\n        };\n      }\n    });\n  }\n  next();\n};\n\nexports.logout = function (req, res, next) {\n delete req.session.user;\n next();\n}\n\nexports.index = function (req, res) {\n  res.render('index', {title: 'Express', user: req.session.user});\n};\n\n```", "```js\nif user\n form(method='post', action='/')\n   input(name=\"_method\", type=\"hidden\", value=\"DELETE\")\n   p Hello #{user.name}!\n    a(href='javascript:', onClick='forms[0].submit()') [logout]\n\nelse\n  p Please log in\n  form(method='post', action='/')\n    fieldset\n      legend Login\n      p\n        label(for=\"user[name]\") Username:\n        input(name=\"user[name]\")\n      p\n        label(for=\"user[pwd]\") Password:\n        input(type=\"password\", name=\"user[pwd]\")\n\n      input(type=\"submit\")\n\n```", "```js\nh1= title\np Welcome to #{title}\n\ninclude login.jade \n\n```", "```js\nreq.session.user = req.body.user; \n\n```", "```js\napp.get('/', routes.index);\napp.post('/', routes.index);\napp.del('/', routes.index);\napp.get('/:page', routes.index);\n\n```", "```js\nexports.index = function (req, res) {\n  res.render('index', {title: 'Express'});\n};\n\n```", "```js\nvar users = {'dave' : 'expressrocks'};\n\nmodule.exports = function (req, res, next) {\n  var method = req.method.toLowerCase(), //cache the method\n    user = req.body.user,\n    logout = (method === 'delete'),\n    login = (method === 'post' && user),\n\n    routes = req.app.routes.routes[method];\n\n  if (!routes) { next(); return; }\n\n  if (login || logout) {    \n    routes.forEach(function (route) {\n      if (!(req.url.match(route.regexp))) {\n        console.log(req.url);\n        req.method = 'GET';\n      }\n    });\n  }\n  if (logout) {\n    delete req.session.user;\n  }\n\n  if (login) {\n    Object.keys(users).forEach(function (name) {\n      if (user.name === name && user.pwd === users[name]) {\n        req.session.user = {\n          name: user.name,\n          pwd: user.pwd\n        };\n      }\n    });\n  }\n  if (!req.session.user) { req.url = '/'; }  \n  next();\n};\n\n```", "```js\napp.dynamicHelpers({\n  user: function (req, res) {\n    return req.session.user;\n  }\n});\n\n```", "```js\napp.locals.use( function (req, res) {\n        res.locals.user = req.session.user;\n    });\n\n```", "```js\napp.configure(function()\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(express.cookieParser());\n  app.use(express.session({secret: 'kooBkooCedoN'}));\n  app.use(require('./login'));\n  app.use(app.router);\n  app.use(express.static(__dirname + '/public'));\n});\n\n```", "```js\nform(method='post', action='/')\n\n```", "```js\nform(method='post')\n\n```", "```js\n, \"connect-flash\": \"0.1.0\"\n\n```", "```js\nnpm install \n\n```", "```js\nvar express = require('express')\n\t, routes = require('./routes')\n\t, flash = require('connect-flash')\nvar app = module.exports = express.createServer();\napp.configure(function(){\n//prior middleware\n\tapp.use(express.cookieParser('kooBkooCedoN'));\n\tapp.use(express.session());\n\tapp.use(flash());\n//rest of app.configure callback\n\n```", "```js\nif (login) {\n  var valid = Object.keys(users).some(function (name) { \n    return (user.name === name && user.pwd === users[name]); \n  });\n  if (valid) {\n    req.session.user = {\n    name: req.body.user.name,\n    pwd: req.body.user.pwd\n    };\n  } else {\n    req.flash('error','Login details invalid!');\n  }\n}\n\n```", "```js\nfunction validate(user, cb) {\n  var valid = Object.keys(users).some(function (name) { \n    return (user.name === name && user.pwd === users[name]); \n  });\n  cb((!valid && {msg: 'Login details invalid!'} ));\n\n}\n\n```", "```js\n  if (login) {\n    validate(user, function (err) {\n      if (err) { req.flash('error', err.msg); return; }\n        req.session.user = {\n          name: user.name,\n          pwd: user.pwd\n        };\n    });   \n  }\n  if (!req.session.user) { req.url = '/'; }  \n  next();\n}; //closing bracket of module.exports\n\n```", "```js\n  app.dynamicHelpers({\n    user: function (req, res) {\n      return req.session.user;\n    },\n    flash: function(req, res) {\n      return req.flash();\n    }\n  });\n\n```", "```js\n   app.locals.use( function (req, res) {\n   res.locals.user = req.session.user;\n   res.locals.flash= req.flash();});\n\n```", "```js\nif flash.error\n  hr\n  b= flash.error\n  hr\n\n```", "```js\nexpress profiler \n\n```", "```js\n{\n    \"name\": \"Profiler\"\n  , \"version\": \"0.0.1\"\n  , \"private\": true\n  , \"dependencies\": {\n      \"express\": \"2.5.8\"\n    , \"jade\": \">= 0.0.1\"\n    , \"stylus\": \"0.27.x\"\n    , \"mongoskin\": \"0.3.6\"     \n  }\n}\n\n```", "```js\nnpm install \n\n```", "```js\nsudo mongod --dbpath [a folder for the database] \n\n```", "```js\nvar mongo = require('mongoskin'),\n db = mongo.db('localhost:27017/profiler'),\n  profiles = require('./profiles'),\n  users = [{name : 'dave', pwd: 'expressrocks'},\n           {name : 'MrPage', pwd: 'hellomynamesmrpage'}\n          ];\n//make sure collection is empty before populating\ndb.collection('users').remove({});\ndb.collection('profiles').remove({});\ndb.collection('users').insert(users);\nObject.keys(profiles).forEach(function (key) {\n  db.collection('profiles').insert(profiles[key]);\n});\n\ndb.close();\n\n```", "```js\nvar mongo = require('mongoskin'),\n    db = mongo.db('localhost:27017/profiler'),\n    profs = db.collection('profiles');\n\nexports.pull = function pull(page, cb) {\n  var p = {},\n    //rowsPer = 10, //realistic rowsPer\n    rowsPer = 2, \n    skip, errs;   \n  page = page || 1;\n  skip = (page - 1) * rowsPer;\n\n  profs.findEach({}, {limit: rowsPer, skip: skip}, function (err, doc) {\n    if (err) { errs = errs || []; errs.push(err); }\n\n    if (doc) {\n      p[doc._id] = doc;\n      delete p[doc._id]._id;\n      return;\n    }\n\n    cb(errs, p);\n  });\n}\n\nexports.del = function (profile, cb) {\n  profs.removeById(profile, cb);\n}\n\nexports.add = function (profile, cb) {\n  profs.insert(profile.profile, cb);\n}\n\n```", "```js\nvar mongo = require('mongoskin'),\n  db = mongo.db('localhost:27017/profiler'),\n  users = db.collection('users');\n\nfunction validate(user, cb) {\n  users.findOne({name: user.name, pwd: user.pwd}, function (err, user) {\n    if (err) { throw err; }\n    if (!user) {\n      cb({msg: 'Invalid login details!'});\n      return;\n    }\n    cb();\n  });\n\n}\n\n```", "```js\napp.configure(function(){\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n\n  app.use(require('stylus').middleware({\n    src: __dirname + '/views',\n    dest: __dirname + '/public'\n  }));\n\n  app.use(express.favicon());\n\n  app.use(app.router);\n  app.use(express.static(__dirname + '/public'));\n\n  app.use('/admin', require('./login/app'));\n});\n\n```", "```js\napp.get('/:pagenum([0-9]+)?', routes.index); \n\n```", "```js\napp.configure(function(){\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());  \n  app.use(express.cookieParser());\n  app.use(express.session({secret: 'kooBkooCedoN'}));  \n\n  app.use(require('stylus').middleware({\n    src: __dirname + '/views',\n    dest: __dirname + '/public'\n  }));  \n\n  app.mounted(function (parent) {\n    this.helpers({masterviews: parent._locals.settings.views + '/'});\n  });\n\n  app.use(require('./login'));\n  app.use(app.router);\n  app.use(express.static(__dirname + '/public'));\n});\n\n```", "```js\napp.get('/:pagenum([0-9]+)?', routes.index);\napp.post('/:pagenum([0-9]+)?', routes.index);\napp.del('/:pagenum([0-9]+)?', routes.index);\n\napp.get('/del', routes.delprof);\napp.post('/add', routes.addprof, routes.index);\n\n```", "```js\nif (!module.parent) {\n  app.listen(3000, function(){\n    console.log(\"Express server listening on port %d in %s mode\",   app.address().port, app.settings.env);\n  });\n}\n\n```", "```js\nh1= title\np Welcome to #{title}\np: a(href='admin/') [ Admin Login ]\ninclude profiles\n\n```", "```js\nmasterviews = typeof(masterviews) !== 'undefined' ? masterviews : '' \ntable#profiles\n  tfoot\n    page = (page) || 1\n    s = (page > 1) ? null : 'display:none'\n    td\n     a#bck(href=\"{(+page-1)}\", style=s) &laquo;\n     a#fwd(href=\"{(+page+1)}\") &raquo;\n  thead\n    tr\n      th Name\n      th Irc\n      th Twitter\n      th Github\n      th Location\n      th Description\n      if typeof user !== 'undefined'\n        th Action\n  tbody   \n    each profile, id in profiles\n      tr(id=id)\n        != partial(masterviews + 'row', {collection: profile})\n        mixin del(id)\nmixin add\n\nmixin adminScript\n\n```", "```js\ntbody\n\teach profile, id in profiles\n\t\ttr(id=id)\n\t\t\teach row in profile\n\t\t\ttd= row\n\t\tmixin del(id)\n\n```", "```js\ntd= row\n\n```", "```js\nbody\n  padding 50px\n  font 14px \"Lucida Grande\", Helvetica, Arial, sans-serif;\na\n  color #00B7FF\n\nrndCorner(rad, sides...)\n  if length(sides) is 2\n    -moz-border-radius-{sides[0]}{sides[1]} rad\n    -webkit-border-{sides[0]}-{sides[1]}-radius rad\n    border-{sides[0]}-{sides[1]}-radius rad\n  else\n    -webkit-border-radius rad\n    -moz-border-radius rad\n    border-radius rad\n\nborderIt(rad = 0, size = 1px, type = solid, col = #000)\n  border size type col\n  if rad {rndCorner(rad)}\n\n.pad\n  padding 0.5em\n\ntdRad = 9px\n\n#profiles\n  width 950px\n  borderIt 20px, 2px\n  @extend .pad\n  background: #000;\n  color: #fff;\n  th\n    @extend .pad\n  tbody\n    td\n      @extend .pad    \n      background blue + 35%\n      borderIt(col: @background)\n      color pink - green - brown + salmon - yellow + gray - salmon + pink\n      color desaturate(@color, 100)\n      &:hover\n        color @background + 180deg\n        background desaturate(@background, 40)\n        border-color @background\n\n    tr\n      &:first-child\n          td:first-child\n           rndCorner tdRad top left\n          td:last-child\n           rndCorner tdRad top right\n      &:last-child\n          td:first-child\n           rndCorner tdRad bottom left\n          td:last-child\n           rndCorner tdRad bottom right\n\n  tfoot\n    font-size 1.5em\n    td\n    a\n      text-decoration none\n      color #fff - 10%\n      &:hover\n        color #fff\n\n```", "```js\nvar profiles = require('../models/profiles'); \n\nfunction patchMixins(req, mixins) {\n  if (!req.session || !req.session.user) {\n    var noop = function(){},\n      dummies = {};\n    mixins.forEach(function (mixin) {\n      dummies[mixin + '_mixin'] = noop;\n    });  \n    req.app.helpers(dummies);\n  }\n}\n\nexports.index = function (req, res) {\n  profiles.pull(req.params.pagenum, function (err, profiles) {\n    if (err) { console.log(err); }\n    //output no-ops to avoid choking on non-existant admin mixins\n    patchMixins(req, ['add','del','adminScript']);\n\n    res.render('index', { title: 'Profiler', profiles: profiles,\n      page: req.params.pagenum });\n  });\n};\n\n```", "```js\nif flash.error\n  hr\n  b= flash.error\n  hr\n\nif user\n  form(method='post')\n    input(name=\"_method\", type=\"hidden\", value=\"DELETE\")\n    p Hello #{user.name}!\n      a(href='javascript:', onClick='forms[0].submit()') [logout]\n\n  include admin\n  include ../../views/profiles\n\nelse\n  p Please log in\n\n// rest of the login.jade...\n\n```", "```js\nmixin del(id)\n  td\n    a.del(href='/admin/del?id=#{id}&p=#{page}')\n      &#10754;\n\nmixin add\n  #ctrl\n    a#add(href='#') &oplus;\n\nmixin adminScript\n  include adminScript\n\ninclude addfrm\n\n```", "```js\nfields = ['Name', 'Irc', 'Twitter', 'Github', 'Location', 'Description'];\n\nform#addfrm(method='post', action='/admin/add')\n  fieldset\n    legend Add\n    each field, i in fields\n      div\n      label= field\n      input(name=\"profile[#{field.toLowerCase()}]\")\n    .btns\n      button.cancel(type='button') Cancel\n      input(type='submit', value='Add')\n\n```", "```js\nscript(src='http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js')    \nscript\n  document.getElementsByTagName('body')[0].id = 'js';\n\n  $('#add').click(function (e) {\n    e.preventDefault();\n    $('#profiles, #ctrl').fadeOut(function () {\n      $('#addfrm').fadeIn();       \n    });\n\n  $('#addfrm .cancel').click(function () {\n    $('#addfrm').fadeOut(function () {\n      $('#profiles, #ctrl').fadeIn();       \n    });\n  });\n\n  });\n\n```", "```js\n@import '../../../views/stylesheets/style.styl'\n\ntbody\n  td\n    .del\n      text-decoration none\n      color blue + 35% + 180deg\n      float right\n      &:hover\n        color red\n#ctrl\n  width 950px\n  text-align center\n  margin-top -2.5em\n  a\n    color white - 10%\n    font-size 1.8em\n    text-decoration none\n    &:hover\n      color @color + 111%\n\n#js\n  #addfrm\n    display none\n\n#addfrm\n  width 250px\n  label\n    display block\n    float left\n    width 100px\n    font-weight bold\n  .btns\n    width @width\n    text-align right\n\n```", "```js\n!!!\nhtml\n  head\n    title= title\n    link(rel='stylesheet', href='/admin/stylesheets/admin.css')\n  body!= body\n\n```", "```js\nvar profiles = require('../../models/profiles');\n\nexports.index = function (req, res) {\n  profiles.pull(req.params.pagenum, function (err, profiles) {\n    if (err) {  console.log(err); }\n    res.render('index', { title: 'Profiler Admin', profiles: profiles, page: req.params.pagenum });\n  });\n};\n\nexports.delprof = function (req, res) {\n  profiles.del(req.query.id, function (err) {\n    if (err) { console.log(err); }\n      profiles.pull(req.query.p, function (err, profiles) {\n        req.app.helpers({profiles: profiles});\n        res.redirect(req.header('Referrer') || '/');\n      });\n  });\n\n}\n\nexports.addprof = function (req, res) {\n  profiles.add(req.body, function (err) {\n    if (err) { console.log(err); }\n      res.redirect(req.header('Referrer') || '/');\n  });\n\n}\n\n```", "```js\ntable#profiles\n  tfoot\n    page = (page) || 1\n    s = (page > 1) : null ? 'display:none'\n    td\n     a#bck(href=\"#{settings.basepath}/#{(+page-1)}\", style=s) &laquo;\n     a#fwd(href=\"#{settings.basepath}/#{(+page+1)}\") &raquo;\n\n```", "```js\nmasterviews = typeof(masterviews) !== 'undefined' ? masterviews : ''\n\n```", "```js\nab -n 1000 -c 50 http://localhost:3000/\nab -n 1000 -c 50 http://localhost:3000/admin \n\n```", "```js\napp.configure(function(){\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'jade');\n\n  app.use(express.logger());\n\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n//rest of configure\n\n```", "```js\n127.0.0.1 - - [Thu, 09 Feb 2012 15:56:40 GMT] \"GET / HTTP/1.1\" 200 908 \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.3 Safari/535.19\"\n127.0.0.1 - - [Thu, 09 Feb 2012 15:56:40 GMT] \"GET /stylesheets/style.css HTTP/1.1\" 200 1395 \"http://localhost:3000/\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.3 Safari/535.19\"\n\n```", "```js\napp.use(express.logger('dev'));\n\n```", "```js\napp.use(express.logger(':date -- URL::url Referrer::referrer '));\n\n```", "```js\n  express.logger.token('external-referrer',function (req, res) {\n    var ref = req.header('Referrer'),\n      host = req.headers.host;\n\n      if (ref && ref.replace(/http[s]?:\\/\\//, '').split('/')[0] !== host) {\n        return ref;\n      } else {\n        return '#local#';\n      }\n  });\n  app.use(express.logger(':date -- URL::url Referrer::external-referrer'));\n\n```", "```js\napp.use(express.logger( //writing external sites to log file\n  {format: ':date -- URL::url Referrer::external-referrer',\n  stream: require('fs').createWriteStream('external-referrers.log')   \n}));\n\n```"]