["```js\nfunction Person(first_name, last_name) {\n  this.first_name = first_name;\n  this.last_name  = last_name;\n}\n\nvar john = new Person(\"John\", \"Doe\");\nvar jane = new Person(\"Jane\", \"Doe\");\n\n// john and jane share the same type\n\njane.age = 18; // jane no longer has the same type as john!\n```", "```js\nvar number = 32; // 31-bit signed integer\nnumber /= 10; // double precision floating point\n```", "```js\nvar a = new Array();\na[0] = 32;\na[1] = 3.2; // internal conversion\na[2] = false; // another conversion\n```", "```js\nvar a = [ 32, 3.2, false ]; // much faster\n```", "```js\nfunction add(a, b) {\n    return a + b;\n}\n\nadd(2, 3); // looks like monomorphic\nadd(\"john\", \"doe\"); // it's now polymorphic\n```", "```js\nfunction add(a, b) {\n    if (arguments.length == 1) b = 0; // penalty\n}\n```", "```js\nvar keys = Object.keys(obj);\nfor (var i = 0; i < keys.length; i++) {\n    // obj[keys[i]]\n}\n```"]