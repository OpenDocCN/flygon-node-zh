["```ts\n    class Person {\n    \u00a0\u00a0\u00a0\u00a0name: string;\n    }\t\n    const jill: { name: string } = {\n    \u00a0\u00a0\u00a0\u00a0name: \"jill\"\n    };\n    const person: Person = jill;\n    console.log(person);\n    ```", "```ts\n    tsc shape\n    node shape\n    ```", "```ts\n    let val: any = 22;\n    val = \"string value\";\n    val = new Array();\n    val.push(33);\n    console.log(val);\n    ```", "```ts\n    let val: any = 22;\n    val = \"string value\";\n    val = new Array();\n    val.doesnotexist(33);\n    console.log(val);\n    ```", "```ts\n    any type causes the compiler to no longer check the type. Additionally, we also lost IntelliSense, the VSCode development time code highlighter and error checker. Only when we try and run the code do we get any indication that there is a problem, which is never what we want. If we now try and run the code, as shown next, it fails immediately:\n    ```", "```ts\n    let val: unknown = 22;\n    val = \"string value\";\n    val = new Array();\n    val.push(33);\n    console.log(val);\n    ```", "```ts\n    let val: unknown = 22;\n    val = \"string value\";\n    val = new Array();\n    if (val instanceof Array) {\n    \u00a0\u00a0\u00a0\u00a0val.push(33);\n    }\n    console.log(val);\n    ```", "```ts\nlet obj: { name: string } & { age: number } = {\n\u00a0\u00a0\u00a0\u00a0name: 'tom',\n\u00a0\u00a0\u00a0\u00a0age: 25\n}\n```", "```ts\nlet obj: { name: string } & { age: number } = {\n\u00a0\u00a0\u00a0\u00a0name: 'tom',\n\u00a0\u00a0\u00a0\u00a0age: 25\n}\nconsole.log(obj);\n```", "```ts\nlet unionObj: null | { name: string } = null;\nunionObj = { name: 'jon'};\nconsole.log(unionObj);\n```", "```ts\nlet literal: \"tom\" | \"linda\" | \"jeff\" | \"sue\" = \"linda\";\nliteral = \"sue\";\nconsole.log(literal);\n```", "```ts\nlet literal: \"tom\" | \"linda\" | \"jeff\" | \"sue\" = \"linda\";\nliteral = \"sue\";\nliteral = \"john\";\nconsole.log(literal);\n```", "```ts\ntype Points = 20 | 30 | 40 | 50;\nlet score: Points = 20;\nconsole.log(score);\n```", "```ts\ntype ComplexPerson = {\n\u00a0\u00a0\u00a0\u00a0name: string,\n\u00a0\u00a0\u00a0\u00a0age: number,\n\u00a0\u00a0\u00a0\u00a0birthday: Date,\n\u00a0\u00a0\u00a0\u00a0married: boolean,\n\u00a0\u00a0\u00a0\u00a0address: string\n}\n```", "```ts\nfunction runMore(distance: number): number {\n\u00a0\u00a0\u00a0\u00a0return distance + 10;\n}\n```", "```ts\nfunction eat(calories: number) {\n\u00a0\u00a0\u00a0\u00a0console.log(\"I ate \" + calories + \" calories\");\n}\nfunction sleepIn(hours: number): void {\n\u00a0\u00a0\u00a0\u00a0console.log(\"I slept \" + hours + \" hours\");\n}\nlet ate = eat(100);\nconsole.log(ate);\nlet slept = sleepIn(10);\nconsole.log(slept);\n```", "```ts\ntype Run = (miles: number) => boolean;\nlet runner: Run = function (miles: number): boolean {\n\u00a0\u00a0\u00a0\u00a0if(miles > 10){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return true;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0return false;\n}\nconsole.log(runner(9));\n```", "```ts\nfunction oldEnough(age: number): never | boolean {\n\u00a0\u00a0\u00a0\u00a0if(age > 59) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw Error(\"Too old!\");\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0if(age <=18){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return false;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0return true;\n}\n```", "```ts\nclass Person {\n\u00a0\u00a0\u00a0\u00a0constructor() {}\n\u00a0\u00a0\u00a0\u00a0msg: string;\n\u00a0\u00a0\u00a0\u00a0speak() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(this.msg);\n\u00a0\u00a0\u00a0\u00a0}\n}\nconst tom = new Person();\ntom.msg = \"hello\";\ntom.speak();\n```", "```ts\nclass Person {\n\u00a0\u00a0\u00a0\u00a0constructor(private msg: string) {}\n\n\u00a0\u00a0\u00a0\u00a0speak() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(this.msg);\n\u00a0\u00a0\u00a0\u00a0}\n}\nconst tom = new Person(\"hello\");\n// tom.msg = \"hello\";\ntom.speak();\n```", "```ts\nclass Person {\n\u00a0\u00a0\u00a0\u00a0constructor(private readonly msg: string) {}\n\n\u00a0\u00a0\u00a0\u00a0speak () {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.msg = \"speak \" + this.msg;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(this.msg);\n\u00a0\u00a0\u00a0\u00a0}\n}\nconst tom = new Person(\"hello\");\n// tom.msg = \"hello\";\ntom.speak();\n```", "```ts\nclass Speaker {\n\u00a0\u00a0\u00a0\u00a0private message: string;\n\u00a0\u00a0\u00a0\u00a0constructor(private name: string) {}\n\n\u00a0\u00a0\u00a0\u00a0get Message() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(!this.message.includes(this.name)){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw Error(\"message is missing speaker's name\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return this.message;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0set Message(val: string) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0let tmpMessage = val;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(!val.includes(this.name)){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tmpMessage = this.name + \" \" + val;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.message = tmpMessage;\n\u00a0\u00a0\u00a0\u00a0}\n}\nconst speaker = new Speaker(\"john\");\nspeaker.Message = \"hello\";\nconsole.log(speaker.Message);\n```", "```ts\ntsc --target \"ES6\" getSet\n```", "```ts\nnode getSet\n```", "```ts\nclass ClassA {\n\u00a0\u00a0\u00a0\u00a0static typeName: string;\n\u00a0\u00a0\u00a0\u00a0constructor(){}\n\n\u00a0\u00a0\u00a0\u00a0static getFullName() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return \"ClassA \" + ClassA.typeName;\n\u00a0\u00a0\u00a0\u00a0}\n}\nconst a = new ClassA();\nconsole.log(a.typeName);\n```", "```ts\nclass ClassA {\n\u00a0\u00a0\u00a0\u00a0static typeName: string;\n\u00a0\u00a0\u00a0\u00a0constructor(){}\n\n\u00a0\u00a0\u00a0\u00a0static getFullName() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return \"ClassA \" + ClassA.typeName;\n\u00a0\u00a0\u00a0\u00a0}\n}\nconst a = new ClassA();\nconsole.log(ClassA.typeName);\n```", "```ts\nclass Runner {\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0static lastRunTypeName: string;\n\u00a0\u00a0\u00a0\u00a0constructor(private typeName: string) {}\n\n\u00a0\u00a0\u00a0\u00a0run() {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Runner.lastRunTypeName = this.typeName;\n\u00a0\u00a0\u00a0\u00a0}\n}\nconst a = new Runner(\"a\");\nconst b = new Runner(\"b\");\nb.run();\na.run();\nconsole.log(Runner.lastRunTypeName);\n```", "```ts\ninterface Employee {\n\u00a0\u00a0\u00a0\u00a0name: string;\n\u00a0\u00a0\u00a0\u00a0id: number;\n\u00a0\u00a0\u00a0\u00a0isManager: boolean;\n\u00a0\u00a0\u00a0\u00a0getUniqueId: () => string;\n}\n```", "```ts\nconst linda: Employee = {\n\u00a0\u00a0\u00a0\u00a0name: \"linda\",\n\u00a0\u00a0\u00a0\u00a0id: 2,\n\u00a0\u00a0\u00a0\u00a0isManager: false,\n\u00a0\u00a0\u00a0\u00a0getUniqueId: (): string => {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0let uniqueId = linda.id + \"-\" + linda.name;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(!linda.isManager) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return \"emp-\" + uniqueId;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return uniqueId;\n\u00a0\u00a0\u00a0\u00a0}\n}\nconsole.log(linda.getUniqueId());\nconst pam: Employee = {\n\u00a0\u00a0\u00a0\u00a0name: \"pam\",\n\u00a0\u00a0\u00a0\u00a0id: 1,\n\u00a0\u00a0\u00a0\u00a0isManager: true,\n\u00a0\u00a0\u00a0\u00a0getUniqueId: (): string => {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0let uniqueId = pam.id + \"-\" + pam.name;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(pam.isManager) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return \"mgr-\" + uniqueId;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return uniqueId;\n\u00a0\u00a0\u00a0\u00a0}\n}\nconsole.log(pam.getUniqueId());\n```", "```ts\nclass Vehicle {\n\u00a0\u00a0\u00a0\u00a0constructor(private wheelCount: number) {}\n\u00a0\u00a0\u00a0\u00a0showNumberOfWheels() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(`moved ${this.wheelCount} miles`);\n\u00a0\u00a0\u00a0\u00a0}\n}\nclass Motorcycle extends Vehicle {\n\u00a0\u00a0\u00a0\u00a0constructor() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(2);\n\u00a0\u00a0\u00a0\u00a0}\n}\nclass Automobile extends Vehicle {\n\u00a0\u00a0\u00a0\u00a0constructor() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(4);\n\u00a0\u00a0\u00a0\u00a0}\n}\nconst motorCycle = new Motorcycle();\nmotorCycle.showNumberOfWheels();\nconst autoMobile = new Automobile();\nautoMobile.showNumberOfWheels();\n```", "```ts\nclass Vehicle {\n\u00a0\u00a0\u00a0\u00a0constructor(private wheelCount: number) {}\n\u00a0\u00a0\u00a0\u00a0showNumberOfWheels() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(`moved ${this.wheelCount} miles`);\n\u00a0\u00a0\u00a0\u00a0}\n}\nclass Motorcycle extends Vehicle {\n\u00a0\u00a0\u00a0\u00a0constructor() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(2);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0updateWheelCount(newWheelCount: number){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.wheelCount = newWheelCount;\n\u00a0\u00a0\u00a0\u00a0}\n}\nclass Automobile extends Vehicle {\n\u00a0\u00a0\u00a0\u00a0constructor() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(4);\n\u00a0\u00a0\u00a0\u00a0}\n}\nconst motorCycle = new Motorcycle();\nmotorCycle.showNumberOfWheels();\nconst autoMobile = new Automobile();\nautoMobile.showNumberOfWheels();\n```", "```ts\nclass Vehicle {\n\u00a0\u00a0\u00a0\u00a0constructor(protected wheelCount: number) {}\n\u00a0\u00a0\u00a0\u00a0showNumberOfWheels() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(`moved ${this.wheelCount} miles`);\n\u00a0\u00a0\u00a0\u00a0}\n}\nclass Motorcycle extends Vehicle {\n\u00a0\u00a0\u00a0\u00a0constructor() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(2);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0updateWheelCount(newWheelCount: number){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.wheelCount = newWheelCount;\n\u00a0\u00a0\u00a0\u00a0}\n}\nclass Automobile extends Vehicle {\n\u00a0\u00a0\u00a0\u00a0constructor() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(4);\n\u00a0\u00a0\u00a0\u00a0}\n}\nconst motorCycle = new Motorcycle();\nmotorCycle.showNumberOfWheels();\nconst autoMobile = new Automobile();\nautoMobile.showNumberOfWheels();\n```", "```ts\nnamespace A {\n\u00a0\u00a0\u00a0\u00a0class FirstClass {}\n}\nnamespace B {\n\u00a0\u00a0\u00a0\u00a0class SecondClass {}\n\u00a0\u00a0\u00a0\u00a0const test = new FirstClass();\n}\n```", "```ts\nnamespace AbstractNamespace {\n\u00a0\u00a0\u00a0\u00a0abstract class Vehicle {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0constructor(protected wheelCount: number) {}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0abstract updateWheelCount(newWheelCount: number): void;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0showNumberOfWheels() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(`moved ${this.wheelCount} miles`);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n```", "```ts\n\u00a0\u00a0\u00a0\u00a0class Motorcycle extends Vehicle {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0constructor() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(2);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0updateWheelCount(newWheelCount: number){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.wheelCount = newWheelCount;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(`Motorcycle has ${this.wheelCount}`);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0class Automobile extends Vehicle {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0constructor() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(4);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0updateWheelCount(newWheelCount: number){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.wheelCount = newWheelCount;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(`Automobile has ${this.wheelCount}`);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0showNumberOfWheels() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(`moved ${this.wheelCount} miles`);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n```", "```ts\n\u00a0\u00a0\u00a0\u00a0const motorCycle = new Motorcycle();\n\u00a0\u00a0\u00a0\u00a0motorCycle.updateWheelCount(1);\n\u00a0\u00a0\u00a0\u00a0const autoMobile = new Automobile();\n\u00a0\u00a0\u00a0\u00a0autoMobile.updateWheelCount(3);\n}\n```", "```ts\nnamespace InterfaceNamespace {\n\u00a0\u00a0\u00a0\u00a0interface Thing {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: string;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0getFullName: () => string;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0interface Vehicle extends Thing {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0wheelCount: number;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0updateWheelCount: (newWheelCount: number) => void;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0showNumberOfWheels: () => void;\n\u00a0\u00a0\u00a0\u00a0}\n```", "```ts\n\u00a0\u00a0\u00a0\u00a0class Motorcycle implements Vehicle {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: string;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0wheelCount: number;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0constructor(name: string) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// no super for interfaces\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.name = name;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0updateWheelCount(newWheelCount: number){\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.wheelCount = newWheelCount;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(`Automobile has ${this.wheelCount}`);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0showNumberOfWheels() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(`moved Automobile ${this.wheelCount}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0miles`);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0getFullName() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return \"MC-\" + this.name;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0const moto = new Motorcycle(\"beginner-cycle\");\n\u00a0\u00a0\u00a0\u00a0console.log(moto.getFullName());\n}\n```", "```ts\nfunction getLength<T>(arg: T): number {\n\u00a0\u00a0\u00a0\u00a0if(arg.hasOwnProperty(\"length\")) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return arg[\"length\"];\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0return 0;\n}\nconsole.log(getLength<number>(22));\nconsole.log(getLength(\"Hello world.\"));\n```", "```ts\ninterface HasLength {\n\u00a0\u00a0\u00a0\u00a0length: number;\n}\nfunction getLength<T extends HasLength>(arg: T): number {\n\u00a0\u00a0\u00a0\u00a0return arg.length;\n}\nconsole.log(getLength<number>(22));\nconsole.log(getLength(\"Hello world.\"));\n```", "```ts\nnamespace GenericNamespace {\n\u00a0\u00a0\u00a0\u00a0interface Wheels {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0count: number;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0diameter: number;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0interface Vehicle<T> {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0getName(): string;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0getWheelCount: () => T;\n\u00a0\u00a0\u00a0\u00a0}\n```", "```ts\n\u00a0\u00a0\u00a0\u00a0class Automobile implements Vehicle<Wheels> {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0constructor(private name: string, private wheels:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Wheels){}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0getName(): string {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return this.name;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0getWheelCount(): Wheels {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return this.wheels;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0class Chevy extends Automobile {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0constructor() {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0super(\"Chevy\", { count: 4, diameter: 18 });\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n```", "```ts\n\u00a0\u00a0\u00a0\u00a0const chevy = new Chevy();\n\u00a0\u00a0\u00a0\u00a0console.log(\"car name \", chevy.getName());\n\u00a0\u00a0\u00a0\u00a0console.log(\"wheels \", chevy.getWheelCount());\n}\n```", "```ts\nnamespace OptionalChainingNS {\n\u00a0\u00a0\u00a0\u00a0interface Wheels {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0count?: number;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0interface Vehicle {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0wheels?: Wheels;\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0class Automobile implements Vehicle {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0constructor(public wheels?: Wheels) {}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0const car: Automobile | null = new Automobile({\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0count: undefined\n\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0console.log(\"car \", car);\n\u00a0\u00a0\u00a0\u00a0console.log(\"wheels \", car?.wheels);\n\u00a0\u00a0\u00a0\u00a0console.log(\"count \", car?.wheels?.count);\n}\n```", "```ts\nconst count = !car ? 0 \n\u00a0\u00a0\u00a0\u00a0: !car.wheels ? 0 \n\u00a0\u00a0\u00a0\u00a0: !car.wheels.count ? 0\n\u00a0\u00a0\u00a0\u00a0: car.wheels.count;\n```", "```ts\nconst val1 = undefined;\nconst val2 = 10;\nconst result = val1 ?? val2;\nconsole.log(result);\n```", "```ts\ntsc tsfile.ts \u2013lib 'es5, dom'\n```"]