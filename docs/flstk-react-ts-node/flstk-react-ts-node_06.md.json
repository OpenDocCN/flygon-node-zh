["```ts\n    npx, instead of npm i -g, so that you don't have to install create-react-app locally.\n    ```", "```ts\n    build. After the build completes, you should see the following structure from VSCode:\n    ```", "```ts\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(\n\u00a0\u00a0<React.StrictMode>\n\u00a0\u00a0\u00a0\u00a0<App />\n\u00a0\u00a0</React.StrictMode>,\n\u00a0\u00a0document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you \n\u00a0\u00a0\u00a0// can change\n// unregister() to register() below. Note this comes with some \n // pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n```", "```ts\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nfunction App() {\n\u00a0\u00a0return (\n\u00a0\u00a0\u00a0\u00a0<div className=\"App\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<header className=\"App-header\">\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<p>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Edit <code>src/App.tsx</code> and save to reload.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</p>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<a\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0className=\"App-link\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0href=\"https://reactjs.org\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0target=\"_blank\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0rel=\"noopener noreferrer\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Learn React\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</a>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</header>\n\u00a0\u00a0\u00a0\u00a0</div>\n\u00a0\u00a0);\n}\nexport default App;\n```", "```ts\nnpm start\n```", "```ts\n    import React, { FC } from \"react\";\n    const Home: FC = () => {\n    \u00a0\u00a0return <div>Hello World! Home</div>;\n    };\n    export default Home;\n    ```", "```ts\n    import React from 'react';\n    import ReactDOM from 'react-dom';\n    import './index.css';\n    import App from './App';\n    import * as serviceWorker from './serviceWorker';\n    import { BrowserRouter } from \"react-router-dom\";\n    ReactDOM.render(\n    \u00a0\u00a0<React.StrictMode>\n    \u00a0\u00a0\u00a0\u00a0<BrowserRouter>\n    \u00a0\u00a0\u00a0\u00a0<App />\n    \u00a0\u00a0\u00a0\u00a0</BrowserRouter>\n    \u00a0\u00a0</React.StrictMode>,\n    \u00a0\u00a0document.getElementById('root')\n    );\n    // If you want your app to work offline and load faster, \n    \u00a0\u00a0// you can change\n    // unregister() to register() below. Note this comes with\n    \u00a0\u00a0// some pitfalls.\n    // Learn more about service workers: \n    \u00a0\u00a0\u00a0// https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n    ```", "```ts\n    import React, { FC } from \"react\";\n    const AnotherScreen: FC = () => {\n    \u00a0\u00a0return <div>Hello World! Another Screen</div>;\n    };\n    export default AnotherScreen;\n    ```", "```ts\n    import React from \"react\";\n    import \"./App.css\";\n    import Home from \"./Home\";\n    import AnotherScreen from './AnotherScreen';\n    import { Switch, Route } from \"react-router\";\n    function App() {\n    \u00a0\u00a0return (\n    \u00a0\u00a0\u00a0\u00a0<div className=\"App\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<header className=\"App-header\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Switch. This component acts a lot like a switch statement. It tells React Router which component to display when a certain route, URL path, is given. Inside of the Switch component, we can see two Route components. The first one is for the default root route, as indicated by path being equal to \"/\". For this route, React Router will display the Home component (note that using exact just means the URL should be an exact match). The second route is for the \"/another\" path. So, when this path is in the URL box, the AnotherScreen component will be loaded. \n    ```"]