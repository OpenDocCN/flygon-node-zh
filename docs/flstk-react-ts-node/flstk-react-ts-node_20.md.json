["```ts\n    npm install\n    ```", "```ts\n    npm install\n    ```", "```ts\n    Apt is a software dependency packaging tool for Linux distributions such as Ubuntu and Debian. Its roughly comparable to NPM. So here, we are updating our apt to the latest version and then using it to install Redis.\n    ```", "```ts\n    sudo nano /etc/redis/redis.conf\n    ```", "```ts\n    sudo systemctl restart redis.service\n    ```", "```ts\n    sudo systemctl stop redis.service\n    ```", "```ts\n    sudo systemctl start redis.service\n    ```", "```ts\n    sudo systemctl status redis\n    ```", "```ts\n    sudo apt install postgresql\n    ```", "```ts\n    superforumsvc role the owner of the new database.\n    ```", "```ts\n    sudo apt install nodejs \n    ```", "```ts\n    node -v\n    ```", "```ts\n    curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -\n    ```", "```ts\n    sudo apt install nodejs\n    ```", "```ts\n    sudo apt install npm\n    ```", "```ts\n    sudo npm install -g pm2\n    ```", "```ts\n    sudo apt update\n    sudo apt install nginx\n    ```", "```ts\n    /var/www directory is the default location for web files, as the name implies.\n    ```", "```ts\n    del-cli package is a universal command-line delete command. This means that irrespective of whether your development machine is Linux, Mac, or Windows, this command will work the same. Similarly, the cpy-cli package allows the universal copying of files and folders. We use these commands so that we can have a single NPM script command that will work the same across all developer operating systems.Let's explain this script. The build script first deletes the `dist` folder, so that we start afresh each time. It then copies the contents of `dev-config` into `dist` and separately copies the `.env` file into `dist`. And then, finally, it runs the TypeScript compiler.So, notice we also have a new folder called `dev-config`. This folder will hold configuration-related files that will ultimately be copied into our `dist` folder by the build script. The files in this folder are the `.env` file, for global configuration, the `ormconfig.js` file, for TypeORM configuration, and our `package.json` file. NoteYour `.env` file in the `dev-config` folder must have the working configuration for *your* server. This includes the passwords you are using, the account names, and the IP addresses. They must all be set correctly according to *your* configurations. If you have trouble getting your server to work, this file is the first place to look.\n    ```", "```ts\n    @types/express, but we are making sure the latest version is now there. If you want to learn more about this bug, refer to this link: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/47339.\n    ```", "```ts\n    dist folder, as shown in the following screenshot:![Figure 17.18 \u2013 The dist folder\n    ](img/Figure_17.18_B15508.jpg)Figure 17.18 \u2013 The dist folder\n    ```", "```ts\n    pscp.Now, when I run this on my machine, I get the following result:![Figure 17.19 \u2013 Attempt dist copy failure\n    ](img/Figure_17.19_B15508.jpg)Figure 17.19 \u2013 Attempt dist copy failureSo, obviously this failed. This failure is due to a lack of permissions on the destination folder on the Ubuntu server. Let's fix this now.\n    ```", "```ts\n    sudo chmod -R 777 /var/www/superforum/server\n    ```", "```ts\n    scp -i <your pem path> <your path>/.env <username><yourserverpath>/.env\n    ```", "```ts\n    sudo chmod -R 755 /var/www/superforum/server\n    ```", "```ts\n    npm install \n    ```", "```ts\n    pm2 with systemd and start our Node server when restarting the server. Systemd again is our Ubuntu services controller. After running that command, you should see something similar to this:![Figure 17.22 \u2013 pm2 startup\n    ](img/Figure_17.22_B15508.jpg)Figure 17.22 \u2013 pm2 startup\n    ```", "```ts\n    pm2 save \n    ```", "```ts\n    sudo mkdir /var/www/superforum/client\n    ```", "```ts\n        const client = new ApolloClient({\n        \u00a0\u00a0uri: process.env.REACT_APP_GQL_URL, just like how we did it on our server. But where is this variable coming from? I'll show that now.\n        ```", "```ts\n    create-react-app, but we tweaked it by adding the environment variable. Once it completes, you should see this folder called REACT_APP_. If this prefix is missing, the variable will be ignored.2\\. They are inserted into our code at build time and the value gets deployed as part of our client script code. This means users will be able to search the browser scripts and view this data. Therefore, **never** include sensitive information in these environment variables.\n    ```", "```ts\n    sudo chmod -R 777 /var/www/superforum/client\n    ```", "```ts\n    scp -i <your pem path> -r <your path>/* <username><yourserverpath>\n    ```", "```ts\n    sudo chmod -R 755 /var/www/superforum/client\n    ```", "```ts\n    ec2-3-16-168-210.us-east-2.compute.amazonaws.com, yours will be different and again you can find it on your VM instance screen, you should see this:![Figure 17.34 \u2013 Default NGINX load screen\n    ](img/Figure_17.34_B15508.jpg)Figure 17.34 \u2013 Default NGINX load screen\n    ```", "```ts\n    sudo nano /etc/nginx/conf.d/superforum.conf\n    ```", "```ts\n    sudo nginx -t\n    ```", "```ts\n    sudo systemctl restart nginx\n    ```", "```ts\n    pm2 stop index\n    node /var/www/superforum/server/index.js\n    ```", "```ts\n    sudo -u postgres psql\n    \\c SuperForum\n    Update \"Users\" set \"Confirmed\" = true;\n    ```"]