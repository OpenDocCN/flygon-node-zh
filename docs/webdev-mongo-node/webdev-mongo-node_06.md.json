["```js\nres.render('index');\n```", "```js\nconst ViewModel = {\n        images: [\n            images: [{\n                uniqueId: 1,\n                title: 'Sample Image 1',\n                description: '',\n                filename: 'sample1.jpg',\n                Views: 0,\n                likes: 0,\n                timestamp: Date.now()\n            }, {\n                uniqueId: 2,\n                title: 'Sample Image 2',\n                description: '',\n                filename: 'sample2.jpg',\n                Views: 0,\n                likes: 0,\n                timestamp: Date.now()\n            }, {\n                uniqueId: 3,\n                title: 'Sample Image 3',\n                description: '',\n                filename: 'sample3.jpg',\n                Views: 0,\n                likes: 0,\n                timestamp: Date.now()\n            }, {\n                uniqueId: 4,\n                title: 'Sample Image 4',\n                description: '',\n                filename: 'sample4.jpg',\n                Views: 0,\n                likes: 0,\n                timestamp: Date.now()\n            }]\n        };\nres.render('index', ViewModel);\n```", "```js\nres.render('image');\n```", "```js\nconst ViewModel = {\n    image: {\n        uniqueId: 1,\n        title: 'Sample Image 1',\n        description: 'This is a sample.',\n        filename: 'sample1.jpg',\n        Views: 0,\n        likes: 0,\n        timestamp: Date.now()\n    },\n    comments: [{\n        image_id: 1,\n        email: 'test@testing.com',\n        name: 'Test Tester',\n        gravatar: 'http://lorempixel.com/75/75/animals/1',\n        comment: 'This is a test comment...',\n        timestamp: Date.now()\n    }, {\n        image_id: 1,\n        email: 'test@testing.com',\n        name: 'Test Tester',\n        gravatar: 'http://lorempixel.com/75/75/animals/2',\n        comment: 'Another followup comment!',\n        timestamp: Date.now()\n    }]\n};\nres.render('image', ViewModel);\n```", "```js\n$ node server.js\n```", "```js\nnpm install multer --save\n```", "```js\nmulter = require('multer');\n```", "```js\napp.use(multer({\n    dest: path.join(__dirname, 'public/upload/temp')\n}));\n```", "```js\nconst fs = require('fs'),\npath = require('path');\n```", "```js\nres.send('The image:create POST controller');\nres.redirect('/images/1');\n```", "```js\nconst saveImage = function() {\n// to do...\n};\nsaveImage();\n```", "```js\nlet possible = 'abcdefghijklmnopqrstuvwxyz0123456789',\nimgUrl = '';\n```", "```js\nfor(let i=0; i < 6; i+=1) {\n    imgUrl += possible.charAt(Math.floor(Math.random() *\npossible.length));\n}\n```", "```js\nconst tempPath = req.files.file.path,\next = path.extname(req.files.file.name).toLowerCase(),\ntargetPath = path.resolve(`./public/upload/${imgUrl}${ ext}`);\n```", "```js\nif (ext === '.png' || ext === '.jpg' || ext === '.jpeg' || ext ===\n    '.gif') {\n    fs.rename(tempPath, targetPath, (err) => {\n        if (err) throw err;\n        res.redirect(`/images/ ${imgUrl}`);\n    });\n} else {\n    fs.unlink(tempPath, () => {\n        if (err) throw err;\n        res.json(500, { error: 'Only image files are allowed.' });\n    });\n}\n```", "```js\nconst possible = 'abcdefghijklmnopqrstuvwxyz0123456789',\n    imgUrl = '';\nfor (let i = 0; i < 6; i += 1) {\n    imgUrl += possible.charAt(Math.floor(Math.random() *\n        possible.length));\n}\nconst tempPath = req.files.file.path,\n    ext = path.extname(req.files.file.name).toLowerCase(),\n    targetPath = path.resolve(`./public/upload/${ imgUrl }${ ext }`);\nif (ext === '.png' || ext === '.jpg' || ext === '.jpeg' || ext ===\n    '.gif') {\n    fs.rename(tempPath, targetPath, (err) => {\n        if (err) throw err;\n        res.redirect('/images/${ext}');\n    });\n} else {\n    fs.unlink(tempPath, () => {\n        if (err) throw err;\n        res.json(500, { error: 'Only image files are allowed.' });\n    });\n}\n```", "```js\nconst Stats = require('./stats'),\n    Images = require('./images'),\n    Comments = require('./comments');\nmodule.exports = (ViewModel, callback) => {\n    ViewModel.sidebar = {\n        stats: Stats(),\n        popular: Images.popular(),\n        comments: Comments.newest()\n    };\n    callback(ViewModel);\n};\n```", "```js\nres.render('index', ViewModel);\n```", "```js\nsidebar(ViewModel, (ViewModel) => {\n    res.render('index', ViewModel);\n});\n```", "```js\nsidebar(ViewModel, (ViewModel) => {\n    res.render('image', ViewModel);\n});\n```", "```js\nsidebar(ViewModel);\nres.render('index', ViewModel);\n```", "```js\nconst sidebar = require('../helpers/sidebar');\n```", "```js\nmodule.exports = () => {\n    const stats = {\n        images: 0,\n        comments: 0,\n        Views: 0,\n        likes: 0\n    };\n    return stats;\n};\n```", "```js\nmodule.exports = {\n    popular() {\n        let images = [{\n                uniqueId: 1,\n                title: 'Sample Image 1',\n                description: '',\n                filename: 'sample1.jpg',\n                Views: 0,\n                likes: 0,\n                timestamp: Date.now()\n            },\n            {\n                uniqueId: 2,\n                title: 'Sample Image 2',\n                description: '',\n                filename: 'sample2.jpg',\n                Views: 0,\n                likes: 0,\n                timestamp: Date.now()\n            },\n            {\n                uniqueId: 3,\n                title: 'Sample Image 3',\n                description: '',\n                filename: 'sample3.jpg',\n                Views: 0,\n                likes: 0,\n                timestamp: Date.now()\n            },\n            {\n                uniqueId: 4,\n                title: 'Sample Image 4',\n                description: '',\n                filename: 'sample4.jpg',\n                Views: 0,\n                likes: 0,\n                timestamp: Date.now()\n            }\n        ];\n        return images;\n    }\n};\n```", "```js\nmodule.exports = {\n    newest() {\n        let comments = [{\n            image_id: 1,\n            email: 'test@testing.com',\n            name: 'Test Tester',\n            gravatar: 'http://lorempixel.com/75/75/animals/1',\n            comment: 'This is a test comment...',\n            timestamp: Date.now(),\n            image: {\n                uniqueId: 1,\n                title: 'Sample Image 1',\n                description: '',\n                filename: 'sample1.jpg',\n                Views: 0,\n                likes: 0,\n                timestamp: Date.now\n            }\n        }, {\n            image_id: 1,\n            email: 'test@testing.com',\n            name: Test Tester ',\n            gravatar: 'http://lorempixel.com/75/75/animals/2',\n            comment: 'Another followup comment!',\n            timestamp: Date.now(),\n            image: {\n                uniqueId: 1,\n                title: 'Sample Image 1',\n                description: '',\n                filename: 'sample1.jpg',\n                Views: 0,\n                likes: 0,\n                timestamp: Date.now\n            }\n        }];\n        return comments;\n    }\n};\n```", "```js\n<script src=\"img/jquery.min.js\"></script>\n<script type=\"text/javascript\" src=\"img/scripts.js\"></script>\n```", "```js\n$(function(){\n// to do...\n});\n```", "```js\n$(document).ready(function(){\n// to do...\n});\n```", "```js\n$('#post-comment').hide();\n$('#btn-comment').on('click', function(event) {\n    event.preventDefault();\n    $('#post-comment').show();\n});\n```", "```js\n$('#btn-like').on('click', function(event) {\n    event.preventDefault();\n    let imgId = $(this).data('id');\n    $.post('/images/' + imgId + '/like').done(function(data) {\n        $('.likes-count').text(data.likes);\n    });\n});\n```", "```js\napp.post('/images/:image_id/like', image.like);\n```", "```js\nlike(req, res) {\n    res.json({ likes: 1 });\n},\n```"]