["```js\n    $ sudo npm install -g-g install jitsu\n```", "```js\n$ jitsu login \ninfo:    Welcome to Nodejitsu \ninfo:    jitsu v0.13.18, node v0.10.26 \ninfo:    It worked if it ends with Nodejitsu ok \ninfo:    Executing command login \nhelp:    An activated nodejitsu account is required to login \nhelp:    To create a new account use the jitsu signup command \nprompt: username:  jkat98 \nprompt: password: \ninfo:    Authenticated as jkat98 \ninfo:    Nodejitsu ok \n```", "```js\n[/server.js] \nmongoose.connect('YOUR_NODEJITSU_CONNECTION_STRING_HERE'); \nmongoose.connection.on('open', ()=>{ \n    console.log('Mongoose connected.'); \n}); \n```", "```js\n$ jitsu deploy \ninfo:    Welcome to Nodejitsu jkat98 \ninfo:    jitsu v0.13.18, node v0.10.26 \ninfo:    It worked if it ends with Nodejitsu ok \ninfo:    Executing command deploy \nwarn:  \nwarn:    The package.json file is missing required fields: \nwarn: \nwarn:      Subdomain name \nwarn: \nwarn:    Prompting user for required fields. \nwarn:    Press ^C at any time to quit. \nwarn: \nprompt: Subdomain name:  (jkat98-imgploadr) imgploadr \nwarn:    About to write /Users/jasonk/repos/nodebook/imgploadr/package.json \n... (a lot of npm install output) ... \ninfo:    Done creating snapshot 0.0.1 \ninfo:    Updating app myapp \ninfo:    Activating snapshot 0.0.1 for myapp \ninfo:    Starting app myapp \ninfo:    App myapp is now started \ninfo:    http://imgploadr.nodejitsu.com on Port 80 \ninfo:    Nodejitsu ok\n```", "```js\n400 Error: ENOENT, open \n'/opt/run/snapshot/package/public/upload/temp/72118-89rld0.png \n```", "```js\n// Ensure the temporary upload folders exist \n        fs.mkdir(path.join(__dirname, '../public/upload'), \n         (err)=>{ \n            console.log(err); \n            fs.mkdir(path.join(__dirname, \n'../public/upload/temp'),  \n                (err)=>{ \n                    console.log(err); \n                }); \n        }); \n```", "```js\nconst connect = require('connect'), \n    path = require('path'), \n    routes = require('./routes'), \n    exphbs = require('express3-handlebars'), \n    moment = require('moment'), \n    fs = require('fs'); \n```", "```js\n$ jitsu deploy \n```", "```js\n    $ heroku login\n    Enter your Heroku credentials.\n    Email: jkat98@gmail.com\n    Password (typing will be hidden):\n    Authentication successful.\n\n```", "```js\n    $ heroku create\n    Creating secret-shore-2839... done, stack is cedar\n    http://secret-shore-2839.herokuapp.com/ | git@heroku.com:secret-\n shore-2839.git\n\n```", "```js\n    $ heroku apps:rename imgploadr --app secret-shore-2839\n    Renaming secret-shore-2839 to imgploadr... done\n    http://imgploadr.herokuapp.com/ | git@heroku.com:imgploadr.git\n    Don't forget to update your Git remotes on any local checkouts.\n\n```", "```js\n    $ git remote add heroku git@heroku.com:imgploadr.git\n```", "```js\n    web: node server.js \n```", "```js\n    $ heroku addons:create mongohq --app imgploadr\n    Adding mongohq on imgploadr... done, v3 (free)\n    Use 'heroku addons:docs mongohq' to view documentation.\n```", "```js\nmongoose.connect('mongodb://imgploadrdb:password@kahana.mongohq.co\n m:10089/app26'); \nmongoose.connection.on('open', ()=>{ \n    console.log('Mongoose connected.'); \n});\n```", "```js\n    $ git commit -am \"Update mongoose connection string\"\n    $ git push heroku master\n    Initializing repository, done.\n    Counting objects: 50, done.\n    Delta compression using up to 8 threads.\n    Compressing objects: 100% (43/43), done.\n    Writing objects: 100% (50/50), 182.80 KiB | 0 bytes/s, done.\n    Total 50 (delta 3), reused 0 (delta 0)\n    ... npm install output ...\n    To git@heroku.com:imgploadr.git\n     * [new branch]      master -> master\n\n```", "```js\n    $ heroku ps:scale web=1 --app imgploadr\n    Scaling dynos... done, now running web at 1:1X.\n    $ heroku open\n    Opening imgploadr... done\n\n```", "```js\nmongoose.connect('mongodb://imgploadrdb:password@ds061248.mongolab\n .com:61248/imgploadr'); \nmongoose.connection.on('open', ()=>{ \n    console.log('Mongoose connected.'); \n}); \n```", "```js\nmongoose.connect('mongodb://your_specific_azure_\n                  mongolab_uri'); \nmongoose.connection.on('open', ()=>{ \n    console.log('Mongoose connected.'); \n});\n```", "```js\n    $ git commit -am \"Azure connection string\"\n```", "```js\n    $ git remote add azure SPECIFIC_URL_FOR_YOUR_SERVER\n    $ git push azure master  \n```"]