["```js\nvar Person = Backbone.Model.extend(); \nvar PersonView = Backbone.View.extend({ \n    tag: 'div', \n    render: function() { \n        var html = [ \n            this.model.get('name'), \n            '<br/>', \n            this.model.get('website') \n        ].join(''); \n\n        this.$el.html(html); \n\n        return this;     \n    } \n}); \n\nvar person = new Person({ \n        name: 'Jason Krol', \n        website: 'http://kroltech.com' \n    }), \n    view = new PersonView({ model: person }); \n\n$('body').append(view.render().el); \n```", "```js\nvar App = Ember.Application.create(), \n    movies = [{ \n        title: \"Big Trouble in Little China\", \n        year: \"1986\" \n    }, { \n        title: \"Aliens\", \n        year: \"1986\" \n    }]; \n\nApp.IndexRoute = Ember.Route.extend({ \n    model: function() { \n        return movies;  \n    } \n}); \n\n<script type=\"text/x-handlebars\" data-template-name=\"index\"> \n    {{#each}} \n        {{title}} - {{year}}<br/> \n    {{/each}} \n</script> \n```", "```js\nclass Greet extends React.Component {\n  render() {\n      this.props.user = this.props.user || 'All';\n      return ( < div >\n          <\n          h4 > Greeting to { this.props.user }! < /h4> <\n          /div>);\n  }\n}\n```", "```js\nReactDOM.render(\n <Greet user=\"Developers\" />,\n document.getElementById('root')\n);\n```", "```js\nnpm install -g @Angular/cli\n```", "```js\nng new phonebook-app\n```", "```js\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\n```", "```js\nlet name : string = \"Bruno\";\n```", "```js\nclass GreetTheWorld {\n     greet() {\n         return \"Hello World\";\n     }\n }\n```", "```js\nvar GreetTheWorld = (function () {\n     function GreetTheWorld() {\n     }\n     GreetTheWorld.prototype.greet = function () {\n         return \"Hello World\";\n     };\n     return GreetTheWorld;\n }());\n```", "```js\nimport { Component } from '@Angular/core';\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {}\n```", "```js\nimport { BrowserModule } from '@Angular/platform-browser';\nimport { NgModule } from '@Angular/core';\nimport { AppComponent } from './app.component';\n@NgModule({\n    declarations: [AppComponent],\n    imports: [BrowserModule],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```", "```js\n<div class=\"outter\">\n<!-- <subscribe></subscribe>-->\n<!-- <list></list> -->\n</div>\n\n```", "```js\n.outter {\n    padding: 20 px;\n    border: solid 2 px# AAA;\n    width: 200 px;\n}\n```", "```js\nimport { Component } from '@Angular/core';\n@Component({\n    selector: 'list',\n    templateUrl: './list.component.html'\n})\nexport class ListComponent {\n    public phoneList = []\n    constructor() {\n        this.phoneList = [{\n            name: 'Superman',\n            phno: 1234567890\n        }, {\n            name: 'Batman',\n            phno: 2222222890\n        }]\n    }\n} \n```", "```js\n<div>\n    <div class=\"list-group\">\n        <div class=\"list-group-item list-group-item-info\">\n            Contact list\n        </div>\n        <a href=\"#\" *ngFor=\"let data of phoneList;\" class=\"list-group-item\">\n {{data.name}}\n <span class=\"badge\">{{data.phone_no}}</span>\n </a>\n   </div>\n<div>\n```", "```js\nimport { ListComponent } from './list.component';\n@NgModule({\n    declarations: [\n        AppComponent,\n        ListComponent\n    ],\n    imports: [\n        BrowserModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\n```", "```js\n<div class=\"outter\">\n<!-- <subscribe></subscribe>-->\n    <list>&lt;/list>\n</div>\n```", "```js\nimport { Injectable } from '@Angular/core';\nimport { HttpClient } from '@Angular/common/http';\nimport 'rxjs/add/operator/map'\n@Injectable()\nexport class PhonebookService {\n    constructor(private http: HttpClient) {}\n    getContactList() {\n        return this.http.get('http://localhost:8000/phone/list')\n    }\n}\n```", "```js\nimport { Component } from '@Angular/core';\nimport { PhonebookService } from './phonebook.service';\n@Component({\n    selector: 'list',\n    templateUrl: './list.component.html'\n})\nexport class ListComponent {\n    public phoneList = []\n    constructor(private _pbService: PhonebookService) {\n        this._pbService.getContactList()\n            .subscribe((response) => {\n                this.phoneList = response['data'];\n            })\n    }\n}\n```", "```js\nimport {HttpClientModule} from '@Angular/common/http';\nimport {PhonebookService} from './phonebook.service';\n```", "```js\n@NgModule({\n    declarations: [\n        ListComponent,\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule\n    ],\n    providers: [PhonebookService],\n    bootstrap: [AppComponent]\n})\n```", "```js\nimport {\n    Component,\n    Output,\n    EventEmitter\n} from '@Angular/core';\nimport {\n    PhonebookService\n} from './phonebook.service';\nimport {\n    FormControl,\n    FormGroup,\n    Validators\n} from '@Angular/forms';\n@Component({\n    selector: 'add',\n    templateUrl: './add.component.html'\n})\nexport class AddComponent {\n    @Output() onAdded = new EventEmitter < Object > ();\n    public newRecordForm = new FormGroup({\n        name: new FormControl(),\n        phone_no: new FormControl(0, [Validators.required, Validators.minLength(10)])\n    });\n    constructor(private _pbService: PhonebookService) {\n        this.resetForm();\n    }\n    resetForm() {\n        this.newRecordForm.reset();\n    }\n    onSubmit() {\n        if (this.newRecordForm.valid) {\n            const payload = this.newRecordForm.value;\n            this._pbService.postContactList(payload).subscribe((response) => {\n                let newListData = response['data'];\n                this.onAdded.emit(newListData);\n                this.resetForm();\n            })\n        }\n    }\n}\n```", "```js\n<form [formGroup]=\"newRecordForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n    <div class=\"form-group\">\n        <label class=\"center-block\">Name:\n            <input class=\"form-control\" formControlName=\"name\">\n        </label>\n        <label class=\"center-block\">Phone no:\n            <input class=\"form-control\" formControlName=\"phone_no\" ngClass=\"\">\n        </label>\n    </div>\n    <input type=\"submit\" name=\"submit\">\n</form>\n```", "```js\n<div class=\"container\">\n    <add (onAdded)=\"onAddedData($event)\"></add>\n    <list [phoneList]=\"listData\"></list>\n</div>\n```", "```js\nexport class AppComponent {\n    public listData = [];\n    onAddedData(newListData: any) {\n        this.listData = newListData;\n    }\n}\n```", "```js\n    $ npm install -g grunt-cli\n```", "```js\n    $ npm install -g bower\n    $ bower install jquery\n    bower cached        git://github.com/jquery/jquery.git#2.1.0\n    bower validate      2.1.0 against git://github.com/jquery/jquery.git#*\n    bower new           version for git://github.com/jquery/jquery.git#*\n    bower resolve       git://github.com/jquery/jquery.git#*\n    bower download      https://github.com/jquery/jquery/archive/2.1.1.tar.gz\n    bower extract       jquery#* archive.tar.gz\n    bower resolved      git://github.com/jquery/jquery.git#2.1.1\n    bower install       jquery#2.1.1\n    jquery#2.1.1 bower_components/jquery\n\n```", "```js\n$sprite-bg:url(\"/images/editor/sprite-msg-bg.png\"); \n\n@mixin radius($radius) { \n  -moz-border-radius: $radius; \n  -webkit-border-radius: $radius; \n  -ms-border-radius: $radius; \n  border-radius: $radius; \n} \n\n.upload-button { \n    border-bottom: solid 2px #005A8B; \n    background: transparent $sprite-bg no-repeat; \n    @include radius(4px); \n    cursor: pointer; \n} \n\n#step-status { \n    color:#dbdbdb; font-size:14px; \n\n    span.active { \n        color:#1e8acb; \n    } \n\n    &.basic-adjust, &.message-editor { \n        width: 525px; \n    } \n\n    .icon { \n        height:65px; \n        width: 50px; \n        margin:auto; \n    } \n} \n\n@import \"alerts\"; \n@import \"attachments\"; \n@import \"codemirror\"; \n@import \"drafts\"; \n```"]