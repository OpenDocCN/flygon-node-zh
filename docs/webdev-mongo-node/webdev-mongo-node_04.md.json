["```js\nconst express = require('express'); \nconst app = express(); \napp.get('/', (req, res)=>{ \n   res.send('Hello World'); \n}); \napp.listen(3300); \n```", "```js\n/(project root) \n---/helpers \n---/controllers \n---/public \n------/css \n------/img \n------/js \n------/upload \n---/server \n---/Views \n------/layouts \n------/partials \n```", "```js\n$ npm init  \n```", "```js\n$ npm install express morgan body-parser cookie-parser method-\noverride errorhandler express-handlebars --save  \n```", "```js\nconst express = require('express'); \n// config = require('./server/configure'); \nlet app = express(); \n```", "```js\napp.set('port', process.env.PORT || 3300); \napp.set('Views', `${__dirname}/Views`); \n// app = config(app); \n```", "```js\napp.get('/', (req, res) => {\n  res.send('Hello World');\n});\napp.listen(app.get('port'), () => {\n  console.log(`Server up: http://localhost:${app.get('port')}`);\n});\n```", "```js\n$ node server.js\nServer up: http://localhost:3300  \n```", "```js\n$   PORT=5500 node server.js\nServer   up: http://localhost:5500   \n```", "```js\napp.use((err, req, res, next)=> { \n    // do whatever you want here, alter req, alter res, throw err etc. \n    return next(); \n});\n```", "```js\napp.use('/get_data', (err, req, res, next)=>{ \n    console.log('Hello world!')     \n    return next(); \n}, (err, req, res, next)=>{ \n    console.log('Hello world Again!')     \n    return next();\n});\n```", "```js\nconst path = require('path'), \n    routes = require('./routes'), \n    exphbs = require('express-handlebars'),), \n    express = require('express'), \n    bodyParser = require('body-parser'), \n    cookieParser = require('cookie-parser'), \n    morgan = require('morgan'), \n    methodOverride = require('method-override'), \n    errorHandler = require('errorhandler'); \n\nmodule.exports = (app)=>{ \n   app.use(morgan('dev')); \n   app.use(bodyParser.urlencoded({'extended':true})); \n   app.use(bodyparser.json()); \n   app.use(methodOverride()); \n   app.use(cookieParser('some-secret-value-here')); \n   routes(app);//moving the routes to routes folder. \n\n   app.use('/public/', express.static(path.join(__dirname, \n            '../public'))); \n\nif ('development' === app.get('env')) { \n   app.use(errorHandler()); \n} \n    return app; \n}; \n```", "```js\nhttp://localhost:3300/public/js/somescript.js\nhttp://localhost:3300/public/img/main_logo.jpg\n```", "```js\nconfig = require('./server/configure'), \napp = config(app); \n```", "```js\nGET  /(index) - home.index (render the homepage of the site) \nGET  /images/image_id - image.index (render the page for a specific \n                                     image)\nPOST /images - image.create (when a user submits and uploads a new \n                              image)\nPOST /images/image_id/like - image.like (when a user clicks the Like \n                                          button)\nPOST /images/image_id/comment - image.comment (when a user posts a \n                                                comment)\n```", "```js\nconst express = require('express'), \n    router = express.Router(), \n    home = require('../controllers/home'), \n    image = require('../controllers/image'); \nmodule.exports = (app)=>{ \n    router.get('/', home.index); \n    router.get('/images/:image_id', image.index); \n    router.post('/images', image.create); \n    router.post('/images/:image_id/like', image.like); \n    router.post('/images/:image_id/comment', image.comment); \n    app.use(router); \n}; \n```", "```js\nmodule.exports = { \n    index(req, res){ \n        res.send('The home:index controller'); \n    } \n}; \n```", "```js\nmodule.exports = { \n    index(req, res) { \n        res.send(`The image:index controller ${req.params.image_id}`); \n    }, \n    create(req, res) { \n        res.send('The image:create POST controller'); \n    }, \n    like (req, res) { \n        res.send('The image:like POST controller'); \n    }, \n    comment(req, res) { \n        res.send('The image:comment POST controller'); \n    } \n}; \n```", "```js\nroutes(app);  \n```", "```js\nconst express = require('express'); \nconst config = require('./server/configure'); \nlet app = express(); \napp.set('port', process.env.PORT || 3300); \napp.set('Views', `${ __dirname }/Views`); \napp = config(app); \n\n//commenting out following snippet that is not required \n// app.get('/', function(req, res){ \n//    res.send('Hello World'); \n// }); \n\nconst server = app.listen(app.get('port'), ()=>{ \n    console.log(`Server up: http://localhost:${ app.get('port')}`); \n}); \n```", "```js\nconst path = require('path'), \n    routes = require('./routes'), \n    exphbs = require('express-handlebars'), \n    express = require('express'), \n    bodyParser = require('body-parser'), \n    cookieParser = require('cookie-parser'), \n    morgan = require('morgan'), \n    methodOverride = require('method-override'), \n    errorHandler = require('errorhandler'); \n\nmodule.exports = (app)=>{ \n  app.use(morgan('dev'));\n  app.use(bodyParser.json());\n  app.use(bodyParser.urlencoded({\n  extended: true\n}));\n  app.use(methodOverride()); \n  app.use(cookieParser('some-secret-value-here')); \n  routes(app); \n  app.use('/public/', express.static(path.join(__dirname,  \n          '../public'))); \n\n  if ('development' === app.get('env')) { \n    app.use(errorHandler()); \n  } \n  return app; \n}; \n```", "```js\nconst express = require('express'), \n    router = express.Router(), \n    home = require('../controllers/home'), \n    image = require('../controllers/image'); \nmodule.exports = (app)=>{ \n    router.get('/', home.index); \n    router.get('/images/:image_id', image.index); \n    router.post('/images', image.create); \n    router.post('/images/:image_id/like', image.like); \n    router.post('/images/:image_id/comment', image.comment); \n    app.use(router); \n}; \n```", "```js\nmodule.exports = { \n    index(req, res) { \n        res.send('The home:index controller'); \n    } \n}; \n```", "```js\nmodule.exports = { \n    index(req, res) { \n        res.send(`The image:index controller ${req.params.image_id}`); \n    }, \n    create(req, res) { \n        res.send('The image:create POST controller'); \n    }, \n    like (req, res) { \n        res.send('The image:like POST controller'); \n    }, \n    comment(req, res) { \n        res.send('The image:comment POST controller'); \n    } \n}; \n```", "```js\n The image:index controller testing123 \n```", "```js\n<div> \n    <p>Hello there {{ name }}!  Todays date is {{ timestamp }}</p> \n</div> \n```", "```js\n<div> \n    <p>Hello there Jason!  Todays date is Sun Apr 13</p> \n</div> \n```", "```js\napp.engine('handlebars', exphbs.create({ \n    defaultLayout: 'main', \n    layoutsDir: `${app.get('Views')}/layouts`, \n    partialsDir: [`${app.get('Views') }/partials`] \n}).engine); \napp.set('View engine', 'handlebars'); \n```"]