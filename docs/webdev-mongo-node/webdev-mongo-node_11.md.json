["```js\nnpm install hapi --save\n```", "```js\nconst hapi = require('hapi');\nconst server = new hapi.Server();\nserver.connection({\n    host: 'localhost',\n    port: 8000,\n    routes: { cors: true }\n});\n// Start the server\nserver.start((err) => {\n    if (err) {\n        throw err;\n    }\n    console.log('Server running at:', server.info.uri);\n});\n```", "```js\n{\n \"list\": [\n {\n   \"phone_no\": 1212345678,\n   \"name\": \"Batman\"\n },\n {\n   \"phone_no\": 1235678910,\n   \"name\": \"Superman\"\n },\n {\n   \"phone_no\": 9393939393,\n   \"name\": \"Flash\"\n }]\n}\n```", "```js\nlet phonebook = require('./phonebook');\nmodule.exports = [{\n    method: 'GET',\n    path: '/phone/list',\n    config: {\n        handler(request, reply) {\n            reply({\n                message: \"phonebook of superheroes\",\n                data: phonebook.list\n            });\n        }\n    }\n}]\n```", "```js\nconst hapi = require('hapi');\nconst server = new hapi.Server();\nconst routes = require('./routes');\nserver.connection({\n    host: 'localhost',\n    port: 8000,\n    routes: { cors: true }\n});\n//Add the routes\nserver.route(routes);\n// Start the server\nserver.start((err) => {\n    if (err) {\n        throw err;\n    }\n    console.log('Server running at:', server.info.uri);\n});\n```", "```js\nlet phonebook = require('./phonebook');\nmodule.exports = [{\n    method: 'GET',\n    path: '/phone/list',\n    config: {\n        handler(request, reply) {\n            reply({\n                message: \"phonebook of superheroes\",\n                data: phonebook.list\n            });\n        }\n    }\n}, {\n    method: 'POST',\n    path: '/phone/add',\n    config: {\n        handler(request, reply) {\n            let payload = request.payload;\n            phonebook.list.unshift(payload);\n            reply({\n                message: \"Added successfully\",\n                data: phonebook.list\n            });\n        }\n    }\n}, {\n    method: 'PUT',\n    path: '/phone/{phno}',\n    config: {\n        handler(request, reply) {\n            let payload = request.payload;\n            let phno = request.params.phno;\n            var notFound = [];\n            for (let i = phonebook.list.length - 1; i >= 0; i--) {\n                if (phonebook.list[i].phone_no == phno) {\n                    phonebook.list[i].name = payload.name;\n                    reply(phonebook.list);\n                    return;\n                } else {\n                    notFound.push(i);\n                }\n            }\n            if (notFound.length == phonebook.list.length) {\n                reply('not Found');\n                return;\n            }\n        }\n    }\n}, {\n    method: 'DELETE',\n    path: '/phone/{phno}',\n    config: {\n        handler(request, reply) {\n            let phno = request.params.phno;\n            var notFound = [];\n            for (let i = phonebook.list.length - 1; i >= 0; i--) {\n                if (phonebook.list[i].phone_no == phno) {\n                    phonebook.list.splice(i, 1);\n                    reply({\n                        message: \"Delete successfully\",\n                        data: phonebook.list\n                    });\n                    return;\n                } else {\n                    notFound.push(i);\n                }\n            }\n            if (notFound.length == phonebook.list.length) {\n                reply('not Found');\n                return;\n            }\n        }\n    }\n}];\n```"]