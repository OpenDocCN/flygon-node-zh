["```js\n$ node --version\nv8.1.2 $ npm --version\n5.5.1 $ npm install npm@latest -g\n```", "```js\n// library1.js\nfunction function1a() {\n  return \"hello from 1a\";\n}\nexports.function1a = function1a;\n```", "```js\n// app.js\nconst library1 = require('./library1'); // Require it\nconst function1a = library1.function1a; // Unpack it\nlet s = function1a(); // Use it\nconsole.log(s);\n```", "```js\n// library1.js\nexports.function1a = () => \"hello from 1a\";\nexports.function1b = () => \"hello from 1b\";\nexports.function1c = () => \"hello from 1c\";\n\n// app.js\nconst {function1a, function1b, function1c} = require('./library1'); // Require and unpack\nconsole.log(function1a());\nconsole.log(function1b());\nconsole.log(function1c());\n```", "```js\nmodule.exports.foo = 'bar';\n// vs...\nexports.foo = 'bar';\n```", "```js\n// https://github.com/nodejs/node/blob/master/lib/module.js#L92\nModule.wrap = function(script) {\n    return Module.wrapper[0] + script + Module.wrapper[1];\n};\n\nModule.wrapper = [\n    '(function (exports, require, module, __filename, __dirname) { ',\n    '\\n});'\n];\n```", "```js\n// https://github.com/nodejs/node/blob/master/lib/module.js#L625\nvar wrapper = Module.wrap(content);\n\nvar compiledWrapper = vm.runInThisContext(wrapper, {\n    filename: filename,\n    lineOffset: 0,\n    displayErrors: true\n});\n\n...\nresult = compiledWrapper.call(this.exports, this.exports, require, this, filename, dirname);\n```", "```js\n// https://github.com/nodejs/node/blob/master/lib/module.js#L70\nfunction Module(id, parent) {\n    this.id = id;\n    this.exports = {};\n    this.parent = parent;\n    updateChildren(parent, this, false);\n    this.filename = null;\n    this.loaded = false;\n    this.children = [];\n}\n```", "```js\n// https://github.com/nodejs/node/blob/master/lib/module.js#L500\nvar module = new Module(filename, parent);\n...\nModule._cache[filename] = module;\n...\nreturn module.exports;\n```", "```js\nvar module = { exports: {} };\nvar exports = module.exports;\n// ...your code, which can apply to either\n```", "```js\nfunction MyClass() {\n    this.foo = 'bar';\n}\n\n// require('thismodule').foo will be 'bar'\nmodule.exports = new MyClass();\n\n// require('thismodule').foo will be undefined\nexports = new MyClass();\n```", "```js\n// library1.js\nconsole.log(\"library 1 -\\\\\");\nconst {function2a, function2b, function2c} = require('./library2');\nconst {function3a, function3b, function3c} = require('./library3');\nexports.function1a = () => \"hello from 1a\";\nexports.function1b = () => \"hello from 1b\";\nexports.function1c = () => \"hello from 1c\";\nconsole.log(\"library 1 -/\");\n```", "```js\n// library2.js\nconsole.log(\"library 2 --\\\\\");\nconst {function1a, function1b, function1c} = require('./library1');\nconst {function3a, function3b, function3c} = require('./library3');\nexports.function2a = () => \"hello from 2a\";\nexports.function2b = () => \"hello from 2b\";\nexports.function2c = () => \"hello from 2c\";\nconsole.log(\"library 2 --/\");\n```", "```js\n// library3.js\nconsole.log(\"library 3 ---\\\\\");\nconst {function1a, function1b, function1c} = require('./library1');\nconst {function2a, function2b, function2c} = require('./library2');\nexports.function3a = () => \"hello from 3a\";\nexports.function3b = () => \"hello from 3b\";\nexports.function3c = () => \"hello from 3c\";\nconsole.log(\"library 3 ---/\");\n```", "```js\n$ node library1.js\nlibrary 1 -\\\nlibrary 2 --\\\nlibrary 3 ---\\\nlibrary 3 ---/\nlibrary 2 --/\nlibrary 1 -/\n\n$ node library2.js\nlibrary 2 --\\\nlibrary 1 -\\\nlibrary 3 ---\\\nlibrary 3 ---/\nlibrary 1 -/\nlibrary 2 --/\n\n$ node library3.js\nlibrary 3 ---\\\nlibrary 1 -\\\nlibrary 2 --\\\nlibrary 2 --/\nlibrary 1 -/\nlibrary 3 ---/\n```", "```js\n// app.js\nconst u = require('util');\nconst m = require('module');\nconsole.log(u.inspect(m._cache));\nconst library1 = require('./library1');\nconsole.log(\"and again, after bringing in library1:\")\nconsole.log(u.inspect(m._cache));\n\n{\n  'C:\\code\\example\\app.js': Module {\n    id: '.',\n    exports: {},\n    parent: null,\n    filename: 'C:\\\\code\\\\example\\\\app.js',\n    loaded: false,\n    children: [],\n    paths:\n    [ 'C:\\\\code\\\\example\\\\node_modules',\n      'C:\\\\code\\\\node_modules',\n      'C:\\\\node_modules' ]\n  }\n}\n\nand again, after bringing in library1:\n\n{ \n  'C:\\code\\example\\app.js': Module {\n    id: '.',\n    exports: {},\n    parent: null,\n    filename: 'C:\\\\code\\\\example\\\\app.js',\n    loaded: false,\n    children: [ [Object] ],\n    paths: [ \n      'C:\\\\code\\\\example\\\\node_modules',\n      'C:\\\\code\\\\node_modules',\n      'C:\\\\node_modules' \n    ] \n  },\n  'C:\\code\\example\\library1.js': Module {\n    id: 'C:\\\\code\\\\example\\\\library1.js',\n    exports: { \n      function1a: [Function],\n      function1b: [Function],\n      function1c: [Function] \n    },\n    parent: Module {\n      id: '.',\n      exports: {},\n      parent: null,\n      filename: 'C:\\\\code\\\\example\\\\app.js',\n      loaded: false,\n      children: [Array],\n      paths: [Array] \n    },\n    filename: 'C:\\\\code\\\\example\\\\library1.js',\n    loaded: true,\n    children: [],\n    paths: [ \n      'C:\\\\code\\\\example\\\\node_modules',\n      'C:\\\\code\\\\node_modules',\n      'C:\\\\node_modules' \n    ] \n  }\n}\n```", "```js\n// require(X) from module at path Y\nREQUIRE(X) \n  1\\. If X is a core module,\n    a. return the core module\n    b. STOP\n  2\\. If X begins with '/'\n    a. set Y to be the filesystem root\n  3\\. If X begins with './' or '/' or '../'\n    a. LOAD_AS_FILE(Y + X)\n    b. LOAD_AS_DIRECTORY(Y + X)\n  4\\. LOAD_NODE_MODULES(X, dirname(Y))\n  5\\. THROW \"not found\"\nLOAD_AS_FILE(X)\n  1\\. If X is a file, load X as JavaScript text. STOP\n  2\\. If X.js is a file, load X.js as JavaScript text. STOP\n  3\\. If X.json is a file, parse X.json to a JavaScript Object. STOP\n  4\\. If X.node is a file, load X.node as binary addon. STOP\nLOAD_INDEX(X)\n  1\\. If X/index.js is a file, load X/index.js as JavaScript text. STOP\n  2\\. If X/index.json is a file, parse X/index.json to a JavaScript Object. STOP\n  3\\. If X/index.node is a file, load X/index.node as a binary addon. STOP\nLOAD_AS_DIRECTORY(X)\n  1\\. If X/package.json is a file,\n    a. Parse X/package.json, and look for \"main\" field.\n    b. let M = X + (\"main\" field)\n    c. LOAD_AS_FILE(M)\n    d. LOAD_INDEX(M)\n  2\\. LOAD_INDEX(X)\nLOAD_NODE_MODULES(X, START)\n  1\\. let DIRS=NODE_MODULES_PATHS(START)\n  2\\. for each DIR in DIRS:\n    a. LOAD_AS_FILE(DIR/X)\n    b. LOAD_AS_DIRECTORY(DIR/X)\nNODE_MODULES_PATHS(START)\n  1\\. let PARTS = path split(START)\n  2\\. let I = count of PARTS - 1\n  3\\. let DIRS = []\n  4\\. while I >= 0,\n    a. if PARTS[I] = \"node_modules\" CONTINUE\n    b. DIR = path join(PARTS[0 .. I] + \"node_modules\")\n    c. DIRS = DIRS + DIR\n    d. let I = I - 1\n  5\\. return DIRS\n```", "```js\n/user/home/sandro/node_modules/library.js\n/user/home/node_modules/library.js\n/user/node_modules/library.js\n/node_modules/library.js\n```", "```js\n\"dev\": \"NODE_ENV=development node --inspect --expose-gc index.js\"\n```", "```js\n\"scripts\" : {\n  \"build:browserify\" : \"browserify -t [babelify --presets [react]] src/js/index.js -o build/app.js\"\n}\n```", "```js\n\"build:minify\": \"mkdir -p dist/js uglify src/js/**/*.js > dist/js/script.min.js\"\n```", "```js\n\"build\": \"npm run build:minify && npm run build:browserify\"\n```", "```js\n\"dependencies\" : {\n  \"express\" : \"3.3.5\"\n}\n```", "```js\n\"foo\" : \"http://foo.com/foo.tar.gz\"\n```", "```js\n\"herder\": \"git://github.com/sandro-pasquali/herder.git#master\"\n```", "```js\n\"herder\": \"sandro-pasquali/herder\"\n```", "```js\n\"dependencies\": {\n  \"a-private-repo\":\n    \"git+ssh://git@github.com:user/repo.git#master\"\n}\n```", "```js\n$ npm install -g module\n```", "```js\n\"name\": \"aModule\",\n  \"bin\" : {\n    \"aModule\" : \"./path/to/program\"\n}\n```", "```js\n\"name\": \"aModule\",\n  \"bin\" : \"./path/to/program\"\n```", "```js\n\"repository\" : {\n  \"type\" : \"git\",\n  \"url\" : \"http://github.com/sandro-pasquali/herder.git\"\n}\n\"repository\" : {\n  \"type\" : \"svn\",\n  \"url\" : \"http://v8.googlecode.com/svn/trunk/\"\n}\n```", "```js\n\"bugs\": {\n  \"url\": \"https://github.com/sandro-pasquali/herder/issues\"\n}\n```", "```js\n{\n  \"name\": \"app1\",\n  \"version\": \"1.0.0\",\n  \"lockfileVersion\": 1,\n  \"dependencies\": {\n    \"align-text\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/align-text/-/align-text-0.1.4.tgz\",\n      \"integrity\": \"sha1-DNkKVhCT810KmSVsIrcGlDP60Rc=\",\n      \"dev\": true\n    },\n    \"babel-core\": {\n      \"version\": \"6.25.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-core/-/babel-core-6.25.0.tgz\",\n      \"integrity\": \"sha1-fdQrBGPHQunVKW3rPsZ6kyLa1yk=\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"source-map\": {\n          \"version\": \"0.5.6\",\n          \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.5.6.tgz\",\n          \"integrity\": \"sha1-dc449SvwczxafwwRjYEzSiu19BI=\",\n          \"dev\": true\n        }\n      }\n    }\n  }\n}\n```", "```js\n$ npm shrinkwrap\n```"]