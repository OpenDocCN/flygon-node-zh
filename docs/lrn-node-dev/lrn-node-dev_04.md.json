["```js\nvar removeNote = (title) => {\n  // fetch notes\n  // filter notes, removing the one with title of argument\n  // save new notes array\n};\n```", "```js\nvar removeNote = (title) => {\n  var notes = fetchNotes();\n  // filter notes, removing the one with title of argument\n  // save new notes array\n};\n```", "```js\nvar removeNote = (title) => {\n  var notes = fetchNotes();\n  // filter notes, removing the one with title of argument\n  var filteredNotes = notes.filter();\n  // save new notes array\n};\n```", "```js\nvar removeNote = (title) => {\n  var notes = fetchNotes();\n  var filteredNotes = notes.filter((note) => note.title !== title);\n  // save new notes array\n};\n```", "```js\nvar removeNote = (title) => {\n  var notes = fetchNotes();\n  var filteredNotes = notes.filter((note) => note.title !== title);\n  saveNotes(filteredNotes);\n  // save new notes array\n};\n```", "```js\nnode app.js remove --title=secret2\n```", "```js\nvar removeNote = (title) => {\n  var notes = fetchNotes();\n  var filteredNotes = notes.filter((note) => note.title !== title);\n  saveNotes(filteredNotes);\n\n return notes.length !== filteredNotes.length;\n};\n```", "```js\n} else if (command == 'remove') {\n  var noteRemoved = notes.removeNote(argv.title);\n}\n```", "```js\n var message = noteRemoved ? 'Note was removed' :\n```", "```js\nvar message = noteRemoved ? 'Note was removed' : 'Note not found';\n```", "```js\nvar noteRemoved = notes.removeNote(argv.title);\nvar message = noteRemoved ? 'Note was removed' : 'Note not found';\nconsole.log(message);\n```", "```js\n} else if (command === 'read') {\n  notes.getNote(argv.title);\n```", "```js\nvar getNote = (title) => {\n  console.log('Getting note', title);\n};\n```", "```js\nif (command === 'add') {\n  var note = notes.addNote(argv.title, argv.body);\n  if (note) {\n    console.log('Note created');\n    console.log('--');\n    console.log(`Title: ${note.title}`);\n    console.log(`Body: ${note.body}`);\n  } else {\n    console.log('Note title taken');\n  }\n```", "```js\n} else if (command === 'read') {\n  var note = notes.getNote(argv.title);\n```", "```js\n} else if (command === 'read') {\n  var note = notes.getNote(argv.title);\n  if (note) {\n\n  } else {\n\n  }\n```", "```js\n  if (note) {\n\n  } else {\n    console.log('Note not found');  \n  }\n```", "```js\nif (note) {\n    console.log('Note found');\n    console.log('--');\n    console.log(`Title: ${note.title}`);\n    console.log(`Body: ${note.body}`);    \n  } else {\n    console.log('Note not found');  \n  }\n```", "```js\nvar getNote = (title) => {\n  var notes = fetchNotes();\n};\n```", "```js\nvar filteredNotes = notes.filter(() => {\n\n});\n```", "```js\nvar filteredNotes = notes.filter(() => {\n    return note.title === title;\n  });\n};\n```", "```js\nvar filteredNotes = notes.filter((note) => note.title === title);\n```", "```js\nvar getNote = (title) => {\n  var notes = fetchNotes();\n  var filteredNotes = notes.filter((note) => note.title === title);\n  return filteredNotes[0];\n};\n```", "```js\nnode app.js read --title=\"something here\"\n```", "```js\nif (command === 'add') {\n  var note = notes.addNote(argv.title, argv.body);\n  if (note) {\n    console.log('Note created');\n    console.log('--');\n    console.log(`Title: ${note.title}`);\n    console.log(`Body: ${note.body}`);\n  } else {\n    console.log('Note title taken');\n  }\n } else if (command === 'list') {\n   notes.getAll();\n } else if (command === 'read') {\n   var note = notes.getNote(argv.title);\n   if (note) {\n     console.log('Note found');\n     console.log('--');\n     console.log(`Title: ${note.title}`);\n     console.log(`Body: ${note.body}`);\n   } else {\n     console.log('Note not found');\n }\n```", "```js\nvar logNote = (note) => {\n\n};\n```", "```js\nvar logNote = (note) => {\n  console.log('--');\n  console.log(`Title: ${note.title}`);\n  console.log(`Body: ${note.body}`);\n};\n```", "```js\nelse if (command === 'read') {\n  var note = notes.getNote(argv.title);\n  if (note) {\n    console.log('Note found');\n    notes.logNote(note);\n  } else {\n    console.log('Note not found');\n }\n```", "```js\nif (command === 'add') {\n  var note = notes.addNote(argv.title, argv.body);\n  if (note) {\n    console.log('Note created');\n    notes.logNote(note);\n } else {\n   console.log('Note title taken');\n }\n```", "```js\nmodule.exports = {\n  addNote,\n  getAll,\n  getNote,\n  removeNote,\n  logNote\n};\n```", "```js\nnode app.js read --title=\"to buy\"\n```", "```js\nnode app.js add --title=\"things to do\" --body=\"go to post office\"\n```", "```js\nvar person = {\n  name: 'Andrew'\n};\n```", "```js\nvar person = {\n  name: 'Andrew'\n};\n\nperson.age = 25;\n```", "```js\nvar person = {\n  name: 'Andrew'\n};\n\nperson.age = 25;\n\nperson.name = 'Mike';\n```", "```js\nvar person = {\n  name: 'Andrew'\n};\n\nperson.age = 25;\n\nperson.name = 'Mike';\n\nconsole.log(person);\n```", "```js\nnode playground/debugging.js\n```", "```js\nnode inspect playground/debugging.js\n```", "```js\nvar person = {\n  name: 'Andrew'\n};\n\nperson.age = 25;\n\ndebugger;\n\nperson.name = 'Mike';\n\nconsole.log(person);\n```", "```js\nvar logNote = (note) => {\n  debugger;\n  console.log('--');\n  console.log(`Title: ${note.title}`);\n  console.log(`Body: ${note.body}`);\n};\n```", "```js\nnode debug app.js read --title=\"to buy\"\n```", "```js\nvar getAll = () => {\n  return fetchNotes();\n}\n```", "```js\nelse if (command === 'list') {\n  var allNotes = notes.getAll();\n}\n```", "```js\nelse if (command === 'list') {\n  var allNotes = notes.getAll();\n  console.log(`Printing ${allNotes.length} note(s).`);\n}\n```", "```js\nelse if (command === 'list') {\n  var allNotes = notes.getAll();\n  console.log(`Printing ${allNotes.length} note(s).`);\n  allNotes.forEach((note) => {\n    notes.logNote(note);\n  });\n}\n```", "```js\nelse if (command === 'list') {\n  var allNotes = notes.getAll();\n  console.log(`Printing ${allNotes.length} note(s).`);\n  allNotes.forEach((note) => notes.logNote(note));\n}\n```", "```js\nnode app.js list\n```", "```js\nconst argv = yargs\n  .command()\n  .argv;\n```", "```js\nconst argv = yargs\n  .command('add')\n  .argv;\n```", "```js\nconst argv = yargs\n  .command('add', 'Add a new note')\n  .argv;\n```", "```js\nconst argv = yargs\n  .command('add', 'Add a new note', {\n\n  })\n  .help()\n  .argv;\n```", "```js\nnode app.js --help\n```", "```js\nnode app.js add --help\n```", "```js\nconst argv = yargs\n  .command('add', 'Add a new note', {\n    title: {\n\n    }\n  })\n  .help()\n  .argv;\n```", "```js\nconst argv = yargs\n  .command('add', 'Add a new note', {\n    title: {\n      describe: 'Title of note'\n    }\n  })\n  .help()\n  .argv;\n```", "```js\nconst argv = yargs\n  .command('add', 'Add a new note', {\n    title: {\n      describe: 'Title of note',\n      demand: true\n    }\n  })\n  .help()\n  .argv;\n```", "```js\nconst argv = yargs\n  .command('add', 'Add a new note', {\n    title: {\n      describe: 'Title of note',\n      demand: true,\n      alias: 't'\n    }\n  })\n  .help()\n  .argv;\n```", "```js\nnode app.js add -t=\"flag title\" --body=\"body\"\n```", "```js\nconst argv = yargs\n  .command('add', 'Add a new note', {\n    title: {\n      describe: 'Title of note',\n      demand: true,\n      alias: 't'\n    },\n    body: {\n\n }\n  })\n  .help()\n  .argv;\n```", "```js\nconst argv = yargs\n  .command('add', 'Add a new note', {\n    title: {\n      describe: 'Title of note',\n      demand: true,\n      alias: 't'\n    },\n    body: {\n      describe: 'Body of note'\n    }\n  })\n  .help()\n  .argv;\n```", "```js\nconst argv = yargs\n  .command('add', 'Add a new note', {\n    title: {\n      describe: 'Title of note',\n      demand: true,\n      alias: 't'\n    },\n    body: {\n      describe: 'Body of note'\n      demand: true\n    }\n  })\n  .help()\n  .argv;\n```", "```js\nconst argv = yargs\n  .command('add', 'Add a new note', {\n    title: {\n      describe: 'Title of note',\n      demand: true,\n      alias: 't'\n    },\n    body: {\n      describe: 'Body of note'\n      demand: true,\n      alias: 'b'\n    }\n  })\n  .help()\n  .argv;\n```", "```js\nnode app.js add --help\n```", "```js\nnode app.js add -t=t -b=b\n```", "```js\n.command('list', 'List all notes')\n.help()\n.argv;\n```", "```js\n.command('list', 'List all notes')\n.command('read', 'Read a note')\n.help()\n.argv;\n```", "```js\n.command('list', 'List all notes')\n.command('read', 'Read a note', {\n  title: {\n    describe: 'Title of note',\n    demand: true,\n    alias: 't'\n  }\n})\n.help()\n.argv;\n```", "```js\n.command('remove', 'Remove a note', {\n\n})\n```", "```js\n.command('remove', 'Remove a note', {\n  title: titleOptions\n})\n```", "```js\n.command('add', 'Add a new note', {\n  title: titleOptions,\n  body: {\n    describe: 'Body of note',\n    demand: true,\n    alias: 'b'\n  }\n})\n.command('list', 'List all notes')\n.command('read', 'Read a note', {\n  title: titleOptions\n})\n.command('remove', 'Remove a note', {\ntitle: titleOptions\n})\n```", "```js\nconst titleOptions = {\n  describe: 'Title of note',\n  demand: true,\n  alias: 't'\n};\n```", "```js\nconst bodyOptions = {\n  describe: 'Body of note',\n  demand: true,\n  alias: 'b'\n};\n```", "```js\nnode app.js list\n```", "```js\nnode app.js remove -t=\"t\"\n```", "```js\nnodemon playground/arrow-function.js\n```", "```js\nvar square = (x) => {\n\n};\n```", "```js\nvar square = (x) => {\n  var result = x * x;\n  return result;\n};\n```", "```js\nvar square = (x) => {\n  var result = x * x;\n  return result;\n};\nconsole.log(square(9));\n```", "```js\nvar square = (x) => x * x;\nconsole.log(square(9));\n```", "```js\nvar user = {\n  name: 'Andrew'\n};\n```", "```js\nvar user = {\n  name: 'Andrew',\n  sayHi: () => {\n\n  }\n};\n```", "```js\nvar user = {\n  name: 'Andrew',\n  sayHi: () => {\n    console.log(`Hi`);\n  }\n};\n```", "```js\nvar user = {\n  name: 'Andrew',\n  sayHi: () => {\n    console.log(`Hi`);\n  }\n};\nuser.sayHi();\n```", "```js\nvar user = {\n  name: 'Andrew',\n  sayHi: () => {\n    console.log(`Hi. I'm ${this.name}`);\n  }\n};\nuser.sayHi();\n```", "```js\nvar user = {\n  name: 'Andrew',\n  sayHi: () => {\n    console.log(`Hi. I'm ${this.name}`);\n  },\n  sayHiAlt() {\n\n  }\n};\nuser.sayHi();\n```", "```js\nvar user = {\n  name: 'Andrew',\n  sayHi: () => {\n    console.log(`Hi. I'm ${this.name}`);\n  },\n  sayHiAlt() {\n    console.log(`Hi. I'm ${this.name}`);\n  }\n};\nuser.sayHiAlt();\n```", "```js\nvar user = {\n  name: 'Andrew',\n  sayHi: () => {\n    console.log(`Hi. I'm ${this.name}`);\n  },\n  sayHiAlt() {\n    console.log(arguments);\n    console.log(`Hi. I'm ${this.name}`);\n  }\n};\nuser.sayHiAlt();\n```", "```js\nvar user = {\n  name: 'Andrew',\n  sayHi: () => {\n    console.log(`Hi. I'm ${this.name}`);\n  },\n  sayHiAlt() {\n    console.log(arguments);\n    console.log(`Hi. I'm ${this.name}`);\n  }\n};\nuser.sayHiAlt(1, 2, 3);\n```", "```js\nvar user = {\n  name: 'Andrew',\n  sayHi: () => {\n    console.log(arguments);\n    console.log(`Hi. I'm ${this.name}`);\n  },\n  sayHiAlt() {\n    console.log(arguments);\n    console.log(`Hi. I'm ${this.name}`);\n  }\n};\nuser.sayHi(1, 2, 3);\n```"]