["```js\nnpm install yargs@11.0.0 --save\n```", "```js\nconsole.log('Starting app.js');\n\nconst fs = require('fs');\nconst _ = require('lodash');\nconst yargs = require('yargs');\n\nconst notes = require('./notes.js');\n\nvar command = process.argv[2];\nconsole.log('Command:', command);\nconsole.log(process.argv);\n\nif (command === 'add') {\n  console.log('Adding new note');\n} else if (command === 'list') {\n  console.log('Listing all notes');\n} else if (command === 'read') {\n  console.log('Reading note');\n} else if (command === 'remove') {\n  console.log('Removing note');\n} else {\n  console.log('Command not recognized');\n}\n```", "```js\nconsole.log('Starting app.js');\n\nconst fs = require('fs');\nconst _ = require('lodash');\nconst yargs = require('yargs');\n\nconst notes = require('./notes.js');\n\nconst argv = yargs.argv;\nvar command = process.argv[2];\nconsole.log('Command:', command);\nconsole.log(process.argv);\n\nif (command === 'add') {\n  console.log('Adding new note');\n} else if (command === 'list') {\n  console.log('Listing all notes');\n} else if (command === 'read') {\n  console.log('Reading note');\n} else if (command === 'remove') {\n  console.log('Removing note');\n} else {\n  console.log('Command not recognized');\n}\n```", "```js\nconsole.log('Starting app.js');\n\nconst fs = require('fs');\nconst _ = require('lodash');\nconst yargs = require('yargs');\n\nconst notes = require('./notes.js');\n\nconst argv = yargs.argv;\nvar command = process.argv[2];\nconsole.log('Command:', command);\nconsole.log('Process', process.argv);\nconsole.log('Yargs', argv);\n\nif (command === 'add') {\n  console.log('Adding new note');\n} else if (command === 'list') {\n  console.log('Listing all notes');\n} else if (command === 'read') {\n  console.log('Reading note');\n} else if (command === 'remove') {\n  console.log('Removing note');\n} else {\n  console.log('Command not recognized');\n}\n```", "```js\nnode app.js add\n```", "```js\nnode app.js add encrypted\n```", "```js\nnode app.js add --title=secrets\n```", "```js\nnode app.js add --title \"secrets from Andrew\"\n```", "```js\nconsole.log('Starting app.js');\n\nconst fs = require('fs');\nconst _ = require('lodash');\nconst yargs = require('yargs');\n\nconst notes = require('./notes.js');\n\nconst argv = yargs.argv;\nvar command = process.argv[2];\nconsole.log('Command:', command);\nconsole.log('Process', process.argv);\nconsole.log('Yargs', argv);\n\nif (command === 'add') {\n  console.log('Adding new note');\n  notes.addNote(argv.title, argv.body);\n} else if (command === 'list') {\n  console.log('Listing all notes');\n} else if (command === 'read') {\n  console.log('Reading note');\n} else if (command === 'remove') {\n  console.log('Removing note');\n} else {\n  console.log('Command not recognized');\n}\n```", "```js\nvar addNote = () => {\n\n};\n```", "```js\nmodule.exports = {\n  addNote: addNote\n};\n```", "```js\nvar addNote = (title, body) => {\n  console.log('Adding note', title, body);\n};\n```", "```js\nnode app.js add --title=secret --body=\"This is my secret\"\n```", "```js\nconsole.log('Starting app.js');\n\nconst fs = require('fs');\nconst _ = require('lodash');\nconst yargs = require('yargs');\n\nconst notes = require('./notes.js');\n\nconst argv = yargs.argv;\nvar command = process.argv[2];\nconsole.log('Command:', command);\nconsole.log('Process', process.argv);\nconsole.log('Yargs', argv);\n\nif (command === 'add') {\n  notes.addNote(argv.title, argv.body);\n} else if (command === 'list') {\n  notes.getAll();\n} else if (command === 'read') {\n  console.log('Reading note');\n} else if (command === 'remove') {\n  console.log('Removing note');\n} else {\n  console.log('Command not recognized');\n}\n```", "```js\nvar getAll = () => {\n  console.log('Getting all notes');\n};\n```", "```js\nmodule.exports = {\n  addNote,\n  getAll\n};\n```", "```js\nnode app.js list\n```", "```js\nconsole.log('Starting app.js');\n\nconst fs = require('fs');\nconst _ = require('lodash');\nconst yargs = require('yargs');\n\nconst notes = require('./notes.js');\n\nconst argv = yargs.argv;\nvar command = process.argv[2];\nconsole.log('Command:', command);\nconsole.log('Yargs', argv);\n\nif (command === 'add') {\n  notes.addNote(argv.title, argv.body);\n} else if (command === 'list') {\n  notes.getAll();\n} else if (command === 'read') {\n  console.log('Reading note');\n} else if (command === 'remove') {\n  console.log('Removing note');\n} else {\n  console.log('Command not recognized');\n}\n```", "```js\nconsole.log('Starting app.js');\n\nconst fs = require('fs');\nconst _ = require('lodash');\nconst yargs = require('yargs');\n\nconst notes = require('./notes.js');\n\nconst argv = yargs.argv;\nvar command = process.argv[2];\nconsole.log('Command:', command);\nconsole.log('Yargs', argv);\n\nif (command === 'add') {\n  notes.addNote(argv.title, argv.body);\n} else if (command === 'list') {\n  notes.getAll();\n} else if (command === 'read') {\n  notes.getNote(argv.title);\n} else if (command === 'remove') {\n  console.log('Removing note');\n} else {\n  console.log('Command not recognized');\n}\n```", "```js\nvar getNote = (title) => {\n\n};\n```", "```js\nvar getNote = (title) => {\n  console.log('Getting note', title);\n};\n```", "```js\nnode app.js read --title accounts\n```", "```js\nmodule.exports = {\n  addNote,\n  getAll,\n  getNote\n};\n```", "```js\nconsole.log('Starting app.js');\n\nconst fs = require('fs');\nconst _ = require('lodash');\nconst yargs = require('yargs');\n\nconst notes = require('./notes.js');\n\nconst argv = yargs.argv;\nvar command = process.argv[2];\nconsole.log('Command:', command);\nconsole.log('Yargs', argv);\n\nif (command === 'add') {\n  notes.addNote(argv.title, argv.body);\n} else if (command === 'list') {\n  notes.getAll();\n} else if (command === 'read') {\n  notes.getNote(argv.title);\n} else if (command === 'remove') {\n  notes.removeNote(argv.title);\n} else {\n  console.log('Command not recognized');\n}\n```", "```js\nvar removeNote = (title) => { \n console.log('Removing note', title);\n};\n```", "```js\nmodule.exports = {\n  addNote,\n  getAll,\n  getNote,\n  removeNote\n};\n```", "```js\nnode app.js remove --title accounts\n```", "```js\nconsole.log('Starting app.js');\n\nconst fs = require('fs');\nconst _ = require('lodash');\nconst yargs = require('yargs');\n\nconst notes = require('./notes.js');\n\nconst argv = yargs.argv;\nvar command = argv._[0];\nconsole.log('Command:', command);\nconsole.log('Yargs', argv);\n\nif (command === 'add') {\n  notes.addNote(argv.title, argv.body);\n} else if (command === 'list') {\n  notes.getAll();\n} else if (command === 'read') {\n  notes.getNote(argv.title);\n} else if (command === 'remove') {\n  notes.removeNote(argv.title);\n} else {\n  console.log('Command not recognized');\n}\n```", "```js\nvar obj = {\n  name: 'Andrew'\n};\n```", "```js\nvar stringObj = JSON.stringify(obj);\n```", "```js\nconsole.log(typeof stringObj);\nconsole.log(stringObj);\n```", "```js\ncd playground\n```", "```js\nvar personString = '';\n```", "```js\nvar personString = '{\"name\": \"Andrew\"}';\n```", "```js\nvar personString = '{\"name\": \"Andrew\",\"age\": 25}';\n```", "```js\nvar person = JSON.parse(personString);\n```", "```js\nconsole.log(typeof person);\nconsole.log(person);\n```", "```js\nnodemon json.js \n```", "```js\n// var obj = {\n//  name: 'Andrew'\n// };\n// var stringObj = JSON.stringify(obj);\n// console.log(typeof stringObj);\n// console.log(stringObj);\n\nvar personString = '{\"name\": \"Andrew\",\"age\": 25}';\nvar person = JSON.parse{personString};\nconsole.log(typeof person);\nconsole.log(person);\n```", "```js\n// var obj = {\n//  name: 'Andrew'\n// };\n// var stringObj = JSON.stringify(obj);\n// console.log(typeof stringObj);\n// console.log(stringObj);\n\n// var personString = '{\"name\": \"Andrew\",\"age\": 25}';\n// var person = JSON.parse(personString);\n// console.log(typeof person);\n// console.log(person);\n\nconst fs = require('fs');\n```", "```js\nvar originalNote = {\n  title: 'Some title',\n  body: 'Some body'\n};\n```", "```js\n// originalNoteString\nfs.writeFileSync('notes.json', originalNoteString);\n```", "```js\nvar noteString = fs.readFileSync('notes.json');\n```", "```js\n// note\nconsole.log(typeof note);\nconsole.log(note.title);\n```", "```js\nvar originalNoteString = JSON.stringify(originalNote);\n```", "```js\nvar note = JSON.parse(noteString);\n```", "```js\nvar originalNote = {\n  title: 'Some title',\n  body: 'Some body'\n};\nvar originalNoteString = JSON.stringify(originalNote);\nfs.writeFileSync('notes.json', originalNoteString);\n```", "```js\nvar noteString = fs.readFileSync('notes.json');\nvar note = JSON.parse(noteString);\nconsole.log(typeof note);\nconsole.log(note.title);\n```", "```js\nvar addNote = (title, body) => {\n  var notes = [];\n};\n```", "```js\nvar addNote = (title, body) => {\n  var notes = [];\n  var note = {\n\n  }\n};\n```", "```js\nvar addNote = (title, body) => {\n  var notes = [];\n  var note = {\n    title,\n    body\n  };\n};\n```", "```js\nvar addNote = (title, body) => {\n  var notes = [];\n  var note = {\n    title,\n    body\n  };\n\n  notes.push(note);\n};\n```", "```js\nconst fs = require('fs');\n```", "```js\nnotes.push(note);\nfs.writeFileSync('notes-data.json', JSON.stringify(notes));\n```", "```js\nnode app.js add --title=secret --body=\"Some body here\"\n```", "```js\nvar notesString = fs.readFileSync('notes-data.json');\n```", "```js\nnotes = JSON.parse(notesString);\n```", "```js\nnode app.js add --title=secret2 --body=\"Some body here\"\n```", "```js\ntry{\n\n} catch (e) {\n\n}\n```", "```js\ntry{\n  var notesString = fs.readFileSync('notes-data.json');\n  notes = JSON.parse(notesString);\n} catch (e) {\n\n}\n```", "```js\nnotes.push(note);\nfs.writeFileSync('notes-data.json', JSON.stringify(notes));\n```", "```js\nvar duplicateNotes = notes.filter();\n```", "```js\nvar duplicateNotes = notes.filter((note) => {\n\n});\n```", "```js\nvar duplicateNotes = notes.filter((note) => {\n  return note.title === title;\n});\n```", "```js\nvar duplicateNotes = notes.filter((note) => note.title === title);\n```", "```js\nif(duplicateNotes.length === 0) {\n\n}\n```", "```js\nnotes.push(note);\nfs.writeFileSync('notes-data.json', JSON.stringify(notes));\n```", "```js\nif(duplicateNotes.length === 0) {\n  notes.push(note);\n  fs.writeFileSync('notes-data.json', JSON.stringify(notes));\n}\n```", "```js\nnode app.js add --title=secret2 --body=\"Some body here\"\n```", "```js\nnode app.js add --title=secret --body=\"Some body here\"\n```", "```js\nvar fetchNotes = () => {\n\n};\n```", "```js\nvar saveNotes = (notes) => {\n\n};\n```", "```js\nvar fetchNotes = () => {\n  try{\n    var notesString = fs.readFileSync('notes-data.json');\n    notes = JSON.parse(notesString);\n  } catch (e) {\n\n}\n};\n```", "```js\nvar fetchNotes = () => {\n  try{\n    var notesString = fs.readFileSync('notes-data.json');\n    return JSON.parse(notesString);\n  } catch (e) {\n\n}\n};\n```", "```js\nvar fetchNotes = () => {\n  try{\n    var notesString = fs.readFileSync('notes-data.json');\n    return JSON.parse(notesString);\n  } catch (e) {\n    return [];\n}\n};\n```", "```js\nvar addNote = (title, body) => {\n  var notes = fetchNotes();\n  var note = {\n      title,\n      body\n};\n```", "```js\nvar saveNotes = (notes) => {\n  fs.writeFileSync('notes-data.json', JSON.stringify(notes));\n};\n```", "```js\nif (duplicateNotes.length === 0) {\n  notes.push(note);\n  saveNotes();\n}\n```", "```js\nif (duplicateNotes.length === 0) {\n  notes.push(note);\n  saveNotes(notes);\n}\n```", "```js\nnode app.js add --title=\"to buy\" --body=\"food\"\n```", "```js\nif (duplicateNotes.length === 0) {\n  notes.push(note);\n  saveNotes(notes);\n  return note;\n}\n```", "```js\nif (command === 'add')\n  var note = notes.addNote(argv.title, argv.body);\n```", "```js\nif (command === 'add') {\n  var note = notes.addNote(argv.title, argv.body);\n  if (note) {\n\n  }\n```", "```js\nif (note) {\n  console.log('Note created');\n}\n```", "```js\nif (note) {\n  console.log('Note created');\n} else {\n  console.log('Note title taken');\n}\n```", "```js\nif (note) {\n  console.log('Note created');\n  console.log('--');\n  console.log('Title: ' + note.title);\n```", "```js\nconsole.log(`Title: ${note.title}`);\n```", "```js\nif (command === 'add') {\n  var note = note.addNote(argv.title, argv.body);\n  if (note) {\n    console.log('Note created');\n    console.log('--');\n    console.log(`Title: ${note.title}`);\n    console.log(`Body: ${note.body}`);\n  } else {\n    console.log('Note title taken');\n}\n```", "```js\nnode app.js add --title=\"to buy from store\" --body=\"food\"\n```"]