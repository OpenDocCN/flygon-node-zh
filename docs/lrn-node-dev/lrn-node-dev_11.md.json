["```js\nnpm i express@4.16.2 --save\n```", "```js\n  \"devDependencies\": {\n    \"expect\": \"^1.20.2\",\n    \"mocha\": \"^3.0.0\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.14.0\"\n  }\n}\n```", "```js\nconst express = require('express');\n```", "```js\nconst express = require('express');\n\nvar app = express();\n```", "```js\nconst express = require('express');\n\nvar app = express();\n\napp.get\n```", "```js\napp.get('/', (req, res) => {\n  res.send('Hello world!');\n});\n```", "```js\napp.get('/', (req, res) => {\n  res.send('Hello world!');\n});\n\napp.listen(3000);\n```", "```js\nnode server/server.js\n```", "```js\nnpm i supertest@3.0.0 --save-dev\n```", "```js\nconst request = require('supertest');\n```", "```js\napp.listen(3000);\nmodule.exports.app = app;\n```", "```js\nconst request = require('supertest');\n\nvar app = require('./server').app;\n```", "```js\nvar app = require('./server').app;\n\nit('should return hello world response')\n```", "```js\nit('should return hello world response', (done) => {\n\n});\n```", "```js\nit('should return hello world response', (done) => {\n  request(app)\n});\n```", "```js\nit('should return hello world response', (done) => {\n  request(app)\n    .get('/')\n});\n```", "```js\nit('should return hello world response', (done) => {\n  request(app)\n    .get('/')\n    .expect('Hello world!')\n});\n```", "```js\nit('should return hello world response', (done) => {\n  request(app)\n    .get('/')\n    .expect('Hello world!')\n    .end(done);\n});\n```", "```js\nnpm run test-watch\n```", "```js\nit('should return hello world response', (done) => {\n  request(app)\n    .get('/')\n    .expect(200)\n    .expect('Hello world!')\n    .end(done);\n});\n```", "```js\napp.get('/', (req, res) => {\n  res.send('Hello wwworld!');\n});\n\napp.listen(3000);\nmodule.exports.app = app;\n```", "```js\napp.get('/', (req, res) => {\n  res.status().send('Hello world!');\n});\n```", "```js\napp.get('/', (req, res) => {\n  res.status(404).send('Hello world!');\n});\n```", "```js\napp.get('/', (req, res) => {\n  res.status(404).send({\n    error: 'Page not found.'\n  });\n});\n```", "```js\nit('should return hello world response', (done) => {\n  request(app)\n    .get('/')\n    .expect(200)\n    .expect({\n\n    })\n    .end(done);\n});\n```", "```js\n    .expect({\n      error: 'Page not found.'\n    })\n```", "```js\n    .expect(404)\n    .expect({\n    error: 'Page not found.'\n    })\n```", "```js\n    .expect((res) => {\n\n    })\n```", "```js\nconst express = require('supertest');\nconst express = require('express');\n```", "```js\napp.get('/', (req, res) => {\n  res.status(404).send({\n    error: 'Page not found.',\n    name: 'Todo App v1.0'\n  });\n});\n```", "```js\n    .expect((res) => {\n      expect(res.body).toInclude({\n\n      });\n    })\n```", "```js\n    .expect((res) => {\n      expect(res.body).toInclude({\n        error: 'Page not found.'\n      });\n    })\n```", "```js\napp.get('/', (req, res) => {\n  res.status(404).send({\n    error: 'Page not found.',\n    name: 'Todo App v1.0'\n  });\n});\n\n  // GET /users\n```", "```js\n  // GET /users\n  // Give users a name prop and age prop\n```", "```js\nit('should return hello world response', (done) => {\n  request(app)\n    .get('/')\n    .expect(404)\n    .expect((res) => {\n      expect(res.body).toInclude({\n        error: 'Page not found.'\n      });\n    })\n    .end(done);\n});\n\n// Make a new test\n```", "```js\n// Make a new test\n// assert 200\n// Assert that you exist in users array\n```", "```js\napp.get('/users')\n// GET /users\n// Give users a name prop and age prop\n```", "```js\napp.get('/users', (req, res) => {\n\n});\n// GET /users\n// Give users a name prop and age prop\n```", "```js\napp.get('/users', (req, res) => {\n  res.send([{\n\n    }])\n  }); \n```", "```js\napp.get('/users', (req, res) => {\n  res.send([{\n    name: 'Mike',\n    age: 27\n  }])  \n});\n```", "```js\napp.get('/users', (req, res) => {\n  res.send([{\n    name: 'Mike',\n    age: 27\n  }, {\n    name: 'Andrew',\n    age: 25\n  }])    \n});\n```", "```js\napp.get('/users', (req, res) => {\n  res.send([{\n    name: 'Mike',\n    age: 27\n  }, {\n    name: 'Andrew',\n    age: 25\n  }, {\n    name: 'Jen',\n    age: 26\n  }])    \n});\n```", "```js\n// Make a new test\n// assert 200\n// Assert that you exist in users array\nit('should return my user object')\n```", "```js\n// Make a new test\n// assert 200\n// Assert that you exist in users array\nit('should return my user object', (done) => {\n\n});\n```", "```js\nit('should return my user object', (done) => {\n  request(app)\n});\n```", "```js\nit('should return my user object', (done) => {\n  request(app)\n    .get('/users')\n});\n```", "```js\nit('should return my user object', (done) => {\n  request(app)\n    .get('/users')\n    .expect(200)\n});\n```", "```js\nit('should return my user object', (done) => {\n  request(app)\n    .get('/users')\n    .expect(200)\n    .expect((res) => {\n\n    })\n});\n```", "```js\nit('should return my user object', (done) => {\n  request(app)\n    .get('/users')\n    .expect(200)\n    .expect((res) => {\n      expect(res.body).toInclude()\n\n    })\n});\n```", "```js\n    expect(res.body).toInclude({\n      name: 'Andrew',\n      age: 25\n    })\n```", "```js\n    expect(res.body).toInclude({\n      name: 'Andrew',\n      age: 25\n    })\n  })\n  .end(done);\n```", "```js\napp.get('/users', (req, res) => {\n  res.send([{\n    name: 'Mike',\n    age: 27\n  }, {\n    name: 'Aandrew',\n    age: 25\n  }, {\n    name: 'Jen',\n    age: 26\n  }])    \n});\n```", "```js\nconst expect = require('expect');\n\nconst utils = require('./utils');\n\ndescribe()\n```", "```js\ndescribe('Utils', () => {\n\n});\n```", "```js\ndescribe('Utils', () => {\n  it('should add two numbers', () => {\n    var res = utils.add(33, 11);\n\n    expect(res).toBe(44).toBeA('number');\n  });\n\n  it('should async add two numbers', (done) => {\n    utils.asyncAdd(4, 3, (sum) => {\n      expect(sum).toBe(7).toBeA('number');\n      done();\n    });\n  });\n\n  it('should square a number', () => {\n    var res = utils.square(3);\n\n    expect(res).toBe(9).toBeA('number');\n  });\n\n  it('should async square a number', (done) => {\n    utils.asyncSquare(5, (res) => {\n      expect(res).toBe(25).toBeA('number');\n      done();\n    });\n  });\n});\n```", "```js\nnpm run test-watch\n```", "```js\ndescribe('Utils', () => {\n\n  describe('#add')\n```", "```js\ndescribe('Utils', () => {\n\n  describe('#add', () => {\n\n  })\n```", "```js\ndescribe('Utils', () => {\n\n  describe('#add', () => {\n    it('should add two numbers', () => {\n      var res = utils.add(33, 11);\n\n      expect(res).toBe(44).toBeA('number');\n    });\n  });\n```", "```js\nconst request = require('supertest');\nconst expect = require('expect');\n\nvar app = require('./server').app;\n\n// Server\n  // GET /\n    // some test case\n  // GET / user\n    // some test case\n```", "```js\n// Server\n  // GET /\n    // some test case\n  // GET / user\n    // some test case\n\n  describe('Server')\n```", "```js\ndescribe('Server', () => {\n\n})\n```", "```js\ndescribe('Server', () => {\n\n  describe('GET /', () => {\n\n  })\n\n})\n```", "```js\ndescribe('Server', () => {\n\n  describe('GET /', () => {\n    it('should return hello world response', (done) => {\n      request(app)\n        .get('/')\n        .expect(404)\n        .expect((res) => {\n          expect(res.body).toInclude({\n            error: 'Page not found.'\n          });\n        })\n        .end(done);\n    });\n  });\n\n})\n```", "```js\n  describe('GET /users')\n```", "```js\n  describe('GET /users'), () => {\n    it('should return my user object', (done) => {\n      request(app)\n        .get('/users')\n        .expect(200)\n        .expect((res) => {\n          expect(res.body).toInclude({\n            name: 'Andrew',\n            age: 25\n          });\n        })\n        .end(done);\n    });\n  });\n```", "```js\nmodule.exports.saveUser = (user) => {\n\n}\n```", "```js\nmodule.exports.saveUser = (user) => {\n  console.log('Saving the user', user);\n}\n```", "```js\nmodule.exports.handleSignup = (email, password) => {\n\n};\n```", "```js\nmodule.exports.handleSignup = (email, password) => {\n  // Check if email already exists\n  // Save the user to the database\n  // Send the welcome email\n};\n```", "```js\n  // Check if email already exists\n  db.saveUser()\n  // Send the welcome email\n```", "```js\ndb.saveUser({\n  email: email,\n  password: password\n});\n```", "```js\ndb.saveUser({\n  email,\n  password\n});\n```", "```js\nvar db = require('./db.js');\n```", "```js\nconst expect = require('expect');\n```", "```js\nconst expect = require('expect');\n\ndescribe('')\n```", "```js\ndescribe('App', () => {\n\n});\n```", "```js\ndescribe('App', () => {\n\n  it('')\n\n});\n```", "```js\ndescribe('App', () => {\n\n  it('should call the spy correctly', () => {\n  });\n\n});\n```", "```js\n  it('should call the spy correctly', () => {\n    expect.createSpy();\n  });\n```", "```js\n   it('should call the spy correctly', () => {\n    var spy = expect.createSpy();\n   });\n```", "```js\n  it('should call the spy correctly', () => {\n    var spy = expect.createSpy();\n    spy();\n   });\n```", "```js\n  it('should call the spy correctly', () => {\n    var spy = expect.createSpy();\n    spy();\n    expect(spy)\n  });\n```", "```js\n    expect(spy).toHaveBeenCalled();\n```", "```js\n  it('should call the spy correctly', () => {\n    var spy = expect.createSpy();\n    // spy();\n    expect(spy).toHaveBeenCalled();\n  });\n```", "```js\n  it('should call the spy correctly', () => {\n    var spy = expect.createSpy();\n    spy('Andrew', 25);\n    expect(spy).toHaveBeenCalled();\n  });\n```", "```js\n    expect(spy).toHaveBeenCalledWith('Andrew', 25);\n```", "```js\n  it('should call the spy correctly', () => {\n    var spy = expect.createSpy();\n    spy('Andrew');\n    expect(spy).toHaveBeenCalledWith('Andrew', 25);\n  });\n```", "```js\nnpm install rewire@3.0.2 --save-dev\n```", "```js\nconst expect = require('expect');\nconst rewire = require('rewire');\n```", "```js\nconst expect = require('expect');\nconst rewire = require('rewire');\n\nvar app = rewire('./app');\n```", "```js\ndescribe('App', () => {\n  var db = {\n\n  }\n```", "```js\ndescribe('App', () => {\n  var db = {\n    saveUser: expect.createSpy()\n  };\n```", "```js\ndescribe('App', () => {\n  var db = {\n    saveUser: expect.createSpy()\n  };\n  app.__set__();\n```", "```js\ndescribe('App', () => {\n  var db = {\n    saveUser: expect.createSpy()\n  };\n  app.__set__('db', db);\n```", "```js\ndescribe('App', () => {\n  var db = {\n    saveUser: expect.createSpy()\n  };\n  app.__set__('db', db);\n\n  it('should call the spy correctly', () => {\n    var spy = expect.createSpy();\n    spy('Andrew', 25);\n    expect(spy).toHaveBeenCalledWith('Andrew', 25);\n  });\n\n  it('should call saveUser with user object')\n```", "```js\n  it('should call saveUser with user object', () => {\n\n  });\n```", "```js\n  it('should call saveUser with user object', () => {\n    var email = 'andrew@example.com';\n    var password = '123abc';\n  });\n```", "```js\n  it('should call saveUser with user object', () => {\n    var email = 'andrew@example.com';\n    var password = '123abc';\n\n    app.handleSignup(email, password);\n  });\n```", "```js\n    app.handleSignup(email, password);\n    expect(db.saveUser)\n```", "```js\n    app.handleSignup(email, password);\n    expect(db.saveUser).toHaveBeenCalledWith({email, password});\n  });\n```"]