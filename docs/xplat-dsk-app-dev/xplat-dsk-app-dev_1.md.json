["```js\n./index.html\n<!DOCTYPE html>\n<html>\n <body>\n  <h1>File Explorer</h1>\n </body>\n</html>\n\n```", "```js\nsudo apt-get install npm\n\n```", "```js\nsudo npm install npm@latest -g\n\n```", "```js\nsudo npm install nw --global\n\n```", "```js\nsudo npm i nw -g\n\n```", "```js\nnpm init -y \n\n```", "```js\n{ \n  \"name\": \"file-explorer\", \n  \"version\": \"1.0.0\", \n  \"description\": \"\", \n  \"main\": \"main.js\", \n  \"scripts\": { \n   \"test\": \"echo \"Error: no test specified\" && exit 1\" \n  }, \n  \"keywords\": [], \n  \"author\": \"\", \n  \"license\": \"ISC\" \n} \n\n```", "```js\n{ \n  ... \n  \"main\": \"index.html\", \n  ... \n} \n\n```", "```js\nnpm run test\n\n```", "```js\n{ \n  ... \n  \"scripts\": { \n    \"start\": \"nw .\", \n    \"test\": \"echo \"Error: no test specified\" && exit 1\" \n  }, \n\n  ... \n} \n\n```", "```js\nnpm view nw dist-tags\n\n```", "```js\nnpm v nw dist-tags\n\n```", "```js\n{\n  latest: '0.20.3',\n  alphasdk: '0.13.0-alpha4sdk',\n  alpha5sdk: '0.13.0-alpha5sdk',\n  alpha6sdk: '0.13.0-alpha6sdk',\n  alpha7sdk: '0.13.0-alpha7sdk',\n  sdk: '0.20.3-sdk' \n}\n\n```", "```js\nnpm install nw@0.20.3-sdk --save-dev\n\n```", "```js\nnpm i nw@0.20.3-sdk -D\n\n```", "```js\nnpm i nw@sdk -D\n\n```", "```js\n{ \n  \"name\": \"file-explorer\", \n  \"version\": \"1.0.0\", \n  \"description\": \"\", \n  \"main\": \"index.html\", \n  \"scripts\": { \n    \"start\": \"nw .\", \n    \"test\": \"echo \"Error: no test specified\" && exit 1\" \n  }, \n  \"keywords\": [], \n  \"author\": \"\", \n  \"license\": \"ISC\", \n  \"devDependencies\": { \n \"nw\": \"^0.20.3-sdk\" \n } \n} \n\n```", "```js\nnpm update\n\n```", "```js\nnpm i\n\n```", "```js\n npm start \n\n```", "```js\n{ \n  ... \n  \"chromium-args\": \"--mixed-context\", \n  \"window\": { \n    \"show\": true, \n    \"frame\": true, \n    \"width\": 1000, \n    \"height\": 600, \n    \"min_width\": 800, \n    \"min_height\": 400, \n    \"position\": \"center\", \n    \"resizable\": true \n  } \n} \n\n```", "```js\n<!DOCTYPE html> \n<html> \n  <head> \n   <title>File Explorer</title> \n   <meta charset=\"UTF-8\"> \n   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> \n   <link href=\"./assets/css/app.css\" rel=\"stylesheet\" type=\"text/css\"> \n  </head> \n  <body class=\"l-app\"> \n   <header class=\"l-app__titlebar titlebar\"> \n   </header> \n   <div class=\"l-app__main l-main\"> \n   <aside class=\"l-main__dir-list dir-list\"> \n   </aside> \n   <main class=\"l-main__file-list file-list\"> \n   </main> \n   </div> \n   <footer class=\"l-app_footer footer\"> \n   </footer> \n  </body> \n</html> \n\n```", "```js\n<article class=\"post\"> \n   <h2 class=\"post__title\">Star Wars: The Last Jedi's red font is a \n    cause for concern/h2> \n   <time datetime=\"2017-01-23 06:00\" class=\"post__time\">Jan 23, 2017</time> \n</article> \n\n```", "```js\n<article class=\"post post--sponsored\"> \n.... \n</article> \n\n```", "```js\nhtml { \n  -webkit-font-smoothing: antialiased; \n} \n\n* { \n  box-sizing: border-box; \n} \n\nnav > ul { \n  list-style: none; \n  padding: 0; \n  margin: 0; \n} \n\nbody { \n  min-height: 100vh; \n  margin: 0; \n  font-family: Arial; \n} \n\n.is-hidden { \n  display: none !important; \n} \n\n```", "```js\n.l-app { \n  display: flex; \n  flex-flow: column nowrap; \n  align-items: stretch; \n} \n\n.l-app__titlebar { \n  flex: 0 0 40px; \n} \n\n.l-app__main { \n  flex: 1 1 auto; \n} \n\n.l-app__footer { \n  flex: 0 0 40px; \n} \n\n```", "```js\n.l-main { \n  display: flex; \n  flex-flow: row nowrap; \n  align-items: stretch; \n} \n\n.l-main__dir-list { \n  flex: 0 0 250px; \n} \n\n.l-main__file-list { \n  flex: 1 1 auto; \n} \n\n```", "```js\n.titlebar { \n  background-color: #2d2d2d; \n  color: #dcdcdc; \n  padding: 0.8em 0.6em; \n} \n\n```", "```js\n.footer { \n  border-top: 1px solid #2d2d2d; \n  background-color: #dedede; \n  padding: 0.4em 0.6em; \n} \n\n```", "```js\n.file-list { \n  background-color: #f9f9f9; \n  color:  #333341; \n} \n\n```", "```js\n.dir-list { \n  background-color: #dedede; \n  color: #ffffff; \n  border-right: 1px solid #2d2d2d; \n} \n\n```", "```js\n@import url(\"./Base/base.css\"); \n@import url(\"./Component/l-app.css\"); \n@import url(\"./Component/titlebar.css\"); \n@import url(\"./Component/footer.css\"); \n@import url(\"./Component/dir-list.css\"); \n@import url(\"./Component/file-list.css\"); \n\n```", "```js\nnpm start\n\n```", "```js\n--color-text: #8da3c5; \n--color-primary: #189ac4; \n\n```", "```js\n.post__title { \n  color: var(--color-primary); \n} \n.post__content { \n  color: var(--color-text); \n} \n\n```", "```js\n:root { \n  --titlebar-bg-color: #2d2d2d; \n  --titlebar-fg-color: #dcdcdc; \n  --dirlist-bg-color: #dedede; \n  --dirlist-fg-color: #636363; \n  --filelist-bg-color: #f9f9f9; \n  --filelist-fg-color: #333341; \n  --dirlist-w: 250px; \n  --titlebar-h: 40px; \n  --footer-h: 40px; \n  --footer-bg-color: #dedede; \n  --separator-color: #2d2d2d; \n} \n\n```", "```js\n@import url(\"./Base/defenitions.css\"); \n... \n\n```", "```js\n.l-app { \n  display: flex; \n  flex-flow: column nowrap; \n  align-items: stretch; \n} \n\n.l-app__titlebar { \n  flex: 0 0 var(--titlebar-h); \n} \n\n.l-app__main { \n  flex: 1 1 auto; \n} \n\n.l-app_footer { \n  flex: 0 0 var(--footer-h); \n} \n\n```", "```js\n.l-main { \n  display: flex; \n  flex-flow: row nowrap; \n  align-items: stretch; \n} \n\n.l-main__dir-list { \n  flex: 0 0 var(--dirlist-w); \n} \n\n.l-main__file-list { \n  flex: 1 1 auto; \n} \n\n```", "```js\n.titlebar { \n  background-color: var(--titlebar-bg-color); \n  color: var(--titlebar-fg-color); \n  padding: 0.8em 0.6em; \n} \n\n```", "```js\n.footer { \n  border-top: 1px solid var(--separator-color); \n  background-color: var(--footer-bg-color); \n  padding: 0.4em 0.6em; \n} \n\n```", "```js\n.file-list { \n  background-color: var(--filelist-bg-color); \n  color: var(--filelist-fg-color); \n} \n\n```", "```js\n.dir-list { \n  background-color: var(--dirlist-bg-color); \n  color: var(--dirlist-fg-color); \n  border-right: 1px solid var(--separator-color); \n} \n\n```", "```js\n.titlebar { \n  ... \n  position: sticky; \n  top: 0; \n} \n\n```", "```js\n.footer { \n  ... \n  position: sticky; \n  bottom: 0; \n} \n\n```", "```js\n<header class=\"l-app__titlebar titlebar\"> \n  <span class=\"titlebar__path\">/home/sheiko/Sites/file-explorer</span> \n  <a class=\"titlebar__btn\"  >_</a> \n  <a class=\"titlebar__btn is-hidden\" > </a> \n  <a class=\"titlebar__btn\" ></a> \n  <a class=\"titlebar__btn\" ></a> \n</header> \n\n```", "```js\n.titlebar { \n  ... \n  display: flex; \n  flex-flow: row nowrap; \n  align-items: stretch; \n} \n.titlebar__path { \n  flex: 1 1 auto; \n} \n.titlebar__btn { \n  flex: 0 0 25px; \n  cursor: pointer; \n} \n\n```", "```js\n<aside class=\"l-main__dir-list dir-list\"> \n  <nav> \n    <ul> \n      <li class=\"dir-list__li\">..</li> \n      <li class=\"dir-list__li\">assets</li> \n      <li class=\"dir-list__li\">js</li> \n      <li class=\"dir-list__li\">node_modules</li> \n      <li class=\"dir-list__li\">tests</li></ul> \n  </nav> \n</aside> \n\n```", "```js\n.dir-list__li { \n  padding: 0.8em 0.6em; \n  cursor: pointer; \n  white-space: nowrap; \n  overflow: hidden; \n  text-overflow: ellipsis; \n} \n\n.dir-list__li:hover { \n  background-color: var(--dirlist-bg-hover-color); \n  color: var(--dirlist-fg-hover-color); \n} \n\n```", "```js\n  --dirlist-bg-hover-color: #d64937; \n  --dirlist-fg-hover-color: #ffffff; \n\n```", "```js\n<main class=\"l-main__file-list file-list\"> \n  <nav> \n    <ul> \n      <li class=\"file-list__li file-list__head\"> \n      <span class=\"file-list__li__name\">Name</span> \n      <span class=\"file-list__li__size\">Size</span> \n      <span class=\"file-list__li__time\">Modified</span> \n      </li> \n      <li class=\"file-list__li\"> \n        <span class=\"file-list__li__name\">index.html</span> \n        <span class=\"file-list__li__size\">1.71 KB</span> \n        <span class=\"file-list__li__time\">3/3/2017, 15:44:19</span> \n      </li> \n      <li class=\"file-list__li\"> \n        <span class=\"file-list__li__name\">package.json</span> \n        <span class=\"file-list__li__size\">539 B</span> \n        <span class=\"file-list__li__time\">3/3/2017, 17:53:19</span> \n      </li> \n    </ul> \n  </nav> \n</main> \n\n```", "```js\n.file-list { \n  background-color: var(--filelist-bg-color); \n  color: var(--filelist-fg-color); \n  cursor: pointer; \n} \n\n.file-list__li { \n  display: flex; \n  flex-flow: row nowrap; \n} \n\n.file-list__li:not(.file-list__head){ \n  cursor: pointer; \n} \n.file-list__li:not(.file-list__head):hover { \n  color: var(--filelist-fg-hover-color); \n} \n.file-list__li > * { \n  flex: 1 1 auto; \n  padding: 0.8em 0.8em; \n  overflow: hidden; \n} \n\n.file-list__li__name { \n  white-space: nowrap; \n  text-overflow: ellipsis; \n  width: 50%; \n} \n.file-list__li__time { \n  width: 35%; \n} \n.file-list__li__size { \n  width: 15%; \n} \n\n```", "```js\n--filelist-fg-hover-color: #d64937; \n\n```", "```js\n... \n<footer class=\"l-app__footer footer\"> \n  <h2 class=\"footer__header\">File Explorer</h2> \n  <select class=\"footer__select\"> \n    <option value=\"en-US\">English</option> \n    <option value=\"de-DE\">Deutsch</option> \n  </select> \n</footer> \n\n```", "```js\n.footer { \n ... \n  display: flex; \n  flex-flow: row nowrap; \n  justify-content: flex-end; \n} \n\n.footer__header { \n  margin: 0.2em auto 0 0; \n  font-size: 1em; \n} \n\n```", "```js\n<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" \n      rel=\"stylesheet\"> \n\n```", "```js\n.icon { \n  font-family: 'Material Icons'; \n  font-weight: normal; \n  font-style: normal; \n  font-size: 16px; \n  display: inline-block; \n  line-height: 1; \n  text-transform: none; \n  letter-spacing: normal; \n  word-wrap: normal; \n  white-space: nowrap; \n  direction: ltr; \n  -webkit-font-smoothing: antialiased; \n  text-rendering: optimizeLegibility; \n} \n\n```", "```js\n<i class=\"material-icons\">thumb_up</i> \n\n```", "```js\n<li class=\"dir-list__li\"><i class=\"icon\">folder</i>assets</li> \n\n```", "```js\n... \n<footer class=\"l-app__footer footer\"> \n   <h2 class=\"footer__header\">File Explorer</h2> \n   <label class=\"icon footer__label\">language</label> \n          .... \n\n```", "```js\n... \n.footer__label { \n  margin-right: 0.2em; \n  font-size: 1.4em; \n  margin-top: 0.1em; \n} \n\n```", "```js\nconsole.log( \"foo runs\" ); \nexports.message = \"foo's export\"; \n\n```", "```js\nconst foo = require( \"./foo\" ); \nconsole.log( foo.message ); \n\n```", "```js\n$node bar.js\nfoo runs\nfoo's export\n\n```", "```js\n(function(){ \n    var foo = 1; \n    if ( true ) { \n            var foo = 2; \n            console.log( foo ); \n    } \n    console.log( foo ); \n}()); \n\n```", "```js\n$ node es6.js\n2\n2\n\n```", "```js\n (function(){ \n    let foo = 1; \n    if ( true ) { \n            let foo = 2; \n            console.log( foo ); \n    } \n    console.log( foo ); \n}()); \n\n```", "```js\n$ node es6.js\n2\n1\n\n```", "```js\n\nclass Machine { \n    constructor( name ){ \n   this.name = name; \n  } \n} \nclass Robot extends Machine { \n  constructor( name ){ \n   super( name ); \n  } \n  move( direction = \"left\" ){ \n   console.log( this.name + \" moving \", Robot.normalizeDirection( direction ) ); \n  } \n  static normalizeDirection( direction ) { \n          return direction.toLowerCase(); \n  } \n} \n\nconst robot = new Robot( \"R2D2\" ); \nrobot.move(); \nrobot.move( \"RIGHT\" ); \n\n```", "```js\n$ node es6.js\nR2D2 moving  left\nR2D2 moving  right\n\n```", "```js\n\nconst R2D2 = { \n    name: \"R2D2\", \n    move(){ \n            console.log( \"moving\" ); \n    }, \n    fly(){       \n            console.log( \"flying\" ); \n    } \n}; \n\n```", "```js\n\nconsole.log( ` \n    ${this.name} moving  ${Robot.normalizeDirection( direction )} \n` ); \n\n```", "```js\n\nclass Robot { \n  get nickname(){ \n   return \"But you have to prove first that you belong to the Rebel \n         Alliance!\"; \n  } \n  set nickname( nickname ){ \n   throw new Error( \"Seriously?!\" ); \n  } \n}; \n\nconst robot = new Robot(); \nconsole.log( robot.nickname ); \nrobot.nickname = \"trashcan\";  \n\n```", "```js\n$ node es6.js\nBut you have to prove first that you belong to the Rebel Alliance!\nError: Seriously?!\n\n```", "```js\nclass Robot extends Machine { \n    //... \n  isRebel(){ \n          const ALLOWED_NAMES = [ \"R2D2\", \"C3PO\" ]; \n          return ALLOWED_NAMES.find(( name ) => { \n                return name === this.name; \n          }); \n  } \n} \n\n```", "```js\nreturn ALLOWED_NAMES.find( name => name === this.name ); \n\n```", "```js\nconst robots =  [ \"R2D2\", \"C3PO\", \"BB8\" ]; \nconst [ r2d2, c3po ] = robots; \nconsole.log( r2d2, c3po ); \n\n```", "```js\nconst meta = { \n    occupation: \"Astromech droid\", \n    homeworld: \"Naboo\" \n}; \n\nconst { occupation, homeworld } = meta; \nconsole.log( occupation, homeworld ); \n\n```", "```js\nconst { occupation: affair, homeworld: home } = meta; \nconsole.log( affair, home ); \n\n```", "```js\n<header class=\"l-app__titlebar titlebar\" data-bind=\"titlebar\"> \n  ... \n  <a class=\"titlebar__btn\" data-bind=\"close\" > ;</a> \n</header> \n\n```", "```js\nclass TitleBarActionsView { \n\n  constructor( boundingEl ){    \n   this.closeEl = boundingEl.querySelector( \"[data-bind=close]\" ); \n          this.bindUi(); \n  } \n\n    bindUi(){ \n          this.closeEl.addEventListener( \"click\", this.onClose.bind( this ), false ); \n    } \n\n  onClose( e ) { \n   e.preventDefault(); \n   nw.Window.get().close(); \n  } \n} \n\nexports.TitleBarActionsView = TitleBarActionsView; \n\n```", "```js\nconst { TitleBarActionsView } = require( \"./js/View/TitleBarActions\" ); \n\nnew TitleBarActionsView( document.querySelector( \"[data-bind=titlebar]\" ) ); \n\n```", "```js\nthis.unmaximizeEl = boundingEl.querySelector( \"[data-bind=unmaximize]\" ); \nthis.maximizeEl = boundingEl.querySelector( \"[data-bind=maximize]\" ); \nthis.minimizeEl = boundingEl.querySelector( \"[data-bind=minimize]\" ); \n\n```", "```js\nthis.minimizeEl.addEventListener( \"click\", this.onMinimize.bind( this ), false ); \nthis.maximizeEl.addEventListener( \"click\", this.onMaximize.bind( this ), false ); \nthis.unmaximizeEl.addEventListener( \"click\", this.onUnmaximize.bind( this ), false ); \n\n```", "```js\nonMinimize( e ) { \n    e.preventDefault(); \n    nw.Window.get().minimize(); \n} \n\n```", "```js\ntoggleMaximize(){ \n    this.maximizeEl.classList.toggle( \"is-hidden\" ); \n    this.unmaximizeEl.classList.toggle( \"is-hidden\" ); \n} \n\n```", "```js\n\nonUnmaximize( e ) { \n    e.preventDefault(); \n    nw.Window.get().unmaximize(); \n    this.toggleMaximize(); \n} \n\nonMaximize( e ) { \n    e.preventDefault(); \n    nw.Window.get().maximize(); \n    this.toggleMaximize(); \n} \n\n```", "```js\nconst fs = require( \"fs\" ), \n      { join, parse } = require( \"path\" ); \n\nclass DirService  { \n\n  constructor( dir = null ){ \n    this.dir = dir || process.cwd(); \n  } \n\n  static readDir( dir ) { \n    const fInfoArr = fs.readdirSync( dir, \"utf-8\" ).map(( fileName ) => { \n      const filePath = join( dir, fileName ), \n            stats = DirService.getStats( filePath ); \n      if ( stats === false ) { \n        return false; \n      } \n      return { \n        fileName, \n        stats \n      }; \n    }); \n    return fInfoArr.filter( item => item !== false ); \n  } \n\n  getDirList() { \n    const collection = DirService.readDir( this.dir ).filter(( fInfo ) \n         => fInfo.stats.isDirectory() ); \n    if ( !this.isRoot() ) { \n      collection.unshift({ fileName: \"..\" }); \n    } \n    return collection; \n  } \n\n  getFileList() { \n    return DirService.readDir( this.dir ).filter(( fInfo ) => \n        fInfo.stats.isFile() ); \n  } \n\n  isRoot(){ \n    const { root } = parse( this.dir ); \n    return ( root === this.dir ); \n  } \n\n  static getStats( filePath ) { \n    try { \n      return fs.statSync( filePath ); \n    } catch( e ) { \n      return false; \n    } \n  } \n\n}; \n\nexports.DirService = DirService; \n\n```", "```js\n//.... \nconst EventEmitter = require( \"events\" ); \n\nclass DirService extends EventEmitter { \n\n  constructor( dir = null ){ \n   super(); \n   this.dir = dir || process.cwd(); \n  } \n  setDir( dir = \"\" ){ \n   let newDir = path.join( this.dir, dir ); \n   // Early exit \n   if ( DirService.getStats( newDir ) === false ) { \n   return; \n   } \n   this.dir = newDir; \n   this.notify(); \n  } \n\n  notify(){ \n   this.emit( \"update\" ); \n  } \n  //... \n} \n\n```", "```js\ndirService.on( \"customEvent\", () => console.log( \"fired customEvent\" )); \ndirService.emit( \"customEvent\" ); \n\n```", "```js\n{ \n  \"name\": \"file-explorer\", \n  \"main\": \"specs.html\", \n  \"chromium-args\": \"--mixed-context\" \n} \n\n```", "```js\n<!doctype html> \n<html> \n<head> \n    <meta charset=\"utf-8\"> \n    <title>Jasmine Spec Runner</title> \n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jasmine/2.5.2/jasmine.css\"> \n    <script src=\"img/jasmine.js\"></script> \n    <script src=\"img/jasmine-\n      html.js\"></script> \n    <script src=\"img/boot.js\"></script> \n</head> \n<body> \n  <div id=\"sandbox\" style=\"display: none\"></div> \n    <script> \n      // Catch exception and report them to the console. \n      process.on( \"uncaughtException\", ( err ) => console.error( err ) ); \n      const path = require( \"path\" ), \n            jetpack = require( \"fs-jetpack\" ), \n            matchingSpecs = jetpack.find( \"../../js\", { \n                matching: [ \n                  \"*.spec.js\", \n                  \"!node_modules/**\" \n                ] \n            }, \"relativePath\" ); \n\n      matchingSpecs.forEach(( file ) => { \n        require( path.join( __dirname, file ) ); \n      }); \n    </script> \n</body> \n</html> \n\n```", "```js\nnpm i -D fs-jetpack\n\n```", "```js\n\ndescribe( \"a context e.g. class or module\", () => { \n  describe( \"a context e.g. method or function\", () => { \n    it( \"does what expected\", () => { \n       expect( returnValue ).toBe( expectedValue ); \n    }); \n  }); \n}); \n\n```", "```js\nbeforeEach(() => { \n  // something to run before to every test \n}); \nafterEach(() => { \n  // something to run after to every test \n}); \n\n```", "```js\nconst { DirService } = require( \"./Dir\" ), \n      CWD = process.cwd(), \n      mock = require( \"mock-fs\" ), \n      { join } = require( \"path\" ); \n\ndescribe( \"Service/Dir\", () => { \n\n  beforeEach(() => { \n    mock({ \n     foo: { \n        bar: { \n          baz: \"baz\", // file contains text baz \n          qux: \"qux\" \n        } \n     } \n    }); \n  }); \n  afterEach( mock.restore ); \n\n  describe( \"#getFileList\", () => { \n    it( \"receives intended file list\", () => { \n       const service = new DirService( join( \"foo\", \"bar\" ) ); \n       service.setDir( \"bar\" ); \n       let files = service.getFileList(); \n       expect( files.length ).toBe( 2 ); \n    }); \n    it( \"every file has expected properties\", () => { \n       const service = new DirService( join( \"foo\", \"bar\" ) ); \n       const files = service.getFileList(); \n       console.log( files ); \n       const [ file ] = files; \n       expect( file.fileName ).toBe( \"baz\" ); \n       expect( file.stats.size ).toBe( 3 ); \n       expect( file.stats.isFile() ).toBe( true ); \n       expect( file.stats.isDirectory() ).toBe( false ); \n       expect( file.stats.mtime ).toBeTruthy(); \n    }); \n  }); \n}); \n\n```", "```js\nnpm i -D mock-fs\n\n```", "```js\n{ \n  ... \n  \"scripts\": { \n    ... \n    \"test\": \"nw tests/unit-tests\" \n  }, \n  ... \n} \n\n```", "```js\nnpm test\n\n```", "```js\n\ndescribe( \"#setDir\", () => { \n  it( \"fires update event\", ( done ) => { \n     const service = new DirService( \"foo\" ); \n     service.on( \"update\", () => { \n       expect( true ).toBe( true ); \n       done(); \n     }); \n     service.notify(); \n  }); \n}); \n\n```", "```js\n<span class=\"titlebar__path\" data-bind=\"path\"></span> \n.. \n<aside class=\"l-main__dir-list dir-list\"> \n  <nav> \n    <ul data-bind=\"dirList\"></ul> \n  </nav> \n</aside> \n<main class=\"l-main__file-list file-list\"> \n  <nav> \n    <ul data-bind=\"fileList\"></ul> \n  </nav> \n</main> \n\n```", "```js\nclass DirListView { \n\n  constructor( boundingEl, dirService ){ \n    this.el = boundingEl; \n    this.dir = dirService; \n    // Subscribe on DirService updates \n    dirService.on( \"update\", () => this.update( dirService.getDirList() ) ); \n  } \n\n  onOpenDir( e ){ \n    e.preventDefault(); \n    this.dir.setDir( e.target.dataset.file ); \n  } \n\n  update( collection ) { \n    this.el.innerHTML = \"\"; \n    collection.forEach(( fInfo ) => { \n      this.el.insertAdjacentHTML( \"beforeend\", \n        `<li class=\"dir-list__li\" data-file=\"${fInfo.fileName}\"> \n         <i class=\"icon\">folder</i> ${fInfo.fileName}</li>` ); \n    }); \n    this.bindUi(); \n  } \n\n  bindUi(){ \n    const liArr = Array.from( this.el.querySelectorAll( \"li[data-file]\" ) ); \n    liArr.forEach(( el ) => { \n      el.addEventListener( \"click\", e => this.onOpenDir( e ), false ); \n    }); \n  } \n} \n\nexports.DirListView = DirListView; \n\n```", "```js\nconst { DirService } = require( \"./js/Service/Dir\" ), \n      { DirListView } = require( \"./js/View/DirList\" ), \n      dirService = new DirService(); \n\nnew DirListView( document.querySelector( \"[data-bind=dirList]\" ), dirService ); \n\ndirService.notify(); \n\n```", "```js\nnpm start \n\n```", "```js\nconst { DirListView } = require( \"./DirList\" ), \n      { DirService } = require( \"../Service/Dir\" ); \n\ndescribe( \"View/DirList\", function(){ \n\n  beforeEach(() => { \n    this.sandbox = document.getElementById( \"sandbox\" ); \n    this.sandbox.innerHTML = `<ul data-bind=\"dirList\"></ul>`; \n  }); \n\n  afterEach(() => { \n    this.sandbox.innerHTML = ``; \n  }); \n\n  describe( \"#update\", function(){ \n    it( \"updates from a given collection\", () => { \n      const dirService = new DirService(), \n            view = new DirListView( this.sandbox.querySelector( \"[data-bind=dirList]\" ), dirService ); \n      view.update([ \n        { fileName: \"foo\" }, { fileName: \"bar\" } \n      ]); \n      expect( this.sandbox.querySelectorAll( \".dir-list__li\" ).length ).toBe( 2 ); \n    }); \n  }); \n}); \n\n```", "```js\nconst filesize = require( \"filesize\" ); \n\nclass FileListView { \n\n  constructor( boundingEl, dirService ){ \n    this.dir = dirService; \n    this.el = boundingEl; \n    // Subscribe on DirService updates \n    dirService.on( \"update\", () => this.update( \n    dirService.getFileList() ) ); \n  } \n\n  static formatTime( timeString ){ \n    const date = new Date( Date.parse( timeString ) ); \n    return date.toDateString(); \n  } \n\n  update( collection ) { \n    this.el.innerHTML = `<li class=\"file-list__li file-list__head\"> \n        <span class=\"file-list__li__name\">Name</span> \n        <span class=\"file-list__li__size\">Size</span> \n        <span class=\"file-list__li__time\">Modified</span> \n      </li>`; \n    collection.forEach(( fInfo ) => { \n      this.el.insertAdjacentHTML( \"beforeend\", `<li class=\"file-\n           list__li\" data-file=\"${fInfo.fileName}\"> \n        <span class=\"file-list__li__name\">${fInfo.fileName}</span> \n        <span class=\"file-list__li__size\">${filesize(fInfo.stats.size)}</span> \n        <span class=\"file-list__li__time\">${FileListView.formatTime( \n             fInfo.stats.mtime )}</span> \n      </li>` ); \n    }); \n    this.bindUi(); \n  } \n\n  bindUi(){ \n    Array.from( this.el.querySelectorAll( \".file-list__li\" ) \n    ).forEach(( el ) => { \n      el.addEventListener( \"click\", ( e ) => { \n        e.preventDefault(); \n        nw.Shell.openItem( this.dir.getFile( el.dataset.file ) ); \n      }, false ); \n    }); \n  } \n\n} \n\nexports.FileListView = FileListView; \n\n```", "```js\nconst { FileListView } = require( \"./js/View/FileList\" ); \nnew FileListView( document.querySelector( \"[data-bind=fileList]\" ), dirService ); \n\n```", "```js\nclass TitleBarPathView { \n\n  constructor( boundingEl, dirService ){ \n    this.el = boundingEl; \n    dirService.on( \"update\", () => this.render( dirService.getDir() ) ); \n  } \n\n  render( dir ) { \n    this.el.innerHTML = dir; \n  } \n} \n\nexports.TitleBarPathView = TitleBarPathView; \n\n```", "```js\nconst { TitleBarPathView } = require( \"./js/View/TitleBarPath\" ); \nnew TitleBarPathView( document.querySelector( \"[data-bind=path]\" ), dirService ); \n\n```"]