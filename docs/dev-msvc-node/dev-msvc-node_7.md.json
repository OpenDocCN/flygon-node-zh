["```js\npm2 install pm2-server-monit\n\n```", "```js\npm2 link fan7p32fnysuuw8 znlz25frrcwakg6 my-server\n\n```", "```js\nvar seneca = require('seneca')();\n\nvar names = [];\n\nseneca.add({cmd: 'memory-leak'}, function(args, done){\n  names.push(args.name);\n  greetings = \"Hello \" + args.name;\n  done(null ,{result: greetings});\n});\n\nseneca.act({cmd: 'memory-leak', name: 'David'}, function(err, response) {\n  console.log(response);\n});\n```", "```js\nvar seneca = require('seneca')();\n\nvar names = [];\n\nseneca.add({cmd: 'memory-leak'}, function(args, done){\n  names.push(args.name);\n  greetings = \"Hello \" + args.name;\n  done(null ,{result: greetings});\n});\n\nseneca.listen(null, {port: 8080});\n```", "```js\nnode index.js\n2016-02-14T13:30:26.748Z szwj2mazorea/1455456626740/40489/- INFO hello Seneca/1.1.0/szwj2mazorea/1455456626740/40489/-\n2016-02-14T13:30:27.003Z szwj2mazorea/1455456626740/40489/- INFO listen {port:8080}\n\n```", "```js\ncurl -d '{\"cmd\": \"memory-leak\", \"name\":\"David\"}' http://127.0.0.1:8080/act\n{\"result\":\"Hello David\"}%\n\n```", "```js\npm2 start index.js\n\n```", "```js\nfor i in {0..100000}\ndo\n  curl -d '{\"cmd\": \"memory-leak\", \"name\":\"David\"}' http://127.0.0.1:8080/act\ndone\n```", "```js\nvar seneca = require('seneca')();\n\nvar pmx = require('pmx');\n\nvar names = [];\n\nseneca.add({cmd: 'exception'}, function(args, done){\n  pmx.notify(new Error(\"Unexpected Exception!\"));\n\n  done(null ,{result: 100/args.number}); \n});\n\nseneca.listen({port: 8085});\n```", "```js\ncurl -d '{\"cmd\": \"exception\", \"number\": \"0\"}' http://localhost:8085/act\n{\"result\":null}%\n\n```", "```js\nvar seneca = require('seneca')();\nvar pmx = require(\"pmx\").init({\n  http: true,\n  errors: true,\n  custom_probes: true,\n  network: true,\n  ports: true\n});\nvar names = [];\nvar probe = pmx.probe();\n\nvar meter = probe.metric({\n  name      : 'Last call'\n});\n\nseneca.add({cmd: 'last-call'}, function(args, done){\n  console.log(meter);\n  meter.set(new Date().toISOString());\n  done(null, {result: \"done!\"});\n});\n\nseneca.listen({port: 8085});\n```", "```js\nvar probe = pmx.probe();\n\nvar meter = probe.metric({\n  name      : 'Last call'\n});\n```", "```js\nvar seneca = require('seneca')();\nvar pmx = require(\"pmx\").init({\n  http: true,\n  errors: true,\n  custom_probes: true,\n  network: true,\n  ports: true\n});\nvar names = [];\nvar probe = pmx.probe();\n\nvar counter = probe.counter({\n  name : 'Number of calls'\n});\n\nseneca.add({cmd: 'counter'}, function(args, done){\n  counter.inc();\n  done(null, {result: \"done!\"});\n});\n\nseneca.listen({port: 8085});\n```", "```js\ncounter.dec();\n```", "```js\nvar seneca = require('seneca')();\nvar pmx = require(\"pmx\").init({\n  http: true,\n  errors: true,\n  custom_probes: true,\n  network: true,\n  ports: true\n});\nvar names = [];\nvar probe = pmx.probe();\n\nvar meter = probe.meter({\n  name      : 'Calls per minute',\n  samples   : 60,\n  timeframe : 3600\n});\n\nseneca.add({cmd: 'calls-minute'}, function(args, done){\n  meter.mark();\n  done(null, {result: \"done!\"});\n});\n\nseneca.listen({port: 8085});\n```", "```js\ncurl -d '{\"cmd\": \"calls-minute\"}' http://localhost:8085/act\n\n```", "```js\nvar meter = probe.meter({\n  name      : 'Calls per minute',\n  samples   : 60,\n  timeframe : 3600\n});\n```", "```js\nvar seneca = require('seneca')();\nvar senecaPendingApplications = require('seneca').client({type: 'tcp', \n  port: 8002, \n  host: \"192.168.1.2\"});\n  var senecaCreditRatingCalculator = require('seneca').client({type: 'tcp', \n  port: 8002, \n  host: \"192.168.1.3\"});\n\nseneca.add({cmd: 'mortgages', action: 'calculate'}, function(args, callback) {\n  senecaPendingApplications.act({\n    cmd: 'applications', \n    section: 'mortgages', \n    custmers: args.customers}, function(err, responseApplications) {\n      senecaCreditRatingCalculator.act({cmd: 'rating', customers: args.customers}, function(err, response) {\n\n        processApplications(response.ratings, \n        responseApplications.applications,\n        args.customers\n      );\n    });\n  });\n});\n```"]