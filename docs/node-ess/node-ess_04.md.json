["```js\nvar Http = require( 'http' );\n\nHttp.createServer( function( request, response ) {\n    console.log( \n        'Received request', \n        request.method,\n        request.url \n    )\n\n    console.log( 'Returning 200' );\n\n    response.writeHead( 200, { 'Content-Type': 'text/plain' } );\n    response.end( 'Hello World\\n' );\n\n}).listen( 8000 );\n\nconsole.log( 'Server running on port 8000' );\n```", "```js\n[~/examples/example-6]$ node server.js\nServer running on port 8000\nReceived request GET /\nReturning 200\nReceived request GET /favicon.ico\nReturning 200\nReceived request GET /test\nReturning 200\nReceived request GET /favicon.ico\nReturning 200\n\n```", "```js\n[~/examples/example-7]$ npm install morgan\n[~/examples/example-7]$ npm install router\n\n```", "```js\nvar Morgan = require( 'morgan' ),\n    Router = require( 'router' ),\n    Http = require( 'http' );\n\nrouter = new Router( );\n\nrouter.use( Morgan( 'tiny' ) ); \n\n/* Simple server */\nHttp.createServer( function( request, response ) {\n    router( request, response, function( error ) {\n        if( !error ) {\n            response.writeHead( 404 );  \n        } else {\n            //Handle errors\n            console.log( error.message, error.stack );\n            response.writeHead( 400 );\n        }\n        response.end( '\\n' );\n\n    });\n}).listen( 8000 );\n\nconsole.log( 'Server running on port 8000' );\n\nfunction getInfo ( request, response ) {\n    var info = process.versions;\n\n    info = JSON.stringify( info );\n    response.writeHead( 200, { 'Content-Type': 'application/json' } );\n    response.end( info );\n}\nrouter.get( '/info', getInfo );\n```", "```js\n[~/examples/example-7]$ node server.js\nServer running on port 8000\nGET /test 404 - - 4.492 ms\nGET /favicon.ico 404 - - 2.281 ms\nGET /info 200 - - 1.120 ms\nGET /info 200 - - 1.120 ms\nGET /test 404 - - 0.199 ms\nGET /info 200 - - 0.494 ms\nGET /test 404 - - 0.162 ms\n```", "```js\nrouter.use( Morgan( 'combined' ) );\n```", "```js\n[~/examples/example-7]$ node server.js \nServer running on port 8000\n::1 - - [07/Jun/2015:11:09:03 +0000] \"GET /info HTTP/1.1\" 200 - \"-\" \"--REMOVED---\"\n\n```", "```js\n [~/examples/example-8]$ npm install \u2013g bunyan\n [~/examples/example-8]$ npm install bunyan \n\n```", "```js\nvar Bunyan = require( 'bunyan' ),\n    logger;\n\nlogger = Bunyan.createLogger( {\n    name: 'example-8'\n});\nlogger.info( 'Hello logging' );\n```", "```js\n[~/examples/example-8]$ node index.js\n{\"name\":\"example-8\",\"hostname\":\"macbook.local\",\"pid\":2483,\"level\":30,\"msg\":\"Hello logging\",\"time\":\"2015-06-07T11:35:13.973Z\",\"v\":0}\n\n```", "```js\n[~/examples/example-8]$ node index.js | bunyan\n[2015-06-07T11:38:59.698Z]  INFO: example-8/2494 on macbook.local: Hello logging\n\n```", "```js\nvar Bunyan = require( 'bunyan' ),\n    logger;\nlogger = Bunyan.createLogger( {\n    name: 'example-8'\n});\nlogger.trace( 'Trace' );\nlogger.debug( 'Debug' );\nlogger.info( 'Info' );\nlogger.warn( 'Warn' );\nlogger.error( 'Error' );\nlogger.fatal( 'Fatal' );\n\nlogger.fatal( 'We got a fatal, lets exit' );\nprocess.exit( 1 );\n```", "```js\n[~/examples/example-8]$ node index.js | bunyan\n[2015-06-07T11:39:55.801Z]  INFO: example-8/2512 on macbook.local: Info\n[2015-06-07T11:39:55.811Z]  WARN: example-8/2512 on macbook.local: Warn\n[2015-06-07T11:39:55.814Z] ERROR: example-8/2512 on macbook.local: Error\n[2015-06-07T11:39:55.814Z] FATAL: example-8/2512 on macbook.local: Fatal\n[2015-06-07T11:39:55.814Z] FATAL: example-8/2512 on macbook.local: We got a fatal, lets exit\n\n```", "```js\nlogger = Bunyan.createLogger( {\n    name: 'example-8',\n    level: Bunyan.TRACE \n});\n```", "```js\n[~/examples/example-8]$ node index.js | bunyan\n[2015-06-07T11:55:40.175Z] TRACE: example-8/2621 on macbook.local: Trace\n[2015-06-07T11:55:40.177Z] DEBUG: example-8/2621 on macbook.local: Debug\n[2015-06-07T11:55:40.178Z]  INFO: example-8/2621 on macbook.local: Info\n[2015-06-07T11:55:40.178Z]  WARN: example-8/2621 on macbook.local: Warn\n[2015-06-07T11:55:40.178Z] ERROR: example-8/2621 on macbook.local: Error\n[2015-06-07T11:55:40.178Z] FATAL: example-8/2621 on macbook.local: Fatal\n[2015-06-07T11:55:40.178Z] FATAL: example-8/2621 on macbook.local: We got a fatal, lets exit\n\n```", "```js\ntry {\n    ref.go( );\n} catch ( error ) {\n    logger.error( error );\n}\n```", "```js\n[~/examples/example-9]$ node index.js | bunyan\n[2015-06-07T12:00:38.700Z] ERROR: example-9/2635 on macbook.local: ref is not defined\n ReferenceError: ref is not defined\n at Object.<anonymous> (~/examples/example-8/index.js:9:2)\n at Module._compile (module.js:460:26)\n at Object.Module._extensions..js (module.js:478:10)\n at Module.load (module.js:355:32)\n at Function.Module._load (module.js:310:12)\n at Function.Module.runMain (module.js:501:10)\n at startup (node.js:129:16)\n at node.js:814:3\n\n```", "```js\n[~/examples/example-9]$ npm install -g prettyjson\n[~/examples/example-9]$ node index.js | prettyjson\nname:     example-9\nhostname: macbook.local\npid:      2650\nlevel:    50\nerr: \n message: ref is not defined\n name:    ReferenceError\n stack: \n \"\"\"\n ReferenceError: ref is not defined\n at Object.<anonymous> (~/examples/example-8/index.js:9:2)\n at Module._compile (module.js:460:26)\n at Object.Module._extensions..js (module.js:478:10)\n at Module.load (module.js:355:32)\n at Function.Module._load (module.js:310:12)\n at Function.Module.runMain (module.js:501:10)\n at startup (node.js:129:16)\n at node.js:814:3\n \"\"\"\nmsg:      ref is not defined\ntime:     2015-06-07T12:02:33.875Z\nv:        0\n\n```", "```js\ntry {\n    ref.go( );\n} catch ( error ) {\n    console.log( JSON.stringify( error ) );\n    console.log( error );\n    console.log( {\n        message: error.message\n        name: error.name\n        stack: error.stack\n    });\n}\n```", "```js\n[~/examples/example-10]$ node index.js\n{}\n[ReferenceError: ref is not defined]\n{ message: 'ref is not defined',\n name: 'ReferenceError',\n stack: '--REMOVED--' }\n\n```", "```js\nvar Bunyan = require( 'bunyan' ),\n    logger;\n\nlogger = Bunyan.createLogger( {\n    name: 'example-11',\n    streams: [\n        {\n            level: Bunyan.INFO,\n            path: './log.log'   \n        }\n    ]\n});\nlogger.info( process.versions );\nlogger.info( 'Application started' );\n```", "```js\n [~/examples/example-11]$ node index.js\n\n```", "```js\n[~/examples/example-11]$ ls \nindex.js     log.log      node_modules\n\n```", "```js\n[~/examples/example-11]$ cat log.log\n{\"name\":\"example-11\",\"hostname\":\"macbook.local\",\"pid\":3614,\"level\":30,\"http_parser\":\"2.3\",\"node\":\"0.12.2\",\"v8\":\"3.28.73\",\"uv\":\"1.4.2-node1\",\"zlib\":\"1.2.8\",\"modules\":\"14\",\"openssl\":\"1.0.1m\",\"msg\":\"\",\"time\":\"2015-06-07T12:29:46.606Z\",\"v\":0}\n{\"name\":\"example-11\",\"hostname\":\"macbook.local\",\"pid\":3614,\"level\":30,\"msg\":\"Application started\",\"time\":\"2015-06-07T12:29:46.608Z\",\"v\":0}\n\n```", "```js\n[~/examples/example-11]$ cat log.log | bunyan\n[~/examples/example-11]$ cat log.log | bunyan\n[2015-06-07T12:29:46.606Z]  INFO: example-11/3614 on macbook.local:  (http_parser=2.3, node=0.12.2, v8=3.28.73, uv=1.4.2-node1, zlib=1.2.8, modules=14, openssl=1.0.1m)\n[2015-06-07T12:29:46.608Z]  INFO: example-11/3614 on macbook.local: Application started\n\n```", "```js\n[~/examples/example-11]$ tail -f log.log | bunyan\n\n```", "```js\nlogger = Bunyan.createLogger( {\n    name: 'example-11',\n    streams: [\n        {\n            level: Bunyan.INFO,\n            path: './log.log'   \n        },\n        {\n            level: Bunyan.INFO,\n            stream: process.stdout\n        }\n    ]\n});\n```", "```js\n[~/examples/example-11]$ node index.js | bunyan\n [2015-06-07T12:37:19.857Z] INFO: example-11/3695 on macbook.local: (http_parser=2.3, node=0.12.2, v8=3.28.73, uv=1.4.2-node1, zlib=1.2.8, modules=14, openssl=1.0.1m) [2015-06-07T12:37:19.860Z] INFO: example-11/3695 on macbook.local: Application started\n\n```", "```js\n[~/examples/example-11]$ cat log.log | bunyan\n [2015-06-07T12:29:46.606Z]  INFO: example-11/3614 on macbook.local:  (http_parser=2.3, node=0.12.2, v8=3.28.73, uv=1.4.2-node1, zlib=1.2.8, modules=14, openssl=1.0.1m)\n[2015-06-07T12:29:46.608Z]  INFO: example-11/3614 on macbook.local: Application started\n[2015-06-07T12:37:19.857Z]  INFO: example-11/3695 on macbook.local:  (http_parser=2.3, node=0.12.2, v8=3.28.73, uv=1.4.2-node1, zlib=1.2.8, modules=14, openssl=1.0.1m)\n[2015-06-07T12:37:19.860Z]  INFO: example-11/3695 on macbook.local: Application started\n\n```", "```js\ntry {\n    a = function( callback ) {\n        return function( ) {\n            callback( );\n        };\n    };\n    b = function( callback ) {\n        return function( ) {\n            callback( );\n        }\n    };\n    c = function( callback ) {\n        return function( ) {\n            throw new Error( \"I'm just messing with you\" ); \n        };\n    };\n    a( b( c( ) ) )( );\n} catch ( error ) {\n    logger.error( error );\n}\n```", "```js\n[~/examples/example-12]$ node index.js | bunyan\n [2015-06-07T12:51:11.665Z] ERROR: example-12/4158 on macbook.local: I'm just messing with you\n Error: I'm just messing with you\n at /Users/fabian/examples/example-12/index.js:19:10\n at /Users/fabian/examples/example-12/index.js:14:4\n at /Users/fabian/examples/example-12/index.js:9:4\n at Object.<anonymous> (/Users/fabian/examples/example-12/index.js:22:16)\n at Module._compile (module.js:460:26)\n at Object.Module._extensions..js (module.js:478:10)\n at Module.load (module.js:355:32)\n at Function.Module._load (module.js:310:12)\n at Function.Module.runMain (module.js:501:10)\n at startup (node.js:129:16)\n\n```", "```js\n[~/examples/example-13]$ npm install q\n\n```", "```js\nvar Q = require( 'q' );\n\nQ( )\n.then( function() {\n    // Promised returned from another function\n    return Q( )\n    .then( function( ) {\n        throw new Error( 'Hello errors' ); \n    });\n})\n.fail( function( error ) {\n    logger.error( error );\n});\n```", "```js\n[~/examples/example-13]$ node index.js | bunyan\n [2015-06-07T13:03:57.047Z] ERROR: example-13/4598 on macbook.local: Hello errors\n Error: Hello errors\n at /Users/fabian/examples/example-13/index.js:12:9\n at _fulfilled (/Users/fabian/examples/example-13/node_modules/q/q.js:834:54)\n\n```", "```js\nreturn Q( )\n    .then( function resultFromOtherFunction( ) {\n        throw new Error( 'Hello errors' ); \n    });\n```", "```js\n[~/examples/example-13]$ node index.js | bunyan\n [2015-06-07T13:04:45.598Z] ERROR: example-13/4614 on macbook.local: Hello errors\n Error: Hello errors\n at resultFromOtherFunction (/Users/fabian/examples/example-13/index.js:12:9)\n at _fulfilled (/Users/fabian/examples/example-13/node_modules/q/q.js:834:54)\n\n```", "```js\nfunction parseJSONAndUse( input ) {\n    var json = null;\n    try {\n        json = JSON.parse( input );\n    } catch ( error ) {\n        return Q.reject( new Error( \"Couldn't parse JSON\" ) );\n    }\n    return Q( use( json ) );\n}\n```", "```js\nprocess.on( 'uncaughtException', function errorProcessHandler( error ) {\n    logger.fatal( error );\n    logger.fatal( 'Fatal error encountered, exiting now' );\n    process.exit( 1 );\n});\n```", "```js\nvar Domain = require( 'domain' ),\n    domain;\n\ndomain = Domain.create( );\n\ndomain.on( 'error', function( error ) {\n    console.log( 'Domain error', error.message );\n});\n\ndomain.run( function( ) {\n    // Run code inside domain\n    console.log( process.domain === domain );\n    throw new Error( 'Error happened' ); \n});\n```", "```js\n[~/examples/example-14]$ node index.js\ntrue\nDomain error Error happened\n\n```", "```js\nprocess.nextTick( function( ) {\n    domain.run( function( ) {\n        throw new Error( 'Error happened' );\n    });\n    console.log( \"I won't execute\" );\n}); \n\nprocess.nextTick( function( ) {\n    console.log( 'Next tick happend!' );\n});\n\nconsole.log( 'I happened before everything else' );\n```", "```js\n[~/examples/example-15]$ node index.js\nI happened before everything else\nDomain error Error happened\nNext tick happend!\n\n```"]