["```js\n[~/examples/example-27] npm install socket.io\n\n```", "```js\nvar Http = require( 'http' ),\n    FS = require( 'fs' );\n\nvar server = Http.createServer( handler );\n\nserver.listen( 8080 );\n\nfunction handler( request, response ) {\n    var index = FS.readFileSync( 'index.html' );\n    index = index.toString( );\n\n    response.writeHead(200, {\n        'Content-Type': 'text/html',\n        'Content-Length': Buffer.byteLength( index )\n    });\n    response.end( index );\n}\n```", "```js\n<html>\n    <head>\n        <title>WS Example</title>\n    </head>\n    <body>\n        <h2>WS Example</h2>\n        <p id=\"output\"></p>\n        <!-- SocketIO Client library -->\n        <script src=\"img/socket.io.js\"></script>\n        <script type=\"application/javascript\">\n            /* Our client side code will go here */\n        </script>\n    </body>\n</html>\n```", "```js\nvar IOServer = require( 'socket.io' );\nvar io = new IOServer( server );\n```", "```js\nio.on( 'connection', function( socket ) {\n    console.log( 'New Connection' );\n});\n```", "```js\nvar socket = io.connect( 'http://localhost:8080' );\n```", "```js\nvar output = document.getElementById( 'output' );\n\nfunction logScreen( text ) {\n    var date = new Date( ).toISOString( );\n    line = date + \" \" + text + \"<br/>\";\n    output.innerHTML =  line + output.innerHTML\n}\n```", "```js\nsocket.on( 'connection', function( ){\n    logScreen( 'Connection!' );\n});\n```", "```js\nsocket.on( 'connection', function( ){\n    socket.on( 'message', function ( message ) {\n        socket.send( message );\n    });\n});\n```", "```js\nsocket.send( 'Hello' );\n```", "```js\nsocket.on( 'message', logScreen );\n```", "```js\n[~/examples/example-27]$ node index.js\nHello\n```", "```js\nsocket.on( 'connection', function( ){\n    function onTimeout( ) {\n        socket.send( 'Update' );\n    }\n    setInterval( onTimeout, 1000 );\n});\n```", "```js\nsocket.on( 'connection', function( ){\n    console.log( 'New Connection' );\n    var room = 'our room';\n    socket.join( room, function( error ) {\n        if ( error ) return console.log( error );\n\n        console.log( 'Joined room!' );\n    });\n});\n```", "```js\n[~/examples/example-27]$ node index.js\nNew Connection\nJoined room!\nNew Connection\nJoined room!\nNew Connection\nJoined room\n\n```", "```js\nsocket\n    .to( room )\n    .emit(\n        'message',\n        socket.id + ' joined the room!'\n    );\n```", "```js\nx3OwYOkOCSsa6Qt5AAAF joined the room!\nmlx-Cy1k3szq8W8tAAAE joined the room!\nConnection!\nConnecting\n```", "```js\nsocket\n    .to( room )\n    .emit(\n        'message',\n        socket.id + ' is leaving the room'\n    );\nsocket.leave( room );\n```", "```js\nleave = function( ) {\n    socket\n        .to( room )\n        .emit(\n            'message',\n            socket.id + ' is leaving the room'\n        );\n    socket.leave( room );\n};\n\nsetTimeout( leave, 2000 );\n```", "```js\n[~/examples/example-27] npm install socketio-jwt jsonwebtoken chance\n\n```", "```js\nif ( request.url === '/login' ) {\n    return generateToken( response )\n}\n```", "```js\nvar JWT = require( 'jsonwebtoken' ),\n    Chance = require( 'chance' ).Chance( );\n\nvar jwtSecret = 'Our secret';\n\nfunction generateToken( response ) {\n\n    var payload = {\n        email: Chance.email( ),\n        name: Chance.first( ) + ' ' + Chance.last( )\n    }\n\n    var token = JWT.sign( payload, jwtSecret );\n\n    response.writeHead(200, {\n        'Content-Type': 'text/plain',\n        'Content-Length': Buffer.byteLength( token )\n    })\n    response.end(token);\n}\n```", "```js\n[~]$ curl -X GET http://localhost:8080/login\neyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbW\njoiR2VuZSBGbGVtaW5nIiwiaWF0IjoxNDQxMjcyMjM0\ne1Y\n\n```", "```js\n{\n  \"email\": \"jefoconeh@ewojid.io\",\n  \"name\": \"Gene Fleming\",\n  \"iat\": 1441272234\n}\n```", "```js\nvar SocketIOJWT = require( 'socketio-jwt' );\n\nio.use( SocketIOJWT.authorize({\n    secret: jwtSecret,\n    handshake: true }));\n```", "```js\nfunction socketIO ( token ) {\n\n    var socket = io.connect( 'http://localhost:8080' );\n\n    var output = document.getElementById( 'output' );\n\n    function logScreen( text ) {\n        var date = new Date( ).toISOString( );\n        line = date + \" \" + text + \"<br/>\";\n        output.innerHTML =  line + output.innerHTML\n    }\n\n    logScreen( 'Connecting' );\n\n    socket.on( 'connect', function( ){\n        logScreen( 'Connection!' );\n        socket.send( 'Hello' );\n\n    });\n    socket.on( 'message', logScreen );\n\n}\n```", "```js\nfunction login( ) {\n{\n   var request = new XMLHttpRequest();\n    request.onreadystatechange = function() {\n\n            if (\n            request.readyState !== 4 ||\n            request.status !== 200\n            ) return\n\n           socketIO( request.responseText );\n    }\n    request.open( \"GET\", \"/login\", true );\n    request.send( null );\n}\n```", "```js\nlogin( );\n```", "```js\nvar socket = io.connect( 'http://localhost:8080', {\n    query: 'token=' + token\n});\n```", "```js\nvar payload = socket.decoded_token;\nvar name = payload.name;\n\nsocket.emit( 'message', 'Hello ' + name + '!' );\n```", "```js\nsocket\n    .to( room )\n    .emit(\n        'message',\n        name + ' joined the room!'\n    );\n```"]