["```js\nvar http = require('http');\nvar fs = require('fs');\n   var path = require('path');\n\nvar files = {};\nvar port = 9000;\nvar host = '127.0.0.1';\n\nvar assets = function(req, res) {\n  // ...\n};\n\nvar app = http.createServer(assets).listen(port, host);\nconsole.log(\"Listening on \" + host + \":\" + port);\n```", "```js\nvar sendError = function(message, code) {\n  if(code === undefined) {\n     code = 404;\n  }\n  res.writeHead(code, {'Content-Type': 'text/html'});\n  res.end(message);\n}\n```", "```js\nvar serve = function(file) {\n  var contentType;\n  switch(file.ext.toLowerCase()) {\n    case \"css\": contentType = \"text/css\"; break;\n    case \"html\": contentType = \"text/html\"; break;\n    case \"js\": contentType = \"application/javascript\"; break;\n    case \"ico\": contentType = \"image/ico\"; break;\n    case \"json\": contentType = \"application/json\"; break;\n    case \"jpg\": contentType = \"image/jpeg\"; break;\n    case \"jpeg\": contentType = \"image/jpeg\"; break;\n    case \"png\": contentType = \"image/png\"; break;\n    default: contentType = \"text/plain\";\n  }\n  res.writeHead(200, {'Content-Type': contentType});\n  res.end(file.content);\n}\n```", "```js\nvar readFile = function(filePath) {\n  if(files[filePath]) {\n        serve(files[filePath]);\n    } else {\n      fs.readFile(filePath, function(err, data) {\n        if(err) {\n          sendError('Error reading ' + filePath + '.');\n          return;\n        }\n        files[filePath] = {\n          ext: filePath.split(\".\").pop(),\n          content: data\n        };\n        serve(files[filePath]);\n      });\n    }\n}\n```", "```js\nvar http = require('http');\nvar fs = require('fs');\nvar path = require('path');\nvar files = {};\nvar port = 9000;\n\nvar assets = function(req, res) {\n  var sendError = function(message, code) { ... }\n  var serve = function(file) { ... }\n  var readFile = function(filePath) { ... }\n\n  readFile(path.normalize(__dirname + req.url));\n}\n\nvar app = http.createServer(assets).listen(port, '127.0.0.1');\nconsole.log(\"Listening on 127.0.0.1:\" + port);\n```", "```js\n{\n  \"name\": \"nodejs-by-example\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Node.js by example\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"gulp\": \"3.8.8\",\n    \"gulp-less\": \"1.3.6\",\n    \"gulp-rename\": \"~1.2.0\",\n    \"gulp-minify-css\": \"~0.3.11\"\n  }\n}\n```", "```js\nvar path = require('path');\nvar gulp = require('gulp');\nvar less = require('gulp-less');\nvar rename = require(\"gulp-rename\");\nvar minifyCSS = require('gulp-minify-css');\n\ngulp.task('css', function() {\n  gulp.src('./less/styles.less')\n  .pipe(less({\n    paths: [ path.join(__dirname, 'less', 'includes') ]\n  }))\n  .pipe(gulp.dest('./static/css'))\n  .pipe(minifyCSS({keepBreaks:true}))\n  .pipe(rename({suffix: '.min'}))\n  .pipe(gulp.dest('./static/css'));\n});\n\ngulp.task('watchers', function() {\n  gulp.watch('less/**/*.less', ['css']);\n});\n\ngulp.task('default', ['css', 'watchers']);\n```", "```js\n\"dependencies\": {\n  \"gulp\": \"3.8.8\",\n  \"gulp-less\": \"1.3.6\",\n  \"gulp-rename\": \"1.2.0\",\n  \"gulp-minify-css\": \"0.3.11\",\n  \"gulp-concat\": \"2.4.1\"\n}\n```", "```js\nvar concat = require('gulp-concat');\n\ngulp.task('js', function() {\n  gulp.src('./js/*.js')\n  .pipe(concat('scripts.js'))\n  .pipe(gulp.dest('./static/js'))\n});\n```", "```js\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\n\ngulp.task('js', function() {\n  gulp.src('./js/*.js')\n  .pipe(concat('scripts.js'))\n  .pipe(gulp.dest('./static/js'))\n  .pipe(uglify())\n  .pipe(rename({suffix: '.min'}))\n  .pipe(gulp.dest('./static/js'))\n});\n```", "```js\n<script data-main=\"scripts/main\" src=\"img/require.js\">\n</script>\n```", "```js\n// scripts/main.js\nrequire([\"modules/ajax\", \"modules/router\"], function(ajax, router) {\n    // ... our logic\n});\n```", "```js\n// modules/ajax.js\ndefine(function () {\n    // the Ajax request implementation\n    ...\n    // public API\n    return {\n        request: function() { ... }\n    }\n});\n```", "```js\nnpm install -g requirejs\n\n```", "```js\n// in code_requirejs folder\nr.js -o build.js\n```", "```js\n// build.js\n({\n    baseUrl: \".\",\n    paths: {},\n    name: \"main\",\n    out: \"main-built.js\"\n})\n```", "```js\n// main-built.js\ndefine('modules/ajax',[],function () {\n    ...\n});\n\ndefine('modules/router',[],function () {\n    ...\n});\n\nrequire(['modules/ajax', 'modules/router'], function(ajax, router) {\n    ...\n});\ndefine(\"main\", function(){});\n```", "```js\nrequire(['modules/ajax', 'modules/router'], function(ajax, router) {\n    ...\n});\n```", "```js\nvar ajax = require('modules/ajax');\nvar router = require('modules/router');\n```", "```js\nnpm install -g browserify\n\n```", "```js\n// main.js\nvar ajax = require('./modules/ajax');\nvar router = require('./modules/router');\n\n// modules/ajax.js\nmodule.exports = function() {};\n\n// modules/router.js\nmodule.exports = function() {};\n```", "```js\nbrowserify ./main.js -o main-built.js\n```", "```js\n// main-built.js\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var  a=typeof require==\"function\"&&require;if(!u&&a)return  a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module  '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var  l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var  n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return  n[o].exports}var i=typeof require==\"function\"&&require;for(var  o=0;o<r.length;o++)s(r[o]);return  s})({1:[function(require,module,exports){\nvar ajax = require('./modules/ajax');\nvar router = require('./modules/router');\n},{\"./modules/ajax\":2,\"./modules/router\":3}],2:[function(require,module,exports){\nmodule.exports = function() {};\n},{}],3:[function(require,module,exports){\nmodule.exports=require(2)\n},{\".../modules/ajax.js\":2}]},{},[1]);\n```", "```js\n\"dependencies\": {\n  \"gulp\": \"3.8.8\",\n  \"gulp-less\": \"1.3.6\",\n  \"gulp-rename\": \"1.2.0\",\n  \"gulp-minify-css\": \"0.3.11\",\n  \"gulp-concat\": \"2.4.1\",\n  \"gulp-uglify\": \"1.0.1\",\n  \"gulp-browserify\": \"0.5.0\"\n}\n```", "```js\nvar browserify = require('gulp-browserify');\nvar uglify = require('gulp-uglify');\n\ngulp.task('js', function() {\n  gulp.src('./js/app.js')\n  .pipe(browserify())\n  .pipe(gulp.dest('./static/js'))\n  .pipe(uglify())\n  .pipe(rename({suffix: '.min'}))\n  .pipe(gulp.dest('./static/js'))\n});\n```", "```js\n<script type=\"text/x-handlebars\" id=\"my-template\">\n   <p>Hello, <strong> </strong>!</p>\n</script>\n```", "```js\nvar template = document.querySelector('#my-template').innerHTML;\n```", "```js\n$.get('/templates/template.html', function(html) {\n    // ...\n});\n```", "```js\n<script type=\"text/jsx\">\n  var HelloMessage = React.createClass({\n     render: function() {\n      // Note: the following line is invalid JavaScript,\n         // and only works using React parser.\n      return <div>Hello {this.props.name}</div>;\n     }\n  });\n</script>\n```", "```js\nbody: {\n  'section.content#home': {\n    nav: [\n      { 'a[href=\"#\" class=\"link\"]': 'A' },\n      { 'a[href=\"#\" class=\"link\"]': 'B' },\n      { 'a[href=\"#\" class=\"link\"]': 'C' }\n    ]\n  },\n  footer: {\n    p: 'Text in the Footer'\n  }\n}\n```", "```js\n\"ractive\": \"0.6.1\",\n\"gulp-tap\": \"0.1.3\"\n```", "```js\nvar Ractive = require('ractive');\nvar tap = require('gulp-tap');\n\ngulp.task('templates', function() {\n  gulp.src('./tpl/**/*.html')\n  .pipe(tap(function(file, t) {\n    var precompiled = Ractive.parse(file.contents.toString());\n    precompiled = JSON.stringify(precompiled);\n    file.contents = new Buffer('module.exports = ' + precompiled);\n  }))\n  .pipe(rename(function(path) {\n    path.extname = '.js';\n  }))\n  .pipe(gulp.dest('./tpl'))\n});\n\ngulp.task('default', ['css', 'templates', 'js', 'watchers']);\n```", "```js\n<section>\n  <h1>Hello {{name}}</h1>\n</section>\n```", "```js\nmodule.exports =  {\"v\":1,\"t\":[{\"t\":7,\"e\":\"section\",\"f\":[{\"t\":7,\"e\":\"h1\",\"f\":[\"Hello \",{\"t\":2,\"r\":\"name\"}]}]}]}\n```"]