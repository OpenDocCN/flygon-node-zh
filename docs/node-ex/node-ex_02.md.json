["```js\nvar http = require('http');\nhttp.createServer(function (req, res) {\n   res.writeHead(200, {'Content-Type': 'text/plain'});\n   res.end('Hello World\\n');\n}).listen(1337, '127.0.0.1');\nconsole.log('Server running at http://127.0.0.1:1337/');\n```", "```js\nvar http = require('http');\nvar fs = require('fs');\nhttp.createServer(function (req, res) {\n   var content = '';\n   var type = '';\n   if(req.url === '/') {\n      content = fs.readFileSync('./page.html');\n      type = 'text/html';\n   } else if(req.url === '/styles.css') {\n      content = fs.readFileSync('./styles.css');\n      type = 'text/css';\n   }\n   res.writeHead(200, {'Content-Type': type});\n   res.end(content + '\\n');\n}).listen(1337, '127.0.0.1');\nconsole.log('Server running at http://127.0.0.1:1337/');\n```", "```js\nvar http = require('http');\nvar fs = require('fs');\nhttp.createServer(function (req, res) {\n   var content = '';\n   var type = '';\n   if(req.url === '/') {\n      content = fs.readFileSync('./page.html');\n      type = 'text/html';\n   } else if(req.url === '/styles.css') {\n      content = fs.readFileSync('./styles.css');\n      type = 'text/css';\n   } else if(req.url === '/api/user/new') {\n         // Do actions like\n      // reading POST parameters\n      // storing the user into the database\n      content = '{\"success\": true}';\n      type = 'application/json';\n   }\n   res.writeHead(200, {'Content-Type': type});\n   res.end(content + '\\n');\n}).listen(1337, '127.0.0.1');\nconsole.log('Server running at http://127.0.0.1:1337/');\n```", "```js\nnpm install -g grunt-cli\n\n```", "```js\nmodule.exports = function(grunt) {\n   grunt.initConfig({\n      concat: {\n         javascript: {\n            src: 'src/**/*.js',\n            dest: 'build/scripts.js'\n         }\n      }\n   });\n   grunt.loadNpmTasks('grunt-contrib-concat');\n   grunt.registerTask('default', ['concat']);\n}\n```", "```js\n{\n   \"name\": \"GruntjsTest\",\n   \"version\": \"0.0.1\",\n   \"description\": \"GruntjsTest\",\n   \"dependencies\": {},\n   \"devDependencies\": {\n      \"grunt-contrib-concat\": \"0.3.0\"\n   }\n}\n```", "```js\nmodule.exports = function(grunt) {\n   grunt.initConfig({\n      concat: {\n         javascript: {\n            src: 'src/**/*.js',\n            dest: 'build/scripts.js'\n         }\n      },\n      uglify: {\n         javascript: {\n            files: {\n               'build/scripts.min.js': '<%= concat.javascript.dest %>'\n            }\n         }\n      }\n   });\n   grunt.loadNpmTasks('grunt-contrib-concat');\n   grunt.loadNpmTasks('grunt-contrib-uglify');\n   grunt.registerTask('default', ['concat', 'uglify']);\n}\n```", "```js\nmodule.exports = function(grunt) {\n   grunt.initConfig({\n      concat: {\n         javascript: {\n            src: 'src/**/*.js',\n            dest: 'build/scripts.js'\n         }\n      },\n      uglify: {\n         javascript: {\n            files: {\n               'build/scripts.min.js': '<%= concat.javascript.dest %>'\n            }\n         }\n      },\n      watch: {\n         javascript: {\n            files: ['<%= concat.javascript.src %>'],\n            tasks: ['concat', 'uglify']\n         }\n      }\n   });\n   grunt.loadNpmTasks('grunt-contrib-concat');\n   grunt.loadNpmTasks('grunt-contrib-uglify');\n   grunt.loadNpmTasks('grunt-contrib-watch');\n   grunt.registerTask('default', ['concat', 'uglify', 'watch']);\n}\n```", "```js\nnpm install -g gulp\n\n```", "```js\nvar gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\n\ngulp.task('js', function() {\n   gulp.src('./src/**/*.js')\n   .pipe(concat('scripts.js'))\n   .pipe(gulp.dest('./build/'))\n   .pipe(rename({suffix: '.min'}))\n   .pipe(uglify())\n   .pipe(gulp.dest('./build/'))\n});\ngulp.task('watchers', function() {\n   gulp.watch('src/**/*.js', ['js']);\n});\ngulp.task('default', ['js', 'watchers']);\n```", "```js\nnpm install mocha -g\n\n```", "```js\nvar assert = require('assert');\ndescribe('Testing JSON reader', function() {\n   it('should get json', function(done) {\n      var reader = require('./JSONReader');\n      assert.equal(typeof reader, 'object');\n      assert.equal(typeof reader.read, 'function');\n      done();\n   });\n});\n```", "```js\n// JSONReader.js\nmodule.exports = {\n   read: function() {\n      // get JSON\n      return {};\n   }\n}\n```", "```js\nvar view = {\n   render: function() {\n      var html = '';\n      html += '<!DOCTYPE html>';\n      html += '<html>';\n      html += '<head><title>Node.js byexample</title></head>';\n      html += '<body>';\n      html += '<h1>Status ' + (model.status ? 'on' : 'off') + '</h1>';\n      html += '<a href=\"/on\">switch on</a><br />';\n      html += '<a href=\"/off\">switch off</a>';\n      html += '</body>';\n      html += '</html>';\n      res.writeHead(200, {'Content-Type': 'text/html'});\n      res.end(html + '\\n');\n   }\n};\n```", "```js\nvar model = {\n   status: false,\n   update: function(s) {\n      this.status = s;\n      view.render();\n   }\n};\n```", "```js\nvar http = require('http'), res;\nvar controller = function(request, response) {\n   res = response;\n   if(request.url === '/on') {\n      model.update(true);\n   } else if(request.url === '/off') {\n      model.update(false);\n   } else {\n      view.render();\n   }   \n}\nhttp.createServer(controller).listen(1337, '127.0.0.1');\nconsole.log('Server running at http://127.0.0.1:1337/');\n```", "```js\nvar http = require('http');\nvar url = require('url');\nvar controller = function(req, res) {\n   var message = '';\n   switch(req.method) {\n      case 'GET': message = \"Thats GET message\"; break;\n      case 'POST': message = \"That's POST message\"; break;\n      case 'PUT': message = \"That's PUT message\"; break;\n      case 'DELETE': message = \"That's DELETE message\"; break;\n   }\n   res.writeHead(200, {'Content-Type': 'text/html'});\n   res.end(message + '\\n');   \n}\nhttp.createServer(controller).listen(1337, '127.0.0.1');\nconsole.log('Server running at http://127.0.0.1:1337/');\n```", "```js\nvar qs = require('querystring');\nvar processRequest = function(req, callback) {\n   var body = '';\n   req.on('data', function (data) {\n      body += data;\n   });\n   req.on('end', function () {\n      callback(qs.parse(body));\n   });\n}\n```", "```js\nvar controller = function(req, res) {\n   var message = '';\n   switch(req.method) {\n      case 'GET': message = \"That's GET message\"; break;\n      case 'POST': message = \"That's POST message\"; break;\n      case 'PUT': \n         processRequest(req, function(data) {\n            message = \"That's PUT message. You are editing \" + data.book + \" book.\"; \n            res.writeHead(200, {'Content-Type': 'text/html'});\n            res.end(message + \"\\n\");   \n         });\n         return;\n      break;\n      case 'DELETE': message = \"That's DELETE message\"; break;\n   }\n   res.writeHead(200, {'Content-Type': 'text/html'});\n   res.end(message + '\\n');   \n}\n```"]