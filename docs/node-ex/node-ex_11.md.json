["```js\ndescribe('Testing database communication', function () {\n  it('should connect to the database', function(done) {\n    // the actual testing goes here\n  });\n  it('should execute a query', function(done) {\n    // the actual testing goes here\n  });\n});\n```", "```js\nexpect(10).to.be.a('number')\n```", "```js\n// package.json\n\u2026\n\"dependencies\": {\n    \"chai\": \"2.0.0\",\n    \"mocha\": \"2.1.0\",\n    ...\n}\n\u2026\n```", "```js\n<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Node.js by example</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html;  charset=utf-8\" />\n  <meta name=\"description\" content=\"Node.js by example\">\n  <meta name=\"author\" content=\"Packt\">\n  <link rel=\"stylesheet\" href=\"/static/css/styles.css\">\n</head>\n<body>\n  <div class=\"container\"></div>\n  <script src=\"img/socket.io.js\"></script>\n  <script src=\"img/ractive.js\"></script>\n  <script src=\"img/app.js\"></script>\n</body>\n</html>\n```", "```js\n<!doctype html>\n<html lang=\"en\">\n<head>\n  ...\n  <link rel=\"stylesheet\" href=\"/static/css/styles.css\">\n  <link rel=\"stylesheet\" href=\"/node_modules/mocha/mocha.css\" />\n</head>\n<body>\n  <div class=\"container\"></div>\n  <script src=\"img/socket.io.js\"></script>\n  <script src=\"img/ractive.js\"></script>\n  <script src=\"img/app.js\"></script>\n\n  <div id=\"mocha\"></div>\n  <script src=\"img/mocha.js\"></script>\n  <script src=\"img/chai.js\"></script>\n  <script>\n    mocha.ui('bdd');\n    mocha.reporter('html');\n    expect = chai.expect;\n  </script>\n  <script src=\"img/spec.js\"></script>\n  <script>\n    if (window.mochaPhantomJS) { \n      mochaPhantomJS.run();\n   }\n    else {\n     mocha.run();\n   }\n  </script>\n\n</body>\n</html>\n```", "```js\n// backend/Default.js\nvar fs = require('fs');\nvar url = require('url');\n\nvar html = fs.readFileSync(__dirname +  '/tpl/page.html').toString('utf8');\nvar htmlWithTests = fs.readFileSync(__dirname +  '/tpl/pageTest.html').toString('utf8');\n\nmodule.exports = function(req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  var urlParts = url.parse(req.url, true);\n  var parameters = urlParts.query;\n  if(typeof parameters.test !== 'undefined') {\n    res.end(htmlWithTests + '\\n');\n  } else {\n    res.end(html + '\\n');\n  }\n}\n```", "```js\n// server.js\n\u2026\nRouter\n.add('static', Assets)\n.add('node_modules', Assets)\n.add('tests', Assets)\n.add('api', API)\n.add(Default);\n```", "```js\ndescribe(\"Testing\", function () {\n  it(\"Test case\", function (done) {\n    expect(1).to.be.equal(1);\n    done();\n  });\n});\n```", "```js\nnpm install mocha-phantomjs -g\n\n```", "```js\ndescribe(\"Testing\", function () {\n\n  var trigger = function(element, event, eventGroup, keyCode) {\n    var e = window.document.createEvent(eventGroup || 'MouseEvents');\n    if(keyCode) {\n      e.keyCode = e.which = keyCode;\n    }\n    e.initEvent(event, true, true);\n    return element.dispatchEvent(e);\n  }\n\n  it(\"Registration\", function (done) {\n    // ... our test here\n  });\n\n});\n```", "```js\nvar firstName = document.querySelector('#first-name');\nfirstName.value = 'First name';\ntrigger(firstName, 'change');\n```", "```js\nvar lastName = document.querySelector('#last-name');\nlastName.value = 'Last name';\ntrigger(lastName, 'change');\n\nvar email = document.querySelector('#email');\nemail.value = 'wrong email';\ntrigger(email, 'change');\n\nvar password = document.querySelector('#password');\npassword.value = 'password';\ntrigger(password, 'change');\n```", "```js\ntrigger(document.querySelector('input[value=\"register\"]'),  'click');\n```", "```js\nmodule.exports = Ractive.extend({\n  template: require('../../tpl/register'),\n  components: {\n    navigation: require('../views/Navigation'),\n    appfooter: require('../views/Footer')\n  },\n  onrender: function() {\n    ...\n    this.on('register', function() {\n      userModel.create(function(error, result) {\n        ...\n        self.fire('form-submitted');\n      });\n    });\n  }\n});\n```", "```js\n// frontend/js/app.js\nvar showPage = function(newPage) {\n  if(currentPage) currentPage.teardown();\n  currentPage = newPage;\n  body.innerHTML = '';\n  currentPage.render(body);\n  currentPage.on('navigation.goto', function(e, route) {\n    Router.navigate(route);\n  });\n  window.currentPage = currentPage;\n  if(typeof window.onAppReady !== 'undefined') {\n    window.onAppReady();\n  }\n}\n```", "```js\n<script src=\"img/socket.io.js\"></script>\n<script src=\"img/ractive.js\"></script>\n<script src=\"img/app.js\"></script>\n<div id=\"mocha\"></div>\n<script src=\"img/mocha.js\"></script>\n<script src=\"img/chai.js\"></script>\n<script>\n  mocha.ui('bdd');\n  mocha.reporter('html');\n  expect = chai.expect;\n</script>\n<script src=\"img/spec.js\"></script>\n<script>\n  if (window.mochaPhantomJS) { mochaPhantomJS.run(); }\n  else { mocha.run(); }\n</script>\n```", "```js\n<div id=\"mocha\"></div>\n<script src=\"img/mocha.js\"></script>\n<script src=\"img/chai.js\"></script>\n<script>\n  mocha.ui('bdd');\n  mocha.reporter('html');\n  expect = chai.expect;\n</script>\n<script src=\"img/spec.js\"></script>\n<script>\n  window.onAppReady = function() {\n    if (window.mochaPhantomJS) { mochaPhantomJS.run(); }\n    else { mocha.run(); }\n  }\n</script>\n<script src=\"img/socket.io.js\"></script>\n<script src=\"img/ractive.js\"></script>\n<script src=\"img/app.js\"></script>\n```", "```js\nvar password = document.querySelector('#password');\npassword.value = 'password';\ntrigger(password, 'change');\n\nwindow.currentPage.on('form-submitted', function() {\n  var error = document.querySelector('.error');\n  expect(!!error).to.be.equal(true);\n  done();\n});\n\ntrigger(document.querySelector('input[value=\"register\"]'),  'click');\n```", "```js\nvar submitted = 0;\nwindow.currentPage.on('form-submitted', function() {\n  if(submitted === 0) {\n    submitted++;\n    var error = document.querySelector('.error');\n    expect(!!error).to.be.equal(true);\n    var email = document.querySelector('#email');\n    var validEmail = 'test' + (new Date()).getTime() +  '@test.com';\n    email.value = validEmail;\n    trigger(email, 'change');\n    trigger(document.querySelector('input[value=\"register\"]'),  'click');\n  } else {    \n    var success = document.querySelector('.success');\n    expect(!!success).to.be.equal(true);\n    done();\n  }\n});\n```", "```js\nnpm install dalek-cli -g\n\n```", "```js\n{\n  ...\n  \"dependencies\": {\n    \"dalekjs\": \"0.0.9\",\n    \"dalek-browser-chrome\": \"0.0.11\"\n    ...\n  }\n}\n```", "```js\nmodule.exports = {\n  'Testing registration': function (test) {\n    test\n    .open('http://localhost:9000/register')\n    .setValue('#first-name', 'First name')\n    .setValue('#last-name', 'Last name')\n    .setValue('#email', 'wrong email')\n    .setValue('#password', 'password')\n    .click('input[value=\"register\"]')\n    .waitForElement('.error')\n    .assert.text('.error').to.contain('Invalid or missing email')\n    .setValue('#email', 'test' + (new Date()).getTime() +  '@test.com')\n    .click('input[value=\"register\"]')\n    .waitForElement('.success')\n    .assert.text('.success').to.contain('Registration successful')\n    .done();\n  }\n};\n```"]