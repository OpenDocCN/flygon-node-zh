["```js\nvar Friends = require('../models/Friends');\n```", "```js\nvar friends = new Friends();\nfriends.fetch(function(err, result) {\n  if (err) { throw err; }\n  self.set('friends', result.friends);\n});\n```", "```js\n// frontend/tpl/home.html\n{{#if friends.length > 0}}\n<p>Tag friends:\n{{#each friends:index}}\n  <label>\n    <input type=\"checkbox\" name=\"{{taggedFriends}}\"  value=\"{{friends[index].id}}\" />\n    {{friends[index].firstName}} \n    {{friends[index].lastName}}\n  </label>\n{{/each}}\n</p>\n{{/if}}\n```", "```js\nformData.append('text', this.get('text'));\nformData.append('taggedFriends', JSON.stringify(this.get('taggedFriends')));\nmodel.create(formData, function(error, result) {\n  ...\n});\n```", "```js\nvar form = new formidable.IncomingForm();\nform.multiples = true;\nform.parse(req, function(err, formData, files) {\n  var data = {\n    text: formData.text\n  };\n  if(formData.pageId) {\n    data.pageId = formData.pageId;\n  }\n  if(formData.eventDate) {\n    data.eventDate = formData.eventDate;\n  }\n  if(formData.taggedFriends) {\n    data.taggedFriends = JSON.parse(formData.taggedFriends);\n  }\n  ...\n```", "```js\n// backend/api/content.js\nvar getFriendsProfiles = function(db, ids, callback) {\n  if(ids && ids.length > 0) {\n    var collection = db.collection('users');\n    ids.forEach(function(value, index, arr) {\n      arr[index] = ObjectId(value);\n    });\n    collection.find({ \n      _id: { $in: ids }\n    }).toArray(function(err, friends) {\n      var result = [];\n      friends.forEach(function(friend) {\n        result.push(friend.firstName + ' ' + friend.lastName);\n      });\n      callback(result);\n    });  \n  } else {\n    callback([]);\n  }\n}\n```", "```js\ngetDatabaseConnection(function(db) {\n  getCurrentUser(function(user) {\n    var collection = db.collection('content');\n    data.userId = user._id.toString();\n    data.userName = user.firstName + ' ' + user.lastName;\n    data.date = new Date();\n    processFiles(user._id, function(file) {\n      if(file) {\n        data.file = file;\n      }\n      collection.insert(data, done);\n    });\n  }, req, res);\n});\n```", "```js\n{\n  \"text\": \"What a nice day. Isn't it?\",\n  \"taggedFriends\": [\n    \"54b235be6fd75df10c278b63\",\n    \"5499ded286c27ff13a36b253\"\n  ],\n  \"userId\": \"5499ded286c27ff13a36b253\",\n  \"userName\": \"Krasimir Tsonev\",\n  \"date\": ISODate(\"2015-02-08T20:54:18.137Z\")\n}\n```", "```js\nvar numberOfPosts = result.length;\nvar friendsFetched = function() {\n  numberOfPosts -= 1;\n  if(numberOfPosts === 0) {\n    response({\n      posts: result\n    }, res);\n  }\n}\nresult.forEach(function(value, index, arr) {\n  arr[index].id = ObjectId(value._id);\n  arr[index].ownPost = user._id.toString() ===  ObjectId(arr[index].userId).toString();\n  arr[index].numberOfLikes = arr[index].likes ?  arr[index].likes.length : 0;\n  delete arr[index].userId;\n  delete arr[index]._id;\n  getFriendsProfiles(db, arr[index].taggedFriends,  function(friends) {\n    arr[index].taggedFriends = friends;\n    friendsFetched();\n  });\n});\n```", "```js\n{{#each posts:index}}\n  <div class=\"content-item\">\n    <h2>{{posts[index].userName}}</h2>\n    {{posts[index].text}}\n    {{#if posts[index].taggedFriends.length > 0}}\n      <p>\n        <small>\n          Tagged: {{posts[index].taggedFriends.join(', ')}}\n        </small>\n      </p>\n    {{/if}}\n    {{#if posts[index].file}}\n    <img src=\"img/{{posts[index].file}}\" />\n    {{/if}}\n  </div>\n{{/each}}\n```", "```js\n// backend/api/content.js\ngetCurrentUser(function(user) {\n  ...\n  getDatabaseConnection(function(db) {\n    var collection = db.collection('content');\n    collection.find({ \n      ...\n    }).toArray(function(err, result) {\n      result.forEach(function(value, index, arr) {\n        arr[index].id = ObjectId(value._id);\n        arr[index].ownPost = user._id.toString() ===  ObjectId(arr[index].userId).toString();\n        delete arr[index].userId;\n        delete arr[index]._id;\n      });\n      response({ posts: result }, res);\n    });\n  });\n}, req, res);\n```", "```js\n{{#if posts[index].taggedFriends.length > 0}}\n  <p>\n    <small>\n      Tagged: {{posts[index].taggedFriends.join(', ')}}\n    </small>\n  </p>\n{{/if}}\n{{#if !posts[index].ownPost}}\n<p><input type=\"button\" value=\"Share\"  on-click=\"share:{{posts[index].id}}\" /></p>\n{{/if}}\n```", "```js\nthis.on('share', function(e, id) {\n  var formData = new FormData();\n  formData.append('postId', id);\n  model.sharePost(formData, getPosts);\n});\n```", "```js\n// frontend/js/models/Content.js\nsharePost: function(formData, callback) {\n  var self = this;\n  ajax.request({\n    url: this.get('url') + '/share',\n    method: 'POST',\n    formData: formData,\n    json: true\n  })\n  .done(function(result) {\n    callback(null, result);\n  })\n  .fail(function(xhr) {\n    callback(JSON.parse(xhr.responseText));\n  });\n}\n```", "```js\n.add('api/content/share', require('./api/content-share'))\n```", "```js\n// backend/api/content-share.js\ncase 'POST':\n  var formidable = require('formidable');\n  var form = new formidable.IncomingForm();\n  form.parse(req, function(err, formData, files) {\n    if(!formData.postId) {\n      error('Please provide ID of a post.', res);\n    } else {\n      var done = function() {\n        response({\n          success: 'OK'\n        }, res);\n      };\n      // ...\n    }\n  });\nbreak;\n```", "```js\ngetDatabaseConnection(function(db) {\n  getCurrentUser(function(user) {\n    var collection = db.collection('content');\n    collection\n    .find({ _id: ObjectId(formData.postId) })\n    .toArray(function(err, result) {\n      if(result.length === 0) {\n        error('There is no post with that ID.', res);\n      } else {\n        var post = result[0];\n        delete post._id;\n        post.via = post.userName;\n        post.userId = user ._id.toString();\n        post.userName = user.firstName + ' ' + user.lastName;\n        post.date = new Date();\n        post.taggedFriends = [];\n        collection.insert(post, done);\n      }\n    });\n  }, req, res);\n```", "```js\nvar post = result[0];\ndelete post._id;\npost.via = post.userName;\npost.userId = user ._id.toString();\npost.userName = user.firstName + ' ' + user.lastName;\npost.date = new Date();\npost.taggedFriends = [];\ncollection.insert(post, done);\n```", "```js\n// frontend/tpl/home.html\n{{#each posts:index}}\n<div class=\"content-item\">\n  <h2>{{posts[index].userName}}</h2>\n  <p>{{posts[index].text}}</p>\n  {{#if posts[index].via}}\n  <small>via {{posts[index].via}}</small>\n  {{/if}}\n  \u2026\n```", "```js\n// frontend/tpl/home.html\n<input type=\"button\" value=\"Like\"  on-click=\"like:{{posts[index].id}}\" />\n{{#if !posts[index].ownPost}}\n<input type=\"button\" value=\"Share\"  on-click=\"share:{{posts[index].id}}\" />\n{{/if}}\n```", "```js\nusePost: function(url, formData, callback) {\n  var self = this;\n  ajax.request({\n    url: this.get('url') + '/' + url,\n    method: 'POST',\n    formData: formData,\n    json: true\n  })\n  .done(function(result) {\n    callback(null, result);\n  })\n  .fail(function(xhr) {\n    callback(JSON.parse(xhr.responseText));\n  });\n}\n```", "```js\n// controllers/Home.js\nthis.on('share', function(e, id) {\n  var formData = new FormData();\n  formData.append('postId', id);\n  model.usePost('share', formData, getPosts);\n});\nthis.on('like', function(e, id) {\n  var formData = new FormData();\n  formData.append('postId', id);\n  model.usePost('like', formData, getPosts);\n});\n```", "```js\n// backend/API.js\nadd('api/content/like', require('./api/content-like'))\n```", "```js\ngetDatabaseConnection(function(db) {\n  getCurrentUser(function(user) {\n    var collection = db.collection('content');\n    var userName = user.firstName + ' ' + user.lastName;\n    collection.update(\n      {\n        $and: [\n          { _id: ObjectId(formData.postId) },\n          { \"likes.user\": { $nin: [userName] } }\n        ]\n      },\n      { \n        $push: { \n          likes: { user: userName }\n        }\n      },\n      {w:1}, \n      function(err) {\n        done();\n      }\n    );\n  }, req, res);\n});\n```", "```js\n// backend/api/content.js\nresult.forEach(function(value, index, arr) {\n  arr[index].id = ObjectId(value._id);\n  arr[index].ownPost = user._id.toString() ===  ObjectId(arr[index].userId).toString();\n  arr[index].numberOfLikes = arr[index].likes ?  arr[index].likes.length : 0;\n  delete arr[index].userId;\n  delete arr[index]._id;\n});\n```", "```js\n<input type=\"button\" value=\"Like ({{posts[index].numberOfLikes}})\" on-click=\"like:{{posts[index].id}}\" />\n```"]