["```js\nvar app = http.createServer(assets).listen(port, '127.0.0.1');\n```", "```js\n// backend/Assets.js\nmodule.exports = function(req, res) {\n...\n}\n\n// server.js\nvar Assets = require('./backend/Assets');\n```", "```js\n// backend/API.js\nmodule.exports = function(req, res) {\n  res.writeHead(200, {'Content-Type': 'application/json'});\n  res.end('{}' + '\\n');\n}\n```", "```js\n// backend/Default.js\nvar fs = require('fs');\nvar html = fs.readFileSync(__dirname + '/tpl/page.html').toString('utf8');\nmodule.exports = function(req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.end(html + '\\n');\n}\n```", "```js\n<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Node.js by example</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html;  charset=utf-8\" />\n  <meta name=\"description\" content=\"Node.js by examples\">\n  <meta name=\"author\" content=\"Packt\">\n  <link rel=\"stylesheet\" href=\"/static/css/styles.css\">\n</head>\n<body>\n  <script src=\"img/ractive.js\"></script>\n  <script src=\"img/app.js\"></script>\n</body>\n</html>\n```", "```js\n// frontend/js/lib/Router.js\nmodule.exports = function() {\n  return {\n    routes: [],\n    add: function(path, handler) {\n      // ...\n    },\n    check: function(fragment, params) {\n      // ...\n    }\n  }\n};\n```", "```js\nadd: function(path, handler) {\n  if(typeof path === 'function') {\n    handler = path;\n    path = '';\n  }\n  this.routes.push({\n    path: path,\n    handler: handler\n  });\n  return this;\n}\n```", "```js\ncheck: function(f, params) {\n  var fragment, vars;\n  if(typeof f !== 'undefined') {\n    fragment = f.replace(/^\\//, '');\n  } else {\n    fragment = this.getFragment(); \n  }\n  for(var i=0; i<this.routes.length; i++) {\n    var match, path = this.routes[i].path;\n    path = path.replace(/^\\//, '');\n    vars = path.match(/:[^\\s/]+/g);\n    var r = new RegExp('^' + path.replace(/:[^\\s/]+/g,  '([\\\\w-]+)'));\n    match = fragment.match(r);\n    if(match) {\n      match.shift();\n      var matchObj = {};\n      if(vars) {\n        for(var j=0; j<vars.length; j++) {\n          var v = vars[j];\n          matchObj[v.substr(1, v.length)] = match[j];\n        }\n      }\n      this.routes[i].handler.apply({},  (params || []).concat([matchObj]));\n      return this;\n    }\n  }\n  return false;\n}\n```", "```js\ngetFragment: function() {\n  var fragment = '';\n  fragment = this.clearSlashes(decodeURI(window.location.pathname  + location.search));\n  fragment = fragment.replace(/\\?(.*)$/, '');\n  fragment = this.root !== '/' ? fragment.replace(this.root, '') : fragment;\n  return this.clearSlashes(fragment);\n}\n```", "```js\nclearSlashes: function(path) {\n  return path.toString().replace(/\\/$/, '').replace(/^\\//, '');\n}\n```", "```js\nlisten: function() {\n  var self = this;\n  var current = self.getFragment();\n  var fn = function() {\n    if(current !== self.getFragment()) {\n      current = self.getFragment();\n      self.check(current);\n    }\n  }\n  clearInterval(this.interval);\n  this.interval = setInterval(fn, 50);\n  return this;\n}\n```", "```js\nnavigate: function(path) {\n  path = path ? path : '';\n  history.pushState(null, null, this.root + this.clearSlashes(path));\n  return this;\n}\n```", "```js\nvar Component = Ractive.extend({\n  template: '<div><h1>{{title}}</h1></div>',\n  data: {\n    title: 'Hello world'\n  }\n});\nvar instance = new Component();\ninstance.render(document.'body);\n```", "```js\nvar SubComponent = Ractive.extend({\n    template: '<small>Hello there!</small>'\n});\nvar Component = Ractive.extend({\n  template: '\\\n    <div>\\\n        <h1>{{title}}</h1>\\\n        <my-subcomponent />\\\n    </div>\\\n  ',\n  data: {\n    title: 'Hello world'\n  },\n  components: {\n    'my-subcomponent': SubComponent\n  }\n});\nvar instance = new Component();\ninstance.render(document.querySelector('body'));\n```", "```js\n<div>\n  <h1>Hello world</h1>\n  <small>Hello there!</small>\n</div>\n```", "```js\nvar Component = Ractive.extend({\n  template: '<div><h1>{{title}}</h1></div>',\n  notifyTheOutsideWorld: function() {\n    this.fire('custom-event');\n  }\n});\nvar instance = new Component();\ninstance.on('custom-event', function() {\n  this.set('title', 'Hey!');\n  instance.render(document.querySelector('body'));\n});\ninstance.notifyTheOutsideWorld();\n```", "```js\nvar Component = Ractive.extend({\n  template: '<div><h1>{{title}}</h1></div>'\n});\nvar instance = new Component();\ninstance.observe('title', function(value) {\n    alert(value);\n});\ninstance.set('title', 'Hello!');\n```", "```js\n// frontend/js/app.js\nvar Router = require('./lib/Router')();\nvar Home = require('./controllers/Home');\nvar currentPage;\nvar body;\n\nvar showPage = function(newPage) {\n  if(currentPage) { currentPage.teardown(); }\n  currentPage = newPage;\n  body.innerHTML = '';\n  currentPage.render(body);\n}\n\nwindow.onload = function() {\n\n  body = document.querySelector('body');\n\n  Router\n  .add('home', function() {\n    var p = new Home();\n    showPage(p);\n  })\n  .add(function() {\n    Router.navigate('home');\n  })\n  .listen()\n  .check();\n\n}\n```", "```js\nmodule.exports = Ractive.extend({\n  template: require('../../tpl/home'),\n  components: {\n    navigation: require('../views/Navigation'),\n    appfooter: require('../views/Footer')\n  },\n  onrender: function() {\n    console.log('Home page rendered');\n  }\n});\n```", "```js\n// gulpfile.js\ngulp.task('templates', function() {\n  gulp.src('./frontend/tpl/**/*.html')\n  .pipe(tap(function(file, t) {\n    var precompiled = Ractive.parse(file.contents.toString());\n    precompiled = JSON.stringify(precompiled);\n    file.contents = new Buffer('module.exports = ' + precompiled);\n  }))\n  .pipe(rename(function(path) {\n    path.extname = '.js';\n  }))\n  .pipe(gulp.dest('./frontend/tpl'))\n});\n```", "```js\n// frontend/tpl/home.html\n<header>\n  <navigation />\n  <div class=\"hero\">\n    <h1>Node.js by example</h1>\n  </div>\n</header>\n<appfooter />\n```", "```js\nmodule.exports =  {\"v\":1,\"t\":[{\"t\":7,\"e\":\"footer\",\"f\":[\"Version:  \",{\"t\":2,\"r\":\"version\"}]}]}\n```", "```js\n// views/navigation.js\nmodule.exports = Ractive.extend({\n  template: require('../../tpl/navigation')\n});\n```", "```js\nvar FooterModel = require('../models/Version');\n\nmodule.exports = Ractive.extend({\n  template: require('../../tpl/footer'),\n  onrender: function() {\n    var model = new FooterModel();\n    model.bindComponent(this).fetch();\n  }\n});\n```", "```js\n<footer>\n  Version: {{version}}\n</footer>\n```", "```js\nvar Base = require('./Base');\nmodule.exports = Base.extend({\n  data: {\n    url: '/api/version'\n  }\n});\n```", "```js\nvar ajax = require('../lib/Ajax');\nmodule.exports = Ractive.extend({\n  data: {\n    value: null,\n    url: ''\n  },\n  fetch: function() {\n    var self = this;\n    ajax.request({\n      url: self.get('url'),\n      json: true\n    })\n    .done(function(result) {\n      self.set('value', result);\n    })\n    .fail(function(xhr) {\n      self.fire('Error fetching ' + self.get('url'))\n    });\n    return this;\n  },\n  bindComponent: function(component) {\n    if(component) {\n      this.observe('value', function(v) {\n        for(var key in v) {\n         component.set(key, v[key]);\n           }\n      }, { init: false });\n    }\n    return this;\n  }\n});\n```", "```js\nvar response = function(result, res) {\n  res.writeHead(200, {'Content-Type': 'application/json'});\n  res.end(JSON.stringify(result) + '\\n');\n}\nvar Router = require('../frontend/js/lib/router')();\nRouter\n.add('api/version', function(req, res) {\n  response({\n    version: '0.1'\n  }, res);\n})\n.add(function(req, res) {\n  response({\n    success: true\n  }, res);\n});\n\nmodule.exports = function(req, res) {\n  Router.check(req.url, [req, res]);\n}\n```", "```js\nbindComponent: function(component) {\n  if(component) {\n    this.observe('value', function(v) {\n      for(var key in v) component.set(key, v[key]);\n    }, { init: false });\n  }\n  return this;\n}\n```"]