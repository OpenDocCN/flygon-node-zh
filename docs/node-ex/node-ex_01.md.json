["```js\nsudo apt-get update\nsudo apt-get install nodejs\nsudo apt-get install npm\n\n```", "```js\nvar http = require('http');\nhttp.createServer(function (req, res) {\n   res.writeHead(200, {'Content-Type': 'text/plain'});\n   res.end('Hello World\\n');\n}).listen(9000, '127.0.0.1');\nconsole.log('Server running at http://127.0.0.1:9000/');\n```", "```js\n// book.js\nexports.name = 'Node.js by example';\nexports.read = function() {\n   console.log('I am reading ' + exports.name);\n}\n```", "```js\n// script.js\nvar book = require('./book.js');\nconsole.log('Name: ' + book.name);\nbook.read();\n```", "```js\nvar module = { exports: {} };\nvar exports = module.exports;\n// our code\nreturn module.exports;\n```", "```js\nexports.name = 'Node.js by example';\nexports.read = function() {\n   console.log('Iam reading ' + exports.name);\n}\nmodule.exports = function() {  ... }\n```", "```js\n// book.js\nvar ratePoints = 0;\nexports.rate = function(points) {\n   ratePoints = points;\n}\nexports.getPoints = function() {\n   return ratePoints;\n}\n```", "```js\n// script.js\nvar bookA = require('./book.js');\nvar bookB = require('./book.js');\nbookA.rate(10);\nbookB.rate(20);\nconsole.log(bookA.getPoints(), bookB.getPoints());\n```", "```js\n// book.js\nmodule.exports = function() {\n   var ratePoints = 0;\n   return {\n      rate: function(points) {\n         ratePoints = points;\n      },\n      getPoints: function() {\n         return ratePoints;\n      }\n   }\n}\n```", "```js\n{\n   \"name\": \"my-awesome-nodejs-module\",\n   \"version\": \"0.0.1\"\n}\n```", "```js\n// index.js\nconsole.log('Hello, this is my awesome Node.js module!');\n```", "```js\n    npm install my-awesome-nodejs-module\n\n    ```", "```js\n    npm install my-awesome-nodejs-module -g\n\n    ```", "```js\n    {\n        \"name\": \"another-module\", \n        \"version\": \"0.0.1\", \n        \"dependencies\": {\n            \"my-awesome-nodejs-module\": \"0.0.1\"   \n        }\n    }\n    ```", "```js\n{\n   \"name\": \"my-awesome-nodejs-module\",\n   \"version\": \"0.0.2\",\n   \"bin\": \"index.js\"\n}\n```", "```js\nvar http = require('http');\nhttp.createServer(function (req, res) {\n   res.writeHead(200, {'Content-Type': 'text/plain'});\n   res.end('Hello World\\n');\n}).listen(9000, '127.0.0.1');\nconsole.log('Server running at http://127.0.0.1:9000/');\n```", "```js\nvar fs = require('fs');\nfs.writeFile('data.txt', 'Hello world!', function (err) {\n   if(err) { throw err; }\n   console.log('It is saved!');\n});\n```", "```js\nfs.writeFileSync('data.txt', 'Hello world!');\n```", "```js\nfs.readFile('data.txt', function(err, data) {\n   if (err) throw err;\n   console.log(data.toString());\n});\n```", "```js\nvar events = require('events');\nvar eventEmitter = new events.EventEmitter();\nvar somethingHappen = function() {\n   console.log('Something happen!');\n}\neventEmitter\n.on('something-happen', somethingHappen)\n.emit('something-happen');\n```", "```js\n// book.js\nvar util = require(\"util\");\nvar events = require(\"events\");\nvar Class = function() { };\nutil.inherits(Class, events.EventEmitter);\nClass.prototype.ratePoints = 0;\nClass.prototype.rate = function(points) {\n   ratePoints = points;\n   this.emit('rated');\n};\nClass.prototype.getPoints = function() {\n   return ratePoints;\n}\nmodule.exports = Class;\n```", "```js\nvar BookClass = require('./book.js');\nvar book = new BookClass();\nbook.on('rated', function() {\n   console.log('Rated with ' + book.getPoints());\n});\nbook.rate(10);\n```", "```js\n// exec.js\nvar exec = require('child_process').exec;\nexec('ls -l', function(error, stdout, stderr) {\n    console.log('stdout: ' + stdout);\n    console.log('stderr: ' + stderr);\n    if (error !== null) {\n        console.log('exec error: ' + error);\n    }\n});\n```", "```js\nvar spawn = require('child_process').spawn;\nvar command = spawn('git', ['push', 'origin', 'master']);\ncommand.stdout.on('data', function (data) {\n   console.log('stdout: ' + data);\n});\ncommand.stderr.on('data', function (data) {\n   console.log('stderr: ' + data);\n});\ncommand.on('close', function (code) {\n   console.log('child process exited with code ' + code);\n});\n```"]