["```js\n    node -v\n\n    ```", "```js\n    npm -v\n\n    ```", "```js\nnpm install -g yo\n\n```", "```js\nnpm install -g express\n\n```", "```js\nexpress -h\n\n```", "```js\nUsage: express [options] [dir]\n Options:\n -h, --help          output usage information\n -V, --version       output the version number\n -e, --ejs           add ejs engine support (defaults to jade)\n --hbs           add handlebars engine support\n -H, --hogan         add hogan.js engine support\n -c, --css <engine>  add stylesheet <engine> support\n                   (less|stylus|compass|sass) (defaults to plain css)\n --git           add .gitignore\n -f, --force         force on non-empty directory\n\n```", "```js\nexpress --ejs --css sass -git\n\n```", "```js\n create :\n create : ./package.json\n create : ./app.js\n create : ./.gitignore\n create : ./public\n create : ./public/javascripts\n create : ./public/images\n create : ./public/stylesheets\n create : ./public/stylesheets/style.sass\n create : ./routes\n create : ./routes/index.js\n create : ./routes/users.js\n create : ./views\n create : ./views/index.ejs\n create : ./views/error.ejs\n create : ./bin\n create : ./bin/www\n install dependencies:\n $ cd . && npm install\n run the app:\n $ DEBUG=chapter-01:* npm start\n\n```", "```js\n{ \n    \"name\": \"chapter-01\", \n    \"description\": \"Build a Twitter Like app using the MVC design pattern\", \n    \"license\": \"MIT\", \n    \"author\": { \n        \"name\": \"Fernando Monteiro\", \n        \"url\": \"https://github.com/newaeonweb/node-6-blueprints\" \n    }, \n    \"repository\": { \n        \"type\": \"git\", \n        \"url\": \"https://github.com/newaeonweb/node-6-blueprints.git\" \n    }, \n    \"keywords\": [ \n        \"MVC\", \n        \"Express Application\", \n        \"Expressjs\" \n    ], \n    \"version\": \"0.0.1\", \n    \"private\": true, \n    \"scripts\": { \n        \"start\": \"node ./bin/www\" \n    }, \n    \"dependencies\": { \n        \"body-parser\": \"~1.13.2\", \n        \"cookie-parser\": \"~1.3.5\", \n        \"debug\": \"~2.2.0\", \n        \"ejs\": \"~2.3.3\", \n        \"express\": \"~4.13.1\", \n        \"morgan\": \"~1.6.1\", \n        \"node-sass-middleware\": \"0.8.0\", \n        \"serve-favicon\": \"~2.3.0\" \n    } \n} \n\n```", "```js\nnpm install\n\n```", "```js\nDEBUG=chapter-01:* npm start\n\n```", "```js\nchapter-01:server Listening on port 3000 +0ms\n\n```", "```js\n... \nvar routes = require('./server/routes/index'); \nvar users = require('./server/routes/users'); \n\nvar app = express(); \n\n// view engine setup \napp.set('views', path.join(__dirname, 'server/views')); \napp.set('view engine', 'ejs'); \n... \n\n```", "```js\n/* GET home page. */ \nrouter.get('/', function(req, res, next) { \n    res.render('index', { title: 'Express from server folder' }); \n}); \n\n```", "```js\n    DEBUG=chapter-01:* npm start\n\n    ```", "```js\n          // catch 404 and forward to error handler \n          app.use(function(req, res, next) { \n             var err = new Error('Not Found'); \n              err.status = 404; \n              next(err); \n          }); \n\n    ```", "```js\n          app.set('port', process.env.PORT || 3000); \n          var server = app.listen(app.get('port'), function() { \n              console.log('Express server listening on port ' + \n              serer.address().port); \n          }); \n\n    ```", "```js\n          ... \n          \"scripts\": { \n             \"start\": \"node app.js\" \n          }, \n          ... \n\n    ```", "```js\n     npm start \n\n    ```", "```js\n     > node app.js \n    Express server listening on port 3000!\n\n    ```", "```js\n          <!-- CSS Files --> \n          <link rel='stylesheet' href='https://cdnjs.cloudflare.com/\n           ajax/libs/twitter-bootstrap/4.0.0-alpha/css/bootstrap.min.css'>\n          <link rel='stylesheet' href='/stylesheets/style.css' />\n    ```", "```js\n          <!-- JS Scripts -->\n          <script src='https://cdnjs.cloudflare.com/ajax/libs\n            /jquery/2.2.1/jquery.min.js'></script>\n          <script src='https://cdnjs.cloudflare.com/ajax/libs/\n           twitter-bootstrap/4.0.0-alpha/js/bootstrap.min.js'></script>\n          </body>\n          </html>\n    ```", "```js\n          <!-- Fixed navbar --> \n          <div class=\"pos-f-t\"> \n              <div class=\"collapse\" id=\"navbar-header\"> \n                  <div class=\"container bg-inverse p-a-1\"> \n                     <h3>Collapsed content</h3> \n                      <p>Toggle able via the navbar brand.</p> \n                  </div> \n              </div> \n              <nav class=\"navbar navbar-light navbar-static-top\"> \n                   <div class=\"container\"> \n                      <button class=\"navbar-toggler hidden-sm-up\" type=\n                        \"button\"data-toggle=\"collapse\" data-target=\n                          \"#exCollapsingNavbar2\"> \n                          Menu \n                      </button> \n                     <div class=\"collapse navbar-toggleable-xs\"\n                       id=\"exCollapsingNavbar2\"> \n                          <a class=\"navbar-brand\" href=\"/\">MVC App</a> \n                          <ul class=\"nav navbar-nav navbar-right\"> \n                              <li class=\"nav-item\"> \n                                  <a class=\"nav-link\" href=\"/login\">\n                                    Sign in\n                                  </a>\n                              </li> \n                              <li class=\"nav-item\"> \n                                  <a class=\"nav-link\" href=\"/signup\">\n                                    Sign up\n                                  </a> \n                               </li> \n                               <li class=\"nav-item\"> \n                                  <a class=\"nav-link\" href=\"/profile\">\n                                     Profile</a> \n                               </li> \n\n                              <li class=\"nav-item\"> \n                                  <a class=\"nav-link\" href=\"/comments\">\n                                    Comments</a> \n                              </li> \n                          </ul> \n                      </div> \n                  </div> \n              </nav> \n          </div> \n          <!-- Fixed navbar --> \n\n    ```", "```js\n          <footer class=\"footer\"> \n              <div class=\"container\"> \n                  <span>&copy 2016\\. Node-Express-MVC-App</span> \n              </div> \n          </footer> \n\n    ```", "```js\n          // view engine setup \n          app.set('views', path.join(__dirname, 'server/views/pages')); \n          app.set('view engine', 'ejs'); \n\n    ```", "```js\n          <!DOCTYPE html>\n          <html>\n          <head>\n            <title><%= title %></title>\n             <% include ../partials/stylesheet %>\n          </head> \n          <body>\n              <% include ../partials/header %>\n              <div class=\"container\">\n                <div class=\"page-header m-t-1\">\n                  <h1><%= title %></h1>\n                </div> \n                <p class=\"lead\">Welcome to <%= title %></p>\n              </div>\n              <% include ../partials/footer %>\n              <% include ../partials/javascript %>\n           </body>\n           </html>\n    ```", "```js\n          <!DOCTYPE html> \n          <html> \n          <head> \n               <title>Wohp's Error</title> \n               <% include ../partials/stylesheet %> \n          </head> \n          <body> \n               <% include ../partials/header %> \n\n              <div class=\"container\"> \n                  <div class=\"page-header m-t-1\"> \n                      <h1>Sorry: <%= message %></h1> \n                      <h2><%= error.status %></h2> \n                      <pre><%= error.stack %></pre> \n                  </div> \n\n              </div> \n               <% include ../partials/footer %> \n               <% include ../partials/javascript %> \n          </body> \n          </html> \n\n    ```", "```js\n          <!DOCTYPE html> \n          <html> \n          <head> \n              <title><%= title %></title> \n              <% include ../partials/stylesheet %> \n          </head> \n          <body> \n            <% include ../partials/header %> \n\n            <div class=\"container\"> \n                <% if (message.length > 0) { %> \n                    <div class=\"alert alert-warning alert-dismissible\n                       fade in\" role=\"alert\"> \n                      <button type=\"button\" class=\"close\" data-dismiss=\n                         \"alert\" aria-label=\"Close\"> \n                        <span aria-hidden=\"true\">&times;</span> \n                      </button> \n                      <strong>Ohps!</strong> <%= message %>. \n                    </div> \n                 <% } %> \n                <form class=\"form-signin\" action=\"/login\" method=\"post\"> \n                <h2 class=\"form-signin-heading\">Welcome sign in</h2> \n                <label for=\"inputEmail\" class=\"sr-only\">Email address</label> \n                <input type=\"email\" id=\"email\" name=\"email\" class=\"form-\n                  control\" placeholder=\"Email address\" required=\"\"> \n                <label for=\"inputPassword\" class=\"sr-only\">Password</label> \n                <input type=\"password\" id=\"password\" name=\"password\"\n                 class=\"form-control\" placeholder=\"Password\" required=\"\"> \n                <button class=\"btn btn-lg btn-primary btn-block\" \n                   type=\"submit\">Sign in</button> \n                <br> \n                <p>Don't have an account? <a href=\"/signup\">Signup</a> \n                   ,it's free.</p> \n              </form> \n            </div> \n\n            <% include ../partials/footer %> \n            <% include ../partials/javascript %> \n          </body> \n          </html> \n\n    ```", "```js\n          /* GET login page. */ \n          router.get('/login', function(req, res, next) { \n              res.render('login', { title: 'Login Page', message:\n               req.flash('loginMessage') }); \n           }); \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 <!DOCTYPE html>\n    \u00a0\u00a0\u00a0\u00a0\u00a0 <html>\n    \u00a0\u00a0\u00a0\u00a0\u00a0 <head>\n    \u00a0\u00a0\u00a0  \u00a0\u00a0 <title><%= title %></title>\n    \u00a0\u00a0\u00a0\u00a0\u00a0   <% include ../partials/stylesheet %>\n    \u00a0\u00a0\u00a0\u00a0\u00a0 </head>\n    \u00a0\u00a0\u00a0\u00a0\u00a0 <body>\n    \u00a0\u00a0\u00a0\u00a0\u00a0   <% include ../partials/header %>\n    \u00a0\u00a0\u00a0\u00a0\u00a0   <div class=\"container\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0     <% if (message.length > 0) { %>\n    \u00a0\u00a0\u00a0\u00a0\u00a0        <div class=\"alert alert-warning\" role=\"alert\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0          <strong>Warning!</strong> <%= message %>.\n    \u00a0\u00a0\u00a0\u00a0\u00a0        </div>\n    \u00a0\u00a0\u00a0\u00a0\u00a0      <% } %>\n         \u00a0\u00a0\u00a0\u00a0\u00a0 <form class=\"form-signin\" action=\"/signup\" method=\"post\">\n           \u00a0\u00a0\u00a0\u00a0\u00a0 <h2 class=\"form-signin-heading\">Please signup</h2>\n           \u00a0\u00a0\u00a0\u00a0\u00a0 <label for=\"inputName\" class=\"sr-only\">Name address</label>\n           \u00a0\u00a0\u00a0\u00a0\u00a0 <input type=\"text\" id=\"name\" name=\"name\" class=\"form-control\"\n                  placeholder=\"Name\" required=\"\">\n             \u00a0\u00a0\u00a0 <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n           \u00a0\u00a0\u00a0\u00a0\u00a0 <input type=\"email\" id=\"email\" name=\"email\" class=\n                   \"form-control\" placeholder=\"Email address\" required=\"\">\n           \u00a0\u00a0\u00a0\u00a0\u00a0 <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n           \u00a0\u00a0\u00a0\u00a0\u00a0 <input type=\"password\" id=\"password\" name=\"password\" \n                   class=\"form-control\" placeholder=\"Password\" required=\"\">\n           \u00a0\u00a0\u00a0\u00a0\u00a0 <button class=\"btn btn-lg btn-primary btn-block\" \n                   type=\"submit\">Sign in</button> \n                  <br> \n            \u00a0\u00a0\u00a0\u00a0\u00a0 <p>Don't have an account? <a href=\"/signup\">Signup</a>\n                      ,it's free.</p>\n          \u00a0\u00a0\u00a0\u00a0\u00a0 </form>\n        \u00a0\u00a0\u00a0\u00a0\u00a0 </div>\n         \u00a0\u00a0\u00a0\u00a0 <% include ../partials/footer %>\n        \u00a0\u00a0\u00a0\u00a0\u00a0 <% include ../partials/javascript %>\n      \u00a0\u00a0\u00a0\u00a0\u00a0 </body>\n      \u00a0\u00a0\u00a0\u00a0\u00a0 </html>\n    ```", "```js\n          /* GET Signup */ \n          router.get('/signup', function(req, res) { \n              res.render('signup', { title: 'Signup Page', \n                 message:req.flash('signupMessage') }); \n          }); \n\n    ```", "```js\n          <!DOCTYPE html> \n          <html> \n          <head> \n              <title><%= title %></title> \n              <% include ../partials/stylesheet %> \n          </head> \n          <body> \n     \u00a0\u00a0\u00a0\u00a0     <% include ../partials/header %> \n     \u00a0\u00a0\u00a0\u00a0     <div class=\"container\"> \n      \u00a0\u00a0\u00a0\u00a0      <h1><%= title %></h1> \n      \u00a0\u00a0\u00a0\u00a0      <div class=\"datails\"> \n     \u00a0\u00a0\u00a0\u00a0         <div class=\"card text-xs-center\"> \n     \u00a0\u00a0\u00a0\u00a0             <br> \n                    <img class=\"card-img-top\" src=\"img/<%= avatar %>\" \n                      alt=\"Card image cap\"> \n                      <div class=\"card-block\"> \n                        <h4 class=\"card-title\">User Details</h4> \n                        <p class=\"card-text\"> \n                            <strong>Name</strong>: <%= user.local.name %><br> \n                            <strong>Email</strong>: <%= user.local.email %> \n                        </p> \n                        <a href=\"/logout\" class=\"btn btn-default\">Logout</a> \n                      </div> \n                  </div> \n                </div> \n             </div> \n            <% include ../partials/footer %> \n            <% include ../partials/javascript %> \n     \u00a0\u00a0\u00a0\u00a0 </body> \n     \u00a0\u00a0\u00a0\u00a0 </html> \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 /* GET Profile page. */ \n     \u00a0\u00a0\u00a0\u00a0 router.get('/profile',  function(req, res, next) {\n     \u00a0\u00a0\u00a0\u00a0     res.render('profile', { title: 'Profile Page', user : req.user,\n              avatar: gravatar.url(req.user.email ,  {s: '100', r: 'x', d:\n               'retro'}, true) });\n     \u00a0\u00a0\u00a0\u00a0 }); \n\n    ```", "```js\nnpm install connect-flash connect-mongo express-session gravatar\n      passport passport-local -save\n\n```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 // ODM With Mongoose \n     \u00a0\u00a0\u00a0\u00a0 var mongoose = require('mongoose'); \n     \u00a0\u00a0\u00a0\u00a0 // Modules to store session \n     \u00a0\u00a0\u00a0\u00a0 var session    = require('express-session'); \n     \u00a0\u00a0\u00a0\u00a0 var MongoStore = require('connect-mongo')(session); \n     \u00a0\u00a0\u00a0\u00a0 // Import Passport and Warning flash modules \n     \u00a0\u00a0\u00a0\u00a0 var passport = require('passport'); \n     \u00a0\u00a0\u00a0\u00a0 var flash = require('connect-flash'); \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 // Database configuration \n     \u00a0\u00a0\u00a0\u00a0 var config = require('./server/config/config.js'); \n     \u00a0\u00a0\u00a0\u00a0 // connect to our database \n     \u00a0\u00a0\u00a0\u00a0 mongoose.connect(config.url); \n     \u00a0\u00a0\u00a0\u00a0 // Check if MongoDB is running \n     \u00a0\u00a0\u00a0\u00a0 mongoose.connection.on('error', function() {\n            console.error('MongoDB Connection Error. Make sure MongoDB is\n             running.'); \n     \u00a0\u00a0\u00a0\u00a0 }); \n\n     \u00a0\u00a0\u00a0\u00a0 // Passport configuration \n     \u00a0\u00a0\u00a0\u00a0 require('./server/config/passport')(passport); \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 // required for passport \n     \u00a0\u00a0\u00a0\u00a0 // secret for session \n     \u00a0\u00a0\u00a0\u00a0 app.use(session({ \n     \u00a0\u00a0\u00a0\u00a0     secret: 'sometextgohere', \n     \u00a0\u00a0\u00a0\u00a0     saveUninitialized: true, \n     \u00a0\u00a0\u00a0\u00a0     resave: true, \n     \u00a0\u00a0\u00a0\u00a0     //store session on MongoDB using express-session +\n              connect mongo \n     \u00a0\u00a0\u00a0\u00a0     store: new MongoStore({ \n     \u00a0\u00a0\u00a0\u00a0         url: config.url, \n     \u00a0\u00a0\u00a0\u00a0         collection : 'sessions' \n     \u00a0\u00a0\u00a0\u00a0     }) \n     \u00a0\u00a0\u00a0\u00a0 })); \n\n     \u00a0\u00a0\u00a0\u00a0 // Init passport authentication \n     \u00a0\u00a0\u00a0\u00a0 app.use(passport.initialize()); \n     \u00a0\u00a0\u00a0\u00a0 // persistent login sessions \n     \u00a0\u00a0\u00a0\u00a0 app.use(passport.session()); \n     \u00a0\u00a0\u00a0\u00a0 // flash messages \n     \u00a0\u00a0\u00a0\u00a0 app.use(flash()); \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 // Database URL \n     \u00a0\u00a0\u00a0\u00a0 module.exports = { \n     \u00a0\u00a0\u00a0\u00a0     // Connect with MongoDB on local machine \n     \u00a0\u00a0\u00a0\u00a0     'url' : 'mongodb://localhost/mvc-app' \n     \u00a0\u00a0\u00a0\u00a0 }; \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 // load passport module \n     \u00a0\u00a0\u00a0\u00a0 var LocalStrategy    = require('passport-local').Strategy; \n     \u00a0\u00a0\u00a0\u00a0 // load up the user model \n     \u00a0\u00a0\u00a0\u00a0 var User = require('../models/users'); \n\n     \u00a0\u00a0\u00a0\u00a0 module.exports = function(passport) { \n     \u00a0\u00a0\u00a0\u00a0     // passport init setup \n     \u00a0\u00a0\u00a0\u00a0     // serialize the user for the session \n     \u00a0\u00a0\u00a0\u00a0     passport.serializeUser(function(user, done) { \n     \u00a0\u00a0\u00a0\u00a0         done(null, user.id); \n     \u00a0\u00a0\u00a0\u00a0     }); \n     \u00a0\u00a0\u00a0\u00a0     // \u00a0\u00a0\u00a0\u00a0  deserialize the user \n     \u00a0\u00a0\u00a0\u00a0     passport.deserializeUser(function(id, done) { \n     \u00a0\u00a0\u00a0\u00a0         User.findById(id, function(err, user) { \n     \u00a0\u00a0\u00a0\u00a0             done(err, user); \n     \u00a0\u00a0\u00a0\u00a0         }); \n     \u00a0\u00a0\u00a0\u00a0     }); \n     \u00a0\u00a0\u00a0\u00a0     // using local strategy \n     \u00a0\u00a0\u00a0\u00a0     passport.use('local-login', new LocalStrategy({ \n     \u00a0\u00a0\u00a0\u00a0         // change default username and password, to email \n                  //and password \n     \u00a0\u00a0\u00a0\u00a0         usernameField : 'email', \n     \u00a0\u00a0\u00a0\u00a0         passwordField : 'password', \n     \u00a0\u00a0\u00a0\u00a0         passReqToCallback : true \n     \u00a0\u00a0\u00a0\u00a0     }, \n     \u00a0\u00a0\u00a0\u00a0     function(req, email, password, done) { \n     \u00a0\u00a0\u00a0\u00a0         if (email) \n     \u00a0\u00a0\u00a0\u00a0         // format to lower-case \n     \u00a0\u00a0\u00a0\u00a0         email = email.toLowerCase(); \n     \u00a0\u00a0\u00a0\u00a0         // process asynchronous \n     \u00a0\u00a0\u00a0\u00a0         process.nextTick(function() { \n     \u00a0\u00a0\u00a0\u00a0             User.findOne({ 'local.email' :  email }, \n                       function(err, user)\n               \u00a0\u00a0\u00a0\u00a0 { \n     \u00a0\u00a0\u00a0\u00a0             // if errors \n     \u00a0\u00a0\u00a0\u00a0            if (err) \n     \u00a0\u00a0\u00a0\u00a0              return done(err); \n     \u00a0\u00a0\u00a0\u00a0            // check errors and bring the messages \n     \u00a0\u00a0\u00a0\u00a0            if (!user) \n     \u00a0\u00a0\u00a0  \u00a0            return done(null, false, req.flash('loginMessage',\n                       'No user found.')); \n                    if (!user.validPassword(password)) \n                      return done(null, false, req.flash('loginMessage',\n                      'Wohh! Wrong password.')); \n                    // everything ok, get user \n                    else \n                      return done(null, user); \n                    }); \n                  }); \n               })); \n     \u00a0\u00a0\u00a0\u00a0     // Signup local strategy \n     \u00a0\u00a0\u00a0\u00a0     passport.use('local-signup', new LocalStrategy({ \n     \u00a0\u00a0\u00a0\u00a0         // change default username and password, to email and \n                 //  password \n     \u00a0\u00a0\u00a0\u00a0         usernameField : 'email', \n     \u00a0\u00a0\u00a0\u00a0         passwordField : 'password', \n     \u00a0\u00a0\u00a0\u00a0         passReqToCallback : true \n     \u00a0\u00a0\u00a0\u00a0     }, \n     \u00a0\u00a0\u00a0\u00a0     function(req, email, password, done) { \n     \u00a0\u00a0\u00a0\u00a0         if (email) \n     \u00a0\u00a0\u00a0\u00a0         // format to lower-case \n     \u00a0\u00a0\u00a0\u00a0         email = email.toLowerCase(); \n     \u00a0\u00a0\u00a0\u00a0         // asynchronous \n     \u00a0\u00a0\u00a0\u00a0         process.nextTick(function() { \n     \u00a0\u00a0\u00a0\u00a0             // if the user is not already logged in: \n     \u00a0\u00a0\u00a0\u00a0             if (!req.user) { \n     \u00a0\u00a0\u00a0\u00a0                 User.findOne({ 'local.email' :  email },\n                           function(err,user) { \n                      // if errors \n                      if (err) \n                        return done(err); \n                      // check email \n                      if (user) { \n                        return done(null, false, req.flash('signupMessage',\n                         'Wohh! the email is already taken.')); \n                      }\n                      else { \n                        // create the user \n                          var newUser = new User(); \n                          // Get user name from req.body \n                          newUser.local.name = req.body.name; \n                          newUser.local.email = email; \n                          newUser.local.password =\n                           newUser.generateHash(password); \n                          // save data \n                         newUser.save(function(err) { \n                       if (err) \n                         throw err; \n                         return done(null, newUser); \n                        }); \n                       } \n                    }); \n                   } else { \n                     return done(null, req.user); \n                   }         }); \n         \u00a0\u00a0\u00a0\u00a0 })); \n     \u00a0\u00a0\u00a0\u00a0 }; \n\n    ```", "```js\n// Import Mongoose and password Encrypt \nvar mongoose = require('mongoose'); \nvar bcrypt   = require('bcrypt-nodejs'); \n\n// define the schema for User model \nvar userSchema = mongoose.Schema({ \n    // Using local for Local Strategy Passport \n    local: { \n        name: String, \n        email: String, \n        password: String, \n    } \n\n}); \n\n// Encrypt Password \nuserSchema.methods.generateHash = function(password) { \n    return bcrypt.hashSync(password, bcrypt.genSaltSync(8), null); \n}; \n\n// Verify if password is valid \nuserSchema.methods.validPassword = function(password) { \n    return bcrypt.compareSync(password, this.local.password); \n}; \n\n// create the model for users and expose it to our app \nmodule.exports = mongoose.model('User', userSchema); \n\n```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 /* POST login */ \n     \u00a0\u00a0\u00a0\u00a0 router.post('/login', passport.authenticate('local-login', { \n     \u00a0\u00a0\u00a0\u00a0     //Success go to Profile Page / Fail go to login page \n     \u00a0\u00a0\u00a0\u00a0     successRedirect : '/profile', \n     \u00a0\u00a0\u00a0\u00a0     failureRedirect : '/login', \n     \u00a0\u00a0\u00a0\u00a0     failureFlash : true \n     \u00a0\u00a0\u00a0\u00a0 })); \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 /* POST Signup */ \n     \u00a0\u00a0\u00a0\u00a0 router.post('/signup', passport.authenticate('local-signup', { \n     \u00a0\u00a0\u00a0\u00a0     //Success go to Profile Page / Fail go to Signup page \n     \u00a0\u00a0\u00a0\u00a0     successRedirect : '/profile',  \u00a0\u00a0\u00a0\u00a0 \n     \u00a0\u00a0\u00a0\u00a0     failureRedirect : '/signup', \n     \u00a0\u00a0\u00a0\u00a0     failureFlash : true \n     \u00a0\u00a0\u00a0\u00a0 })); \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 /* check if user is logged in */ \n     \u00a0\u00a0\u00a0\u00a0 function isLoggedIn(req, res, next) { \n     \u00a0\u00a0\u00a0\u00a0     if (req.isAuthenticated()) \n     \u00a0\u00a0\u00a0\u00a0         return next(); \n     \u00a0\u00a0\u00a0\u00a0     res.redirect('/login'); \n     \u00a0\u00a0\u00a0\u00a0 } \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 /* GET Logout Page */ \n     \u00a0\u00a0\u00a0\u00a0 router.get('/logout', function(req, res) { \n     \u00a0\u00a0\u00a0\u00a0     req.logout(); \n     \u00a0\u00a0\u00a0\u00a0     res.redirect('/'); \n     \u00a0\u00a0\u00a0\u00a0 }); \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 /* GET Profile page. */ \n     \u00a0\u00a0\u00a0\u00a0 router.get('/profile', isLoggedIn, function(req, res, next) { \n     \u00a0\u00a0\u00a0\u00a0     res.render('profile', { title: 'Profile Page', user : req.user,\n               avatar: gravatar.url(req.user.email ,  {s: '100', r: 'x',\n                 d:'retro'}, true) }); \n     \u00a0\u00a0\u00a0\u00a0 }); \n\n    ```", "```js\nvar express = require('express'); \nvar router = express.Router(); \nvar passport = require('passport'); \n// get gravatar icon from email \nvar gravatar = require('gravatar'); \n\n/* GET home page. */ \nrouter.get('/', function(req, res, next) { \n    res.render('index', { title: 'Express from server folder' }); \n}); \n\n/* GET login page. */ \nrouter.get('/login', function(req, res, next) { \n    res.render('login', { title: 'Login Page', message: req.flash('loginMessage') }); \n}); \n/* POST login */ \nrouter.post('/login', passport.authenticate('local-login', { \n    //Success go to Profile Page / Fail go to login page \n    successRedirect : '/profile', \n    failureRedirect : '/login', \n    failureFlash : true \n})); \n\n/* GET Signup */ \nrouter.get('/signup', function(req, res) { \n    res.render('signup', { title: 'Signup Page', message: req.flash('signupMessage') }); \n}); \n/* POST Signup */ \nrouter.post('/signup', passport.authenticate('local-signup', { \n    //Success go to Profile Page / Fail go to Signup page \n    successRedirect : '/profile', \n    failureRedirect : '/signup', \n    failureFlash : true \n})); \n\n/* GET Profile page. */ \nrouter.get('/profile', isLoggedIn, function(req, res, next) { \n    res.render('profile', { title: 'Profile Page', user : req.user, avatar: gravatar.url(req.user.email ,  {s: '100', r: 'x', d: 'retro'}, true) }); \n}); \n\n/* check if user is logged in */ \nfunction isLoggedIn(req, res, next) { \n    if (req.isAuthenticated()) \n        return next(); \n    res.redirect('/login'); \n} \n/* GET Logout Page */ \nrouter.get('/logout', function(req, res) { \n    req.logout(); \n    res.redirect('/'); \n}); \n\nmodule.exports = router; \n\n```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 // get gravatar icon from email \n     \u00a0\u00a0\u00a0\u00a0 var gravatar = require('gravatar'); \n     \u00a0\u00a0\u00a0\u00a0 // get Comments model \n     \u00a0\u00a0\u00a0\u00a0 var Comments = require('../models/comments'); \n\n     \u00a0\u00a0\u00a0\u00a0 // List Comments \n     \u00a0\u00a0\u00a0\u00a0 exports.list = function(req, res) { \n     \u00a0\u00a0\u00a0\u00a0    // List all comments and sort by Date \n     \u00a0\u00a0\u00a0\u00a0     Comments.find().sort('-created').populate('user',\n                'local.email').exec(function(error, comments) { \n     \u00a0\u00a0\u00a0\u00a0         if (error) { \n     \u00a0\u00a0\u00a0\u00a0             return res.send(400, { \n     \u00a0\u00a0\u00a0\u00a0                 message: error  \u00a0\u00a0\u00a0\u00a0 \n     \u00a0\u00a0\u00a0\u00a0             }); \n     \u00a0\u00a0\u00a0\u00a0         } \n     \u00a0\u00a0\u00a0\u00a0         // Render result \n     \u00a0\u00a0\u00a0\u00a0         res.render('comments', { \n     \u00a0\u00a0\u00a0\u00a0             title: 'Comments Page', \n     \u00a0\u00a0\u00a0\u00a0             comments: comments, \n     \u00a0\u00a0\u00a0\u00a0             gravatar: gravatar.url(comments.email,\n                         {s: '80', r: 'x', d: 'retro'}, true) \n     \u00a0\u00a0\u00a0\u00a0         }); \n     \u00a0\u00a0\u00a0\u00a0     }); \n     \u00a0\u00a0\u00a0\u00a0 }; \n     \u00a0\u00a0\u00a0\u00a0 // Create Comments \n     \u00a0\u00a0\u00a0\u00a0 exports.create = function(req, res) { \n     \u00a0\u00a0\u00a0\u00a0    // create a new instance of the Comments model with request body \n     \u00a0\u00a0\u00a0\u00a0     var comments = new Comments(req.body); \n     \u00a0\u00a0\u00a0\u00a0     // Set current user (id) \n     \u00a0\u00a0\u00a0\u00a0     comments.user = req.user; \n     \u00a0\u00a0\u00a0\u00a0     // save the data received \n     \u00a0\u00a0\u00a0\u00a0     comments.save(function(error) { \n     \u00a0\u00a0\u00a0\u00a0         if (error) { \n     \u00a0\u00a0\u00a0\u00a0             return res.send(400, { \n     \u00a0\u00a0\u00a0\u00a0                 message: error \n     \u00a0\u00a0\u00a0\u00a0             }); \n     \u00a0\u00a0\u00a0\u00a0         } \n     \u00a0\u00a0\u00a0\u00a0         // Redirect to comments \n     \u00a0\u00a0\u00a0\u00a0         res.redirect('/comments'); \n     \u00a0\u00a0\u00a0\u00a0     }); \n     \u00a0\u00a0\u00a0\u00a0 }; \n     \u00a0\u00a0\u00a0\u00a0 // Comments authorization middleware \n     \u00a0\u00a0\u00a0\u00a0 exports.hasAuthorization = function(req, res, next) { \n     \u00a0\u00a0\u00a0\u00a0     if (req.isAuthenticated()) \n     \u00a0\u00a0\u00a0\u00a0         return next(); \n     \u00a0\u00a0\u00a0\u00a0     res.redirect('/login'); \n     \u00a0\u00a0\u00a0\u00a0 }; \n\n    ```", "```js\n          // Import comments controller\n          var comments = require('./server/controllers/comments');\u00a0\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 // Setup routes for comments \n     \u00a0\u00a0\u00a0\u00a0 app.get('/comments', comments.hasAuthorization, comments.list); \n     \u00a0\u00a0\u00a0\u00a0 app.post('/comments', comments.hasAuthorization, comments.create); \n\n    ```", "```js\n          <!DOCTYPE html> \n          <html> \n          <head> \n              <title><%= title %></title> \n              <% include ../partials/stylesheet %> \n          </head> \n          <body> \n            <% include ../partials/header %> \n            <div class=\"container\"> \n              <div class=\"row\"> \n                <div class=\"col-lg-6\"> \n                  <h4 class=\"text-muted\">Comments</h4> \n                </div> \n                <div class=\"col-lg-6\"> \n                  <button type=\"button\" class=\"btn btn-secondary pull-right\"\n                   data-toggle=\"modal\" data-target=\"#createPost\">\n                        Create Comment \n                    </button> \n                </div> \n                </div> \n                <!-- Modal --> \n                <div class=\"modal fade\" id=\"createPost\" tabindex=\"-1\"\n                 role=\"dialog\" aria-labelledby=\"myModalLabel\"\n                  aria-hidden=\"true\"> \n                  <div class=\"modal-dialog\" role=\"document\"> \n                    <div class=\"modal-content\"> \n                      <form action=\"/comments\" method=\"post\"> \n                        <div class=\"modal-header\"> \n                          <button type=\"button\" class=\"close\" \n                           data-dismiss=\"modal\" aria-label=\"Close\"> \n                             <span aria-hidden=\"true\">&times;</span> \n                           </button> \n                           <h4 class=\"modal-title\" id=\"myModalLabel\">\n                            Create Comment</h4> \n                        </div> \n\n                        <div class=\"modal-body\"> \n                          <fieldset class=\"form-group\"> \n                             <label  for=\"inputitle\">Title</label> \n                             <input type=\"text\" id=\"inputitle\" name=\"title\"\n                               class=\"form-control\" placeholder=\n                                \"Comment Title\" required=\"\"> \n                           </fieldset> \n                           <fieldset class=\"form-group\"> \n                             <label  for=\"inputContent\">Content</label> \n                             <textarea id=\"inputContent\" name=\"content\"\n                              rows=\"8\" cols=\"40\" class=\"form-control\"\n                              placeholder=\"Comment Description\" required=\"\">\n                             </textarea> \n                           </fieldset> \n\n                           </div> \n                            <div class=\"modal-footer\"> \n                              <button type=\"button\" class=\"btn btn-secondary\"\n                               data-dismiss=\"modal\">Close</button> \n                              <button type=\"submit\" class=\"btn btn-primary\">\n                               Save changes</button> \n                            </div> \n                      </form> \n                    </div> \n                  </div> \n                </div> \n                  <hr> \n                <div class=\"lead\"> \n                  <div class=\"list-group\"> \n                    <% comments.forEach(function(comments){ %> \n                      <a href=\"#\" class=\"list-group-item\"> \n                        <img src=\"img/<%= gravatar %>\" alt=\"\" style=\"float: left;\n                          margin-right: 10px\"> \n                   <div class=\"comments\"> \n                    <h4 class=\"list-group-item-heading\">\n                      <%= comments.title %></h4> \n                     <p class=\"list-group-item-text\">\n                       <%= comments.content %></p> \n                     <small class=\"text-muted\">By: \n                        <%= comments.user.local.email %>\n                     </small> \n                    </div> \n                    </a> \n\n                <% }); %> \n                </div> \n              </div> \n             </div> \n              <% include ../partials/footer %> \n              <% include ../partials/javascript %> \n          </body> \n          </html> \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 // load the things we need \n     \u00a0\u00a0\u00a0\u00a0 var mongoose = require('mongoose'); \n     \u00a0\u00a0\u00a0\u00a0 var Schema = mongoose.Schema; \n\n     \u00a0\u00a0\u00a0\u00a0 var commentSchema = mongoose.Schema({ \n     \u00a0\u00a0\u00a0\u00a0     created: { \n     \u00a0\u00a0\u00a0\u00a0         type: Date, \n          \u00a0\u00a0\u00a0\u00a0    default: Date.now \n     \u00a0\u00a0\u00a0\u00a0     }, \n     \u00a0\u00a0\u00a0\u00a0     title: { \n     \u00a0\u00a0\u00a0\u00a0         type: String,  \u00a0\u00a0\u00a0\u00a0 \n     \u00a0\u00a0\u00a0\u00a0         default: '', \n     \u00a0\u00a0\u00a0\u00a0         trim: true, \n     \u00a0\u00a0\u00a0\u00a0         required: 'Title cannot be blank' \n     \u00a0\u00a0\u00a0\u00a0     }, \n     \u00a0\u00a0\u00a0\u00a0     content: { \n     \u00a0\u00a0\u00a0\u00a0         type: String, \n     \u00a0\u00a0\u00a0\u00a0         default: '', \n     \u00a0\u00a0\u00a0\u00a0         trim: true \n       \u00a0\u00a0\u00a0\u00a0   }, \n      \u00a0\u00a0\u00a0\u00a0    user: { \n     \u00a0\u00a0\u00a0\u00a0         type: Schema.ObjectId, \n     \u00a0\u00a0\u00a0\u00a0         ref: 'User' \n     \u00a0\u00a0\u00a0\u00a0     } \n     \u00a0\u00a0\u00a0\u00a0 }); \n\n     \u00a0\u00a0\u00a0\u00a0 module.exports = mongoose.model('Comments', commentSchema); \n\n    ```", "```js\n    npm start\n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 Title: Sample Title \n     \u00a0\u00a0\u00a0\u00a0 Comments: Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n           sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n           Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\n           nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n           reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n           pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n           culpa qui officia deserunt mollit anim id est laborum. \n\n    ```", "```js\nname: John Doe \nemail: john@doe.com\npassword: 123456 \n\n```"]