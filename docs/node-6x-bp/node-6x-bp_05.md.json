["```js\n     yo express\n\n    ```", "```js\n          app.engine('html', swig.renderFile); \n          if(env == 'development'){ \n            app.set('view cache', false); \n            swig.setDefaults({ cache: false }); \n          } \n          app.set('views', config.root + '/app/views/pages'); \n          app.set('view engine', 'html'); \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 <head> \n     \u00a0\u00a0\u00a0\u00a0   <meta charset=\"UTF-8\"> \n       \u00a0\u00a0\u00a0\u00a0 <meta name=\"viewport\" content=\"width=device-width\"> \n       \u00a0\u00a0\u00a0\u00a0 <title>{{ title }}</title> \n     \u00a0\u00a0\u00a0\u00a0   <!--Let browser know website is optimized for mobile--> \n     \u00a0\u00a0\u00a0\u00a0   <meta name=\"viewport\" content=\"width=device-width, initial-scale=\n               1.0\"/> \n       \u00a0\u00a0\u00a0\u00a0 <!-- Import Google Material font and icons --> \n     \u00a0\u00a0\u00a0\u00a0   <link href=\"https://fonts.googleapis.com/icon?family=\n              Material+Icons\" rel=\"stylesheet\"> \n       \u00a0\u00a0\u00a0\u00a0 <!-- Compiled and minified CSS --> \n       \u00a0\u00a0\u00a0\u00a0 <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax\n              /libs/materialize/0.97.6/css/materialize.min.css\"> \n     \u00a0\u00a0\u00a0\u00a0   <link rel=\"stylesheet\" href=\"/css/style.css\"> \n       \u00a0\u00a0\u00a0\u00a0 <!--Import jQuery before materialize.js--> \n       \u00a0\u00a0\u00a0\u00a0 <script type=\"text/javascript\" src=\"https://code.jquery.com/\n               jquery-2.1.1.min.js\"></script> \n       \u00a0\u00a0\u00a0\u00a0 <!-- Compiled and minified JavaScript --> \n     \u00a0\u00a0\u00a0\u00a0   <script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize\n              /0.97.6/js/materialize.min.js\"></script> \n     \u00a0\u00a0\u00a0\u00a0   <!-- Google Maps API to track location  --> \n       \u00a0\u00a0\u00a0\u00a0 <scriptsrc=\"https://maps.googleapis.com/maps/api/js?key=<YOUR\n              API KEY GOES HERE>\"></script> \n     \u00a0\u00a0\u00a0\u00a0 </head> \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 <footer class=\"page-footer teal darken-1\"> \n     \u00a0\u00a0\u00a0\u00a0 <div class=\"container\"> \n     \u00a0\u00a0\u00a0\u00a0   <div class=\"row\"> \n         \u00a0\u00a0\u00a0\u00a0 <div class=\"col l6s12\"> \n     \u00a0\u00a0\u00a0\u00a0       <h5 class=\"white-text\">Some Text Example</h5> \n                <p class=\"grey-text text-lighten-4\">Lorem ipsum dolor\n                  sit amet, consecteturadipiscingelit, sed do \n                  eiusmodtemporincididuntutlabore et dolore magna aliqua.\n                  Utenim ad minim veniam, quisnostrud \n                  exercitationullamcolaboris nisi utaliquip ex\n                  eacommodoconsequat. Duisauteirure dolor in reprehenderit\n                  in voluptatevelitessecillumdoloreeufugiatnullapariatur.</p> \n              </div> \n              <div class=\"col l3s12\"> \n                <h5 class=\"white-text\">Sample Links</h5> \n                <ul> \n                  <li><a class=\"white-text\" href=\"#!\">Link 1</a></li> \n                  <li><a class=\"white-text\" href=\"#!\">Link 2</a></li> \n                  <li><a class=\"white-text\" href=\"#!\">Link 3</a></li> \n                  <li><a class=\"white-text\" href=\"#!\">Link 4</a></li> \n                </ul> \n              </div> \n              <div class=\"col l3s12\"> \n                <h5 class=\"white-text\">Sample Links</h5> \n                <ul> \n                  <li><a class=\"white-text\" href=\"#!\">Link 1</a></li> \n                  <li><a class=\"white-text\" href=\"#!\">Link 2</a></li> \n                  <li><a class=\"white-text\" href=\"#!\">Link 3</a></li> \n                  <li><a class=\"white-text\" href=\"#!\">Link 4</a></li> \n                </ul> \n              </div> \n            </div>\n          </div> \n          <div class=\"footer-copyright\"> \n          <div class=\"container\"> \n            MVC Express App for: <a class=\"white-text text-darken-2\"\n            href=\"#\">Node.js 6 Blueprints Book</a>\n          </div> \n          </div> \n          </footer> \n          <!-- Live reload for development --> \n            {% if ENV_DEVELOPMENT %} \n              <scriptsrc=\"img/livereload.js\"></script> \n            {% endif %} \n          <!--InitRsponsiveSidenav Menu  --> \n          <script> \n                (function ($) { \n                  $(function () { \n                      $('.button-collapse').sideNav(); \n                  }); \n                })(jQuery); \n          </script> \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 {% extends 'layout.html' %} \n     \u00a0\u00a0\u00a0\u00a0 {% block content %}\n     \u00a0\u00a0\u00a0\u00a0 <div id=\"map\" style=\"height: 300px\"></div> \n            <div class=\"section\"> \n              <div class=\"container\"> \n              <br> \n                <h1 class=\"header center teal-text\">{{ title }}</h1> \n                <div class=\"row center\"> \n                  <h5 class=\"header col s12 light\">Welcome to {{ title }}\n                  </h5> \n                </div> \n                <div class=\"row center\"> \n                  <a href=\"locations/add\" id=\"download-button\"\n                    class=\"btn-large waves-effect waves-light teal\">\n                    Add your location\n                 </a> \n                </div> \n                 <br><br> \n              </div> \n            </div> \n             <!-- Tracking current user position --> \n             <scriptsrc=\"img/getCurrentPosition.js\"></script> \n             {% endblock %} \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 <!doctype html> \n     \u00a0\u00a0\u00a0\u00a0 <html lang=\"en\"> \n     \u00a0\u00a0\u00a0\u00a0 {% include \"../partials/head.html\" %} \n     \u00a0\u00a0\u00a0\u00a0 <body> \n     \u00a0\u00a0\u00a0\u00a0   <nav class=\"teal\" role=\"navigation\"> \n            <div class=\"nav-wrapper container\"><a id=\"logo-container\"\n              href=\"/\" class=\"brand-logo\">Logo</a> \n              <ul class=\"right hide-on-med-and-down\"> \n                <li><a href=\"/locations\">Locations</a></li> \n                <li><a href=\"/locations/add\">Add Location</a></li> \n                <li><a href=\"/stores\">Stores</a></li> \n              </ul> \n              <ul id=\"nav-mobile\" class=\"side-nav\" style=\"transform:\n                translateX(-100%);\"> \n                <li><a href=\"/locations\">Locations</a></li> \n                <li><a href=\"/locations/add\">Add Location</a></li> \n                <li><a href=\"/stores\">Stores</a></li> \n              </ul> \n              <a href=\"#\" data-activates=\"nav-mobile\" class=\"button-\n               collapse\"><i class=\"material-icons\">menu</i></a> \n            </div> \n          </nav> \n          {% block content %}{% endblock %} \n           <!-- Footer --> \n           {% include \"../partials/footer.html\" %} \n     \u00a0\u00a0\u00a0\u00a0 </body> \n     \u00a0\u00a0\u00a0\u00a0 </html> \n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 {% extends 'layout.html' %} \n          {% block content %} \n          <div class=\"section\"> \n            <div class=\"container\"> \n            <br> \n              <h1 class=\"header center teal-text\">{{ message }}</h1> \n              <div class=\"row center\"> \n                <h3 class=\"header col s12 light\">{{ error.status }}</h3> \n              </div> \n              <div class=\"row center\"> \n                <pre>{{ error.stack }}</pre> \n              </div> \n              <br><br> \n            </div> \n          </div> \n          {% endblock %} \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 function getCurrentPosition() { \n         \u00a0\u00a0\u00a0\u00a0 // Check boreswer/navigator support \n     \u00a0\u00a0\u00a0\u00a0 if (navigator.geolocation) { \n     \u00a0\u00a0\u00a0\u00a0 var options = { \n     \u00a0\u00a0\u00a0\u00a0   enableHighAccuracy : true, \n     \u00a0\u00a0\u00a0\u00a0   timeout : Infinity, \n     \u00a0\u00a0\u00a0\u00a0   maximumAge : 0 \n          }; \n     \u00a0\u00a0\u00a0\u00a0   navigator.geolocation.watchPosition(getUserPosition, trackError,\n            options); \n          }\n          else { \n     \u00a0\u00a0\u00a0\u00a0   alert('Ops; Geolocation is not supported'); \n     \u00a0\u00a0\u00a0\u00a0 } \n     \u00a0\u00a0\u00a0\u00a0    // Get user position and place a icon on map \n     \u00a0\u00a0\u00a0\u00a0 function getUserPosition(position) { \n     \u00a0\u00a0\u00a0\u00a0       // Check longitude and latitude \n     \u00a0\u00a0\u00a0\u00a0 console.log(position.coords.latitude); \n     \u00a0\u00a0\u00a0\u00a0 console.log(position.coords.longitude); \n        \u00a0\u00a0\u00a0\u00a0    // Create the user' coordinates \n     \u00a0\u00a0\u00a0\u00a0 var googlePos = new google.maps.LatLng(position.coords.latitude,\n    \u00a0\u00a0\u00a0\u00a0\u00a0 position.coords.longitude); \n     \u00a0\u00a0\u00a0\u00a0 var mapOptions = { \n     \u00a0\u00a0\u00a0\u00a0   zoom : 12,\n            center :googlePos, \n            mapTypeId :google.maps.MapTypeId.ROADMAP \n          }; \n            // Set a variable to get the HTML div \n            var mapObj = document.getElementById('map'); \n            // Create the map and passing: map div and map options \n            var googleMap = new google.maps.Map(mapObj, mapOptions); \n            // Setup a marker on map with user' location \n            var markerOption = { \n              map :googleMap, \n              position :googlePos, \n              animation :google.maps.Animation.DROP \n            }; \n          // Create a instance with marker on map \n            var googleMarker = new google.maps.Marker(markerOption); \n            // Get the user's complete address information using the Geocoder\n            //Google API \n            var geocoder = new google.maps.Geocoder(); \n              geocoder.geocode({ \n                 'latLng' : googlePos \n              },\n              function(results, status) { \n                if (status == google.maps.GeocoderStatus.OK) { \n                  if (results[1]) { \n                    var popOpts = { \n                    content : results[1].formatted_address, \n                    position :googlePos \n                    }; \n                    // Setup an info window with user information \n                    var popup = new google.maps.InfoWindow(popOpts); \n                    google.maps.event.addListener(googleMarker,\n                    'click', function() { \n                       popup.open(googleMap); \n                     }); \n                  }\n                  else { \n                    alert('No results found'); \n                  } \n                }\n                else { \n                 alert('Uhh, failed: ' + status); \n                } \n              }); \n            } \n            // Setup a error function \n            function trackError(error) { \n            var err = document.getElementById('map'); \n             switch(error.code) { \n             case error.PERMISSION_DENIED: \n             err.innerHTML = \"User denied Geolocation.\"; \n             break; \n             case error.POSITION_UNAVAILABLE: \n             err.innerHTML = \"Information is unavailable.\"; \n             break; \n             case error.TIMEOUT: \n             err.innerHTML = \"Location timed out.\"; \n             break; \n             case error.UNKNOWN_ERROR: \n             err.innerHTML = \"An unknown error.\"; \n             break; \n            } \n            }\n     \u00a0\u00a0\u00a0\u00a0 } \n          getCurrentPosition(); \n\n    ```", "```js\n    \u00a0\u00a0\u00a0\u00a0\u00a0 var express = require('express'), \n     \u00a0\u00a0\u00a0\u00a0 router = express.Router(), \n     \u00a0\u00a0\u00a0\u00a0 mongoose = require('mongoose'), \n     \u00a0\u00a0\u00a0\u00a0 Location = mongoose.model('Location'); \n     \u00a0\u00a0\u00a0\u00a0 module.exports = function (app) { \n     \u00a0\u00a0\u00a0\u00a0 app.use('/', router); \n     \u00a0\u00a0\u00a0\u00a0 }; \n     \u00a0\u00a0\u00a0\u00a0 router.get('/locations', function (req, res, next) { \n     \u00a0\u00a0\u00a0\u00a0 Location.find(function (err, item) { \n     \u00a0\u00a0\u00a0\u00a0 if (err) return next(err); \n     \u00a0\u00a0\u00a0\u00a0   res.render('locations', { \n              title: 'Locations', \n              location: item, \n              lat: -23.54312, \n              long: -46.642748 \n            }); \n            //res.json(item); \n     \u00a0\u00a0\u00a0\u00a0     }); \n     \u00a0\u00a0\u00a0\u00a0 }); \n     \u00a0\u00a0\u00a0\u00a0 router.get('/locations/add', function (req, res, next) { \n     \u00a0\u00a0\u00a0\u00a0 res.render('add-location', { \n     \u00a0\u00a0\u00a0\u00a0 title: 'Insert Locations' \n     \u00a0\u00a0\u00a0\u00a0     }); \n     \u00a0\u00a0\u00a0\u00a0 }); \n     \u00a0\u00a0\u00a0\u00a0 router.post('/locations', function (req, res, next) { \n     \u00a0\u00a0\u00a0\u00a0     // Fill loc object with request body \n     \u00a0\u00a0\u00a0\u00a0 varloc = {\n     \u00a0\u00a0\u00a0\u00a0   title: req.body.title, \n            coordinates: [req.body.long, req.body.lat] \n          }; \n          var locations = new Location(loc); \n          // save the data received \n           locations.save(function(error, item) { \n           if (error) { \n             returnres.status(400).send({ \n             message: error \n             }); \n           } \n            //res.json({message: 'Success', obj: item}); \n             res.render('add-location', { \n             message: 'Upload with Success', \n             obj: item \n                  }); \n              }); \n          });  \n\n    ```", "```js\n //res.status(200).json(stores);.\n\n```", "```js\n      // Example model \n      var mongoose = require('mongoose'), \n        Schema = mongoose.Schema; \n      varLocationSchema = new Schema({ \n        title: String, \n        coordinates: { \n          type: [Number], \n          index: '2dsphere' \n        },  \n        created: { \n          type: Date, \n          default: Date.now \n        } \n      }); \n      mongoose.model('Location', LocationSchema);  \n\n```", "```js\n          {% extends 'layout.html' %} \n          {% block content %} \n          <div class=\"section\"> \n            <div class=\"container\"> \n            <br><br> \n              <h1 class=\"header center teal-text\">{{ title }}</h1> \n              <div class=\"row center\"> \n                <h5 class=\"header col s12 light\">Welcome to \n                  {{ title }}\n                </h5> \n              </div> \n              <div class=\"row\"> \n                <div class=\"col s12\"> \n                <form action=\"/nearme\" method=\"POST\"> \n                  <div class=\"row\"> \n                    <div class=\"col s12\" id=\"map\" style=\"height:600px;\n                     width: 100%; margin-bottom: 20px\"></div> \n                    <br> \n                      <h5 class=\"grey-text center\"> \n                                Find a store near by you \n                       </h5> \n                     <br> \n                     <div class=\"input-field col s5\"> \n                       <input placeholder=\"Insert Longitude\"\n                        name=\"longitude\" id=\"longitude\" type=\"text\"\n                        class=\"validate\" value=\"{{long}}\">\n                       <label for=\"longitude\">Longitude</label> \n                     </div> \n                     <div class=\"input-field col s5\"> \n                     <input placeholder=\"Insert latitude\" name=\"latitude\"\n                       id=\"latitude\" type=\"text\" class=\"validate\"\n                       value=\"{{lat}}\"> \n                     <label for=\"latitude\">Latitude</label> \n                     </div> \n                     <div class=\"input-field col s2\"> \n                       <select class=\"browser-default\" name=\"distance\"\n                        id=\"distance\">\n                         <option value=\"\" disabled selected>Distance\n                         </option>\n                         <option value=\"2\">2 Km</option> \n                         <option value=\"3\">3 km</option> \n                         <option value=\"9\">9 km</option> \n                       </select> \n                     </div> \n                   </div> \n                   <div class=\"row\"> \n                   <button class=\"btn waves-effect waves-light\"\n                     type=\"submit\" name=\"action\">SUBMIT</button> \n                   </div> \n                 </form> \n                 <br> \n               </div> \n             </div> \n           </div> \n           </div> \n\n    ```", "```js\n     <div class=\"col s12\" id=\"map\" style=\"height: 600px; width: 100%;\n            margin-bottom: 20px\"></div> \n\n    ```", "```js\n     <form action=\"/nearme\" method=\"POST\">\n\n    ```", "```js\n          <script type=\"text/javascript\"> \n          var loadMap = function() { \n              // Center map with current lat and long (Simulated with fixed\n                point for this example) \n             var googlePos = new google.maps.LatLng({{ lat }} , {{ long }}); \n              // Setup map options \n             var mapOptions = { \n               zoom : 12, \n               center :googlePos, \n               mapTypeId :google.maps.MapTypeId.ROADMAP \n             }; \n            // Set a variable to get the HTML div \n            var mapObj = document.getElementById('map'); \n            var googleMap = new google.maps.Map(mapObj, mapOptions); \n             // Create markers array to hold all markers on map \n            var markers = []; \n            // Using the Swig loop to get all data from location variable \n            {% for item in location %} \n                // Setup a lat long object \n              var latLng = new google.maps.LatLng({{ item.coordinates[1] }},\n               {{ item.coordinates[0] }}); \n                // Create a marker \n              var marker = new google.maps.Marker({ \n                map :googleMap, \n                position: latLng, \n                animation :google.maps.Animation.DROP \n              }); \n              markers.push(marker); \n                // Setup the info window \n              varinfowindow = new google.maps.InfoWindow(); \n                // Add an event listener to click on each marker and show\n                   an info window \n              google.maps.event.addListener(marker, 'click', function () { \n              // using the tittle from the Swig looping \n                infowindow.setContent('<p>' + \" {{ item.title }} \" + '</p>'); \n                infowindow.open(googleMap, this); \n              }); \n              {% endfor %} \n            }; \n           // load the map function \n           window.onload = loadMap; \n           </script> \n           {% endblock %} \n\n    ```", "```js\n          varmapObj = document.getElementById('map'); \n          vargoogleMap = new google.maps.Map(mapObj, mapOptions); \n\n    ```", "```js\n          {% for item in location %} \n             ... \n          {% endfor %}\n\n    ```", "```js\n          {% extends 'layout.html' %} \n          {% block content %} \n          <div class=\"section\"> \n            <div class=\"container\"> \n            <br><br> \n              <h1 class=\"header center teal-text\">{{ title }}</h1> \n              <div class=\"row center\"> \n                <h5 class=\"header col s12 light\">Welcome to \n                 {{ title }}\n                </h5> \n              </div> \n              <div class=\"row\"> \n                <div class=\"col s12\"> \n                    {% if message %} \n                      <h4 class=\"center teal-text\"> \n                            {{ message }} \n                      </h4> \n                    {% endif %} \n                    <h5 class=\"grey-text\"> \n                          Insert a new location \n                    </h5> \n                    <br> \n                    <form action=\"/locations\" method=\"POST\"> \n                      <div class=\"row\"> \n                      <div class=\"input-field col s4\"> \n                        <input placeholder=\"Insert Location Title\"\n                         name=\"title\" id=\"title\" type=\"text\" class=\"validate\"> \n                        <label for=\"title\">Title</label> \n                        </div> \n                        <div class=\"input-field col s4\"> \n                          <input placeholder=\"Insert Longitude\"\n                           name=\"long\" id=\"long\" type=\"text\" class=\"validate\"> \n                          <label for=\"long\">Longitude</label> \n                        </div>  \n                        <div class=\"input-field col s4\"> \n                        <input placeholder=\"Insert lat\" name=\"lat\" id=\"lat\" \n                         type=\"text\" class=\"validate\"> \n                        <label for=\"lat\">Latitude</label> \n                        </div> \n                          <br> \n                          <br> \n                        <div class=\"col s12 center\"> \n                        <button class=\"btn waves-effect waves-light\" \n                         type=\"submit\" name=\"action\">SUBMIT</button> \n                        </div> \n                      </div> \n                    </form> \n                    </div> \n                  </div> \n                </div> \n              </div> \n              {% endblock %} \n\n    ```", "```js\n    gulp\n\n    ```", "```js\n    router.get('/locations', function (req, res, next) {\n    Location.find(function (err, item) {\n    ...\n    res.render('locations', {\n    ...\n    lat: -23.54312,\n    long: -46.642748\n    });\n    });\n    });\n\n    ```", "```js\n          db.locations.insert( \n          [{ \n              \"title\": \"Mackenzie\", \n              \"coordinates\": [-46.651659, -23.54807] \n          }, { \n              \"title\": \"Shopping Maia B\", \n              \"coordinates\": [-46.539545, -23.44375] \n          }, { \n              \"title\": \"MorumbiSaraiva\", \n              \"coordinates\": [-46.699053, -23.62376] \n          }, { \n              \"title\": \"Shopping Center Norte\", \n              \"coordinates\": [-46.617417, -23.51575] \n          }, { \n              \"title\": \"Mooca Plaza Shopping\", \n              \"coordinates\": [-46.594408, -23.57983] \n          }, { \n              \"title\": \"Shopping Metro Tucuruvi\", \n              \"coordinates\": [-46.602695, -23.47984] \n          }, { \n              \"title\": \"Market Place\", \n              \"coordinates\": [-46.696713, -23.61645] \n          }] \n          ) \n\n    ```", "```js\nvar LocationSchema = new Schema({ \n  title: String, \n  coordinates: { \n    type: [Number], \n    index: '2dsphere' \n  }, \n  created: { \n    type: Date, \n    default: Date.now \n  } \n}); \n\n```", "```js\n    db.locations.ensureIndex({ 'coordinates' : '2dsphere'})\n\n    ```", "```js\n     <div class=\"row\">      <div class=\"col s3\"> \n                  ... \n     </div> <div class=\"col s9\"> <form action=\"/nearme\" method=\"POST\">           ... \n         </div> \n         </div> \n\n    ```", "```js\n          // get all the pan-to-marker class \n          var els = document.querySelectorAll(\".pan-to-marker\"); \n          // looping over all list elements \n          for (vari = 0, len = els.length; i<len; i++) { \n            els[i].addEventListener(\"click\", function(e){ \n              e.preventDefault(); \n         // Use -1 for index because loop.index from swig starts on 1 \n         var attr = this.getAttribute('data-marker-index') -1; \n            // get longitude and latitude of the marker \n           var latitude = markers[attr].getPosition().lat(); \n           var longitude = markers[attr].getPosition().lng(); \n            console.log(latitude, longitude ); \n              // Center map and apply zoom \n               googleMap.setCenter({lat: latitude, lng: longitude}); \n               googleMap.setZoom(18); \n               }); \n          } \n\n    ```"]