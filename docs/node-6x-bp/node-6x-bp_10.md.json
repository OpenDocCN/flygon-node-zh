["```js\n          { \n            \"name\": \"chapter-10\", \n            \"version\": \"1.0.0\", \n            \"main\": \"server.js\", \n            \"description\": \"Create an app for the cloud with Docker\", \n            \"scripts\": { \n              \"build\": \"npm-run-all build-*\", \n              \"build-css\": \"node-sass public/css/main.scss >\n               public/css/main.css\", \n              \"postinstall\": \"npm run build\", \n              \"start\": \"node server.js\", \n              \"test\": \"mocha\", \n              \"watch\": \"npm-run-all --parallel watch:*\", \n              \"watch:css\": \"nodemon -e scss -w public/css -x npm run\n               build:css\" \n            }, \n            \"dependencies\": { \n              \"async\": \"^1.5.2\", \n              \"bcrypt-nodejs\": \"^0.0.3\", \n              \"body-parser\": \"^1.15.1\", \n              \"compression\": \"^1.6.2\", \n              \"dotenv\": \"^2.0.0\", \n              \"express\": \"^4.13.4\", \n              \"express-flash\": \"0.0.2\", \n              \"express-handlebars\": \"^3.0.0\", \n              \"express-session\": \"^1.2.1\", \n              \"express-validator\": \"^2.20.4\", \n              \"method-override\": \"^2.3.5\", \n              \"mongoose\": \"^4.4.8\", \n              \"morgan\": \"^1.7.0\", \n              \"node-sass\": \"^3.6.0\", \n              \"nodemon\": \"^1.9.1\", \n              \"npm-run-all\": \"^1.8.0\", \n              \"passport\": \"^0.3.2\", \n              \"passport-local\": \"^1.0.0\", \n              \"swig\": \"^1.4.2\" \n            }, \n            \"devDependencies\": \n              \"mocha\": \"^2.4.5\", \n              \"supertest\": \"^1.2.0\" \n            }, \n            \"engines\": { \n              \"node\": \"6.1.0\" \n            } \n          }\n\n    ```", "```js\n          SESSION_SECRET='<SESSION_SECRET>' \n          #MONGODB='<>' \n          MONGODB='<MONGODB>' \n\n    ```", "```js\n          web: node server.js \n\n    ```", "```js\n          lib-cov \n          *.seed \n          *.log \n          *.csv \n          *.dat \n          *.out \n          *.pid \n          *.gz \n          *.swp \n\n          pids \n          logs \n          results \n          tmp \n          coverage \n\n          # API keys \n          .env \n\n          # Dependency directory \n          node_modules \n          bower_components \n          npm-debug.log \n\n          # Editors \n          .idea \n          *.iml \n\n          # OS metadata \n          .DS_Store \n          Thumbs.db \n\n    ```", "```js\n          // load passport module \n          var passport = require('passport'); \n          var LocalStrategy = require('passport-local').Strategy; \n          // load up the user model \n          var User = require('../models/User'); \n\n          passport.serializeUser(function(user, done) { \n            // serialize the user for the session \n            done(null, user.id); \n          }); \n\n          passport.deserializeUser(function(id, done) { \n            // deserialize the user \n            User.findById(id, function(err, user) { \n              done(err, user); \n            }); \n          }); \n\n          // using local strategy \n          passport.use(new LocalStrategy({ usernameField: 'email' }, \n           function(email, password, done) { \n\n            User.findOne({ email: email }, function(err, user) { \n              if (!user) { \n                // check errors and bring the messages \n                return done(null, false, { msg: 'The email: ' + email +\n                 ' is already taken. '}); \n              } \n              user.comparePassword(password, function(err, isMatch) { \n                if (!isMatch) { \n                  // check errors and bring the messages \n                  return done(null, false, { msg:'Invalid email or\n                  password'});   \n                } \n                return done(null, user); \n              }); \n            }); \n          }));\n\n    ```", "```js\n          // Render Home Page \n          exports.index = function(req, res) { \n            res.render('home', { \n              title: 'Home' \n            }); \n          };\n\n    ```", "```js\n  // import modules \n  var async = require('async'); \n  var crypto = require('crypto'); \n  var passport = require('passport'); \n  var User = require('../models/User'); \n\n  // authorization middleware \n  exports.ensureAuthenticated = function(req, res, next) { \n    if (req.isAuthenticated()) { \n      next(); \n    } else { \n      res.redirect('/login'); \n    } \n  }; \n\n  // logout \n  exports.logout = function(req, res) { \n    req.logout(); \n    res.redirect('/'); \n  };\n\n```", "```js\n    // login GET \n    exports.loginGet = function(req, res) { \n      if (req.user) { \n        return res.redirect('/'); \n      } \n      res.render('login', { \n        title: 'Log in' \n      }); \n    }; \n\n    // login POST \n    exports.loginPost = function(req, res, next) { \n      // validate login form fields \n      req.assert('email', 'Email is not valid').isEmail(); \n      req.assert('email', 'Empty email not allowed').notEmpty(); \n      req.assert('password', 'Empty password not allowed').notEmpty(); \n      req.sanitize('email').normalizeEmail({ remove_dots: false }); \n\n      var errors = req.validationErrors(); \n      if (errors) { \n        // Show errors messages for form validation \n        req.flash('error', errors); \n        return res.redirect('/login'); \n      } \n\n      passport.authenticate('local', function(err, user, info) { \n        if (!user) { \n          req.flash('error', info); \n          return res.redirect('/login') \n        } \n        req.logIn(user, function(err) { \n          res.redirect('/'); \n        }); \n      })(req, res, next); \n    }; \n\n```", "```js\n    // signup GET \n    exports.signupGet = function(req, res) { \n      if (req.user) { \n        return res.redirect('/'); \n      } \n      res.render('signup', { \n        title: 'Sign up' \n      }); \n    }; \n\n    // signup POST \n    exports.signupPost = function(req, res, next) { \n      // validate sign up form fields \n      req.assert('name', 'Empty name not allowed').notEmpty(); \n      req.assert('email', 'Email is not valid').isEmail(); \n      req.assert('email', 'Empty email is not allowed').notEmpty(); \n      req.assert('password', 'Password must be at least 4 characters \n        long').len(4); \n      req.sanitize('email').normalizeEmail({ remove_dots: false }); \n\n      var errors = req.validationErrors(); \n\n      if (errors) { \n        // Show errors messages for form validation \n        req.flash('error', errors); \n        return res.redirect('/signup'); \n      } \n\n      // Verify user email \n      User.findOne({ email: req.body.email }, function(err, user) { \n        if (user) { \n          // if used, show message and redirect \n          req.flash('error', { msg: 'The email is already taken.' }); \n          return res.redirect('/signup'); \n        } \n        // create an instance of user model with form data \n        user = new User({ \n          name: req.body.name, \n          email: req.body.email, \n          password: req.body.password \n        }); \n        // save user \n        user.save(function(err) { \n          req.logIn(user, function(err) { \n            res.redirect('/'); \n          }); \n        }); \n      }); \n    }; \n\n```", "```js\n    // profile account page \n    exports.accountGet = function(req, res) { \n      res.render('profile', { \n        title: 'My Account' \n      }); \n    }; \n\n    // update profile and change password \n    exports.accountPut = function(req, res, next) { \n      // validate sign up form fields \n      if ('password' in req.body) { \n        req.assert('password', 'Password must be at least 4 characters\n        long').len(4); \n        req.assert('confirm', 'Passwords must match') \n         .equals(req.body.password); \n      }\n      else { \n        req.assert('email', 'Email is not valid').isEmail(); \n        req.assert('email', 'Empty email is not allowed').notEmpty(); \n        req.sanitize('email').normalizeEmail({ remove_dots: false }); \n      } \n      var errors = req.validationErrors(); \n\n      if (errors) { \n        // Show errors messages for form validation \n        req.flash('error', errors); \n        return res.redirect('/pages'); \n      } \n\n      User.findById(req.user.id, function(err, user) { \n        // if form field password change \n        if ('password' in req.body) { \n          user.password = req.body.password; \n        }\n        else { \n          user.email = req.body.email; \n          user.name = req.body.name; \n        } \n        // save user data \n        user.save(function(err) { \n          // if password field change \n          if ('password' in req.body) { \n            req.flash('success', { msg: 'Password changed.' }); \n          } else if (err && err.code === 11000) { \n            req.flash('error', { msg: 'The email is already taken.' }); \n          } else { \n            req.flash('success', { msg: 'Profile updated.' }); \n          } \n          res.redirect('/account'); \n        }); \n      }); \n    };\n\n```", "```js\n    // profile DELETE \n    exports.accountDelete = function(req, res, next) { \n      User.remove({ _id: req.user.id }, function(err) { \n        req.logout(); \n        req.flash('info', { msg: 'Account deleted.' }); \n        res.redirect('/'); \n       }); \n    };\n\n```", "```js\n          // import modules \n          var crypto = require('crypto'); \n          var bcrypt = require('bcrypt-nodejs'); \n          var mongoose = require('mongoose'); \n\n          // using virtual attributes \n          var schemaOptions = { \n            timestamps: true, \n            toJSON: { \n              virtuals: true \n            } \n          }; \n\n          // create User schema \n          var userSchema = new mongoose.Schema({ \n            name: String, \n            email: { type: String, unique: true}, \n            password: String, \n            picture: String \n          }, schemaOptions); \n\n          // encrypt password \n          userSchema.pre('save', function(next) { \n            var user = this; \n            if (!user.isModified('password')) { return next(); } \n            bcrypt.genSalt(10, function(err, salt) { \n              bcrypt.hash(user.password, salt, null, function(err, hash) { \n                user.password = hash; \n                next(); \n              }); \n            }); \n          }); \n          // Checking equal password \n          userSchema.methods.comparePassword = function(password, cb) { \n            bcrypt.compare(password, this.password, function(err, isMatch) { \n              cb(err, isMatch); \n            }); \n          }; \n          // using virtual attributes \n          userSchema.virtual('gravatar').get(function() { \n            if (!this.get('email')) { \n              return 'https://gravatar.com/avatar/?s=200&d=retro'; \n            } \n            var md5 =\n            crypto.createHash('md5').update(this.get('email')).digest('hex'); \n            return 'https://gravatar.com/avatar/' + md5 + '?s=200&d=retro'; \n          }); \n\n          var User = mongoose.model('User', userSchema); \n\n          module.exports = User;\n\n    ```", "```js\n          /*! \n          * Bootstrap v3.3.6 (http://getbootstrap.com) \n          * Copyright 2011-2015 Twitter, Inc. \n          * Licensed under MIT (https://github.com/twbs/bootstrap/blob/\n            master/LICENSE) \n          */ \n\n          // Core variables and mixins \n          @import \"bootstrap/variables\"; \n          @import \"bootstrap/mixins\"; \n\n          // Reset and dependencies \n          @import \"bootstrap/normalize\"; \n          @import \"bootstrap/print\"; \n          @import \"bootstrap/glyphicons\"; \n\n          // Core CSS \n          @import \"bootstrap/scaffolding\"; \n          @import \"bootstrap/type\"; \n          @import \"bootstrap/code\"; \n          @import \"bootstrap/grid\"; \n          @import \"bootstrap/tables\"; \n          @import \"bootstrap/forms\"; \n          @import \"bootstrap/buttons\"; \n\n          // Components \n          @import \"bootstrap/component-animations\";\n          @import \"bootstrap/dropdowns\"; \n          @import \"bootstrap/button-groups\"; \n          @import \"bootstrap/input-groups\"; \n          @import \"bootstrap/navs\"; \n          @import \"bootstrap/navbar\"; \n          @import \"bootstrap/breadcrumbs\"; \n          @import \"bootstrap/pagination\"; \n          @import \"bootstrap/pager\"; \n          @import \"bootstrap/labels\"; \n          @import \"bootstrap/badges\"; \n          @import \"bootstrap/jumbotron\"; \n          @import \"bootstrap/thumbnails\"; \n          @import \"bootstrap/alerts\"; \n          @import \"bootstrap/progress-bars\"; \n          @import \"bootstrap/media\"; \n          @import \"bootstrap/list-group\"; \n          @import \"bootstrap/panels\"; \n          @import \"bootstrap/responsive-embed\"; \n          @import \"bootstrap/wells\"; \n          @import \"bootstrap/close\"; \n\n          // Components w/ JavaScript \n          @import \"bootstrap/modals\"; \n          @import \"bootstrap/tooltip\"; \n          @import \"bootstrap/popovers\"; \n          @import \"bootstrap/carousel\"; \n\n          // Utility classes \n          @import \"bootstrap/utilities\"; \n          @import \"bootstrap/responsive-utilities\";\n\n    ```", "```js\n    // import bootstrap \n    @import \"vendor/bootstrap\"; \n\n    // Structure \n    html { \n      position: relative; \n      min-height: 100%; \n    } \n\n    body { \n      margin-bottom: 44px; \n    } \n\n    footer { \n      position: absolute; \n      width: 100%; \n      height: 44px; \n      padding: 10px 30px; \n      bottom: 0; \n      background-color: #fff; \n      border-top: 1px solid #e0e0e0; \n    } \n\n    .login-container { \n      max-width: 555px; \n    } \n\n    // Warning \n    .alert { \n      border-width: 0 0 0 3px; \n    } \n\n    // Panels \n    .panel { \n      border: solid 1px rgba(160, 160, 160, 0.3); \n      box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.1); \n    } \n\n    .panel-heading + .panel-body { \n      padding-top: 0; \n    } \n\n    .panel-body { \n      h1, h2, h3, h4, h5, h6 { \n        margin-top: 0; \n      } \n    } \n\n    .panel-title { \n      font-size: 18px; \n      color: #424242; \n    } \n\n    // Form \n    textarea { \n      resize: none; \n    } \n\n    .form-control { \n      height: auto; \n      padding: 8px 12px; \n      border: 2px solid #ebebeb; \n      border-radius: 0; \n      box-shadow: inset 0 1px 2px rgba(150, 160, 175, 0.1), inset 0 1px\n      15px rgba(150, 160, 175, 0.05); \n    } \n\n    .form-group > label { \n      text-transform: uppercase; \n      font-size: 13px; \n    } \n\n```", "```js\n/ layouts\n/ pages\n/ partials\n\n```", "```js\n    <!DOCTYPE html> \n    <html> \n      <head> \n        <meta charset=\"utf-8\" /> \n        <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\"> \n        <meta name=\"viewport\" content=\"width=device-width, initial-\n         scale=1\">\n        <title>Chapter-10</title> \n          <title>{{title}}</title> \n            <link rel=\"stylesheet\" href=\"/css/main.css\"> \n      </head> \n      <body> \n        {% include \"../partials/header.html\" %} \n          {% block content %} \n          {% endblock %} \n        {% include \"../partials/footer.html\" %} \n          <script src=\"img/jquery.js\"></script> \n          <script src=\"img/bootstrap.js\"></script> \n          <script src=\"img/main.js\"></script> \n      </body> \n    </html>\n\n```", "```js\n          {% extends '../layouts/main.html' %} \n\n          {% block content %} \n            <div class=\"container\"> \n              {% if messages.success %} \n                <div role=\"alert\" class=\"alert alert-success\"> \n                  {% for item in messages.success %} \n                    <div>{{ item.msg }}</div> \n                  {% endfor %} \n                </div> \n              {% endif %} \n              {% if messages.error %} \n                <div role=\"alert\" class=\"alert alert-danger\"> \n                  {% for item in messages.error %} \n                    <div>{{ item.msg }}</div> \n                  {% endfor %} \n                </div> \n              {% endif %} \n              {% if messages.info %} \n                <div role=\"alert\" class=\"alert alert-info\"> \n                  {% for item in messages.info %} \n                    <div>{{ item.msg }}</div> \n                  {% endfor %} \n                </div> \n              {% endif %} \n              <div class=\"app\"> \n                <div class=\"jumbotron\"> \n                  <h1 class=\"text-center\">Node 6 Bluenprints Book</h1> \n                    <p>This example illustrate how to build, test and deploy\n                       a Node.js application using: Github, Heroku, MOngolab,\n                       Codeship and Docker.\n                    </p> \n                </div> \n              </div> \n            </div> \n          {% endblock %}\n\n    ```", "```js\n          {% extends '../layouts/main.html' %} \n\n          {% block content %} \n            <div class=\"login-container container\"> \n              <div class=\"panel\"> \n                <div class=\"panel-body\"> \n                  {% if messages.error %} \n                    <div role=\"alert\" class=\"alert alert-danger\"> \n                      {% for item in messages.error %} \n                        <div>{{ item.msg }}</div> \n                      {% endfor %} \n                    </div> \n                  {% endif %} \n                  <form method=\"POST\"> \n                    <legend>Welcome to login</legend> \n                    <div class=\"form-group\"> \n                      <label for=\"email\">Email</label> \n                      <input type=\"email\" name=\"email\" id=\"email\" \n                        placeholder=\"Email\" class=\"form-control\" autofocus> \n                    </div> \n                    <div class=\"form-group\"> \n                      <label for=\"password\">Password</label> \n                      <input type=\"password\" name=\"password\" id=\"password\"\n                       placeholder=\"Password\" class=\"form-control\"> \n                    </div> \n                    <button type=\"submit\" class=\"btn btn-primary btn-block\">\n                      Sign in</button> \n                  </form> \n                </div> \n              </div> \n              <p class=\"text-center\">Don't have an account? <a href=\"/signup\">\n                <strong>Sign up</strong></a>, it's free.</p> \n            </div> \n          {% endblock %}\n\n    ```", "```js\n          {% extends '../layouts/main.html' %} \n\n          {% block content %} \n            <div class=\"container\"> \n              <div class=\"panel\"> \n                <div class=\"panel-body\"> \n                  {% if messages.success %} \n                    <div role=\"alert\" class=\"alert alert-success\"> \n                      {% for item in messages.success %} \n                        <div>{{ item.msg }}</div> \n                      {% endfor %} \n                    </div> \n                  {% endif %} \n                  {% if messages.error %} \n                    <div role=\"alert\" class=\"alert alert-danger\"> \n                      {% for item in messages.error %} \n                        <div>{{ item.msg }}</div> \n                      {% endfor %} \n                    </div> \n                  {% endif %} \n                  <form method=\"POST\" action=\"/account?_method=PUT\"> \n                    <legend>Account Details</legend> \n                    <div class=\"form-group\"> \n                        <label for=\"email\">Email</label> \n                        <input type=\"email\" name=\"email\" id=\"email\"\n                          class=\"form-control\" value=\"{{user.email}}\"> \n                    </div> \n                    <div class=\"form-group\"> \n                        <label for=\"name\">Name</label> \n                        <input type=\"text\" name=\"name\" id=\"name\" class=\"form-\n                          control\" value=\"{{user.name}}\"> \n                    </div> \n                      <br> \n                    <div class=\"form-group\"> \n                        <button type=\"submit\" class=\"btn btn-primary\">\n                          Update Profile</button> \n                    </div> \n                  </form> \n                </div> \n              </div> \n              <div class=\"panel\"> \n                <div class=\"panel-body\"> \n                  <form method=\"POST\" action=\"/account?_method=PUT\"> \n                    <legend>Change Password</legend> \n                    <div class=\"form-group\"> \n                      <label for=\"password\">New Password</label> \n                        <input type=\"password\" name=\"password\" id=\"password\"\n                          class=\"form-control\"> \n                    </div> \n                    <div class=\"form-group\"> \n                      <label for=\"confirm\">Confirm Password</label> \n                        <input type=\"password\" name=\"confirm\" id=\"confirm\"\n                          class=\"form-control\"> \n                    </div> \n                    <div class=\"form-group\"> \n                        <button type=\"submit\" class=\"btn btn-success\">\n                          Change Password</button> \n                    </div> \n                  </form> \n                </div> \n              </div> \n              <div class=\"panel\"> \n                <div class=\"panel-body\"> \n                  <form method=\"POST\" action=\"/account?_method=DELETE\"> \n                    <legend>Delete My Account</legend> \n                    <div class=\"form-group\"> \n                      <p class=\"text-muted\">It is irreversible action.</p> \n                        <button type=\"submit\" class=\"btn btn-danger\">\n                          Delete</button> \n                      </div> \n                  </form> \n                </div> \n              </div> \n            </div> \n          {% endblock %}\n    ```", "```js\n          {% extends '../layouts/main.html' %} \n\n          {% block content %} \n          <div class=\"login-container container\"> \n            <div class=\"panel\"> \n              <div class=\"panel-body\"> \n                {% if messages.error %} \n                  <div role=\"alert\" class=\"alert alert-danger\"> \n                    {% for item in messages.error %} \n                      <div>{{ item.msg }}</div> \n                    {% endfor %} \n                  </div> \n                {% endif %} \n                <form method=\"POST\"> \n                  <legend>Create an account</legend> \n                  <div class=\"form-group\"> \n                    <label for=\"name\">Name</label> \n                    <input type=\"text\" name=\"name\" id=\"name\" \n                      placeholder=\"Name\"\n                      class=\"form-control\" autofocus> \n                  </div> \n                  <div class=\"form-group\"> \n                    <label for=\"email\">Email</label> \n                    <input type=\"email\" name=\"email\" id=\"email\"\n                      placeholder=\"Email\" class=\"form-control\"> \n                  </div> \n                  <div class=\"form-group\"> \n                    <label for=\"password\">Password</label> \n                    <input type=\"password\" name=\"password\" id=\"password\" \n                      placeholder=\"Password\" class=\"form-control\"> \n                  </div> \n                  <button type=\"submit\" class=\"btn btn-primary btn-block\">\n                    Sign up</button> \n                </form> \n              </div> \n            </div> \n            <p class=\"text-center\"> Already have an account? <a href=\"/login\">\n              <strong>Sign in</strong></a></p> \n          </div> \n          {% endblock %}\n\n    ```", "```js\n          <footer> \n            <div class=\"container\"> \n              <p>Node.js 6 Blueprints Book \u00a9 2016\\. All Rights Reserved.</p> \n            </div> \n          </footer>\n\n    ```", "```js\n          <nav class=\"navbar navbar-default navbar-static-top\"> \n            <div class=\"container\"> \n              <div class=\"navbar-header\"> \n                <button type=\"button\" data-toggle=\"collapse\"\n                  data-target=\"#navbar\" class=\"navbar-toggle collapsed\"> \n                  <span class=\"sr-only\">Toggle navigation</span> \n                  <span class=\"icon-bar\"></span> \n                  <span class=\"icon-bar\"></span> \n                  <span class=\"icon-bar\"></span> \n                </button> \n                <a href=\"/\" class=\"navbar-brand\">N6B</a> \n              </div> \n              <div id=\"navbar\" class=\"navbar-collapse collapse\"> \n                <ul class=\"nav navbar-nav\"> \n                  <li class=\"{% if  title == 'Home' %}active{% endif %}\">\n                  <a href=\"/\">Home</a></li> \n                </ul> \n              <ul class=\"nav navbar-nav navbar-right\"> \n              {% if user %} \n                <li class=\"dropdown\"> \n                  <a href=\"#\" data-toggle=\"dropdown\"\n                    class=\"navbar-avatar dropdown-toggle\"> \n                    {% if user.picture %} \n                      <img src=\"img/{{user.picture}}\"> \n                    {% else %} \n                      <img src=\"img/{{user.gravatar}}\"> \n                    {% endif %} \n                    {% if user.name %} \n                      {{user.name}} \n                    {% else %} \n                      {{user.email}} \n                    {% endif %} \n                    <i class=\"caret\"></i> \n                  </a> \n                  <ul class=\"dropdown-menu\"> \n                    <li><a href=\"/account\">My Account</a></li> \n                    <li class=\"divider\"></li> \n                    <li><a href=\"/logout\">Logout</a></li> \n                  </ul> \n                </li> \n              {% else %} \n                <li class=\"{% if  title == 'Log in' %}active{% endif %}\">\n                  <a href=\"/login\">Log in</a></li> \n                <li class=\"{% if  title == 'Sign up' %}active{% endif %}\">\n                  <a href=\"/signup\">Sign up</a></li> \n              {% endif %} \n              </ul> \n              </div> \n            </div> \n          </nav>\n\n    ```", "```js\n\"devDependencies\": { \n    \"mocha\": \"^2.4.5\", \n    \"supertest\": \"^1.2.0\" \n  } \n\n```", "```js\n          // import modules \n          var request = require('supertest'); \n          var server = require('../server'); \n\n          // Test 01 \n          describe('GET /', function() { \n            it('should render ok', function(done) { \n              request(server) \n              .get('/') \n              // expected result \n              .expect(200, done); \n            }); \n          }); \n\n          // Test 02 \n          describe('GET /bikes', function() { \n            it('should not found', function(done) { \n              request(server) \n              .get('/bikes') \n              // expected result \n             .expect(404, done); \n           }); \n         }); \n\n    ```", "```js\n          SESSION_SECRET=\"3454321234\" \n          MONGODB=\"localhost\" \n\n    ```", "```js\n    npm install\n\n    ```", "```js\n    npm test\n\n    ```", "```js\n     npm start\n\n    ```", "```js\n          database username: nb6 \n          database password: node6 \n\n    ```", "```js\n    mongodb://<user>:<password>@ds023074.mlab.com:23074/nb6 \n\n```", "```js\n     git init\n\n    ```", "```js\n     git remote add origin https://github.com/<your github account \n           name>/n6b.git\n\n    ```", "```js\n     git add .\n\n    ```", "```js\n     git commit -m \"initial commit\"\n\n    ```", "```js\n     git push -u origin master\n\n    ```", "```js\n          # By default we use the Node.js version set in your package.json\n            or the latest \n          # version from the 0.10 release \n          # \n          # You can use nvm to install any Node.js (or io.js) version you require. \n          # nvm install 4.0 \n          # nvm install 0.10 \n          npm install \n          npm run build \n\n    ```", "```js\n     npm test\n\n    ```", "```js\n docker --version\n docker-compose --version\n docker-machine --version\n\n```", "```js\n          FROM node:argon \n\n          # Create app directory \n          RUN mkdir -p /usr/src/app \n          WORKDIR /usr/src/app \n\n          # Install app dependencies \n          COPY package.json /usr/src/app/ \n          RUN npm install \n\n          ENV PORT 3000 \n          ENV DB_PORT_27017_TCP_ADDR db \n\n          # Bundle app source \n          COPY . /usr/src/app \n\n          EXPOSE 3000 \n          CMD [ \"npm\", \"start\" ] \n\n    ```", "```js\n          app: \n            build: . \n            ports: \n              - \"3000:3000\" \n            links: \n              - db \n\n          db: \n            image: mongo \n            ports: \n              - \"27017:27017\" \n\n    ```", "```js\n     docker build -t <your docker user name>/<projectname> .\n\n    ```", "```js\n     docker images\n\n    ```", "```js\n          mongoose.connect('mongodb://' + (process.env.DB_PORT_27017_TCP_ADDR\n          || process.env.MONGODB) + '/<database name>'); \n\n    ```", "```js\n          SESSION_SECRET=\n           'ae37a4318f1218302e16e1516e4144df8a273798b151ca06062c142bbfcc23bc' \n\n          MONGODB='localhost:27017' \n\n    ```", "```js\n     docker pull mongo\n\n    ```", "```js\n     docker run -d --name db mongo\n\n    ```", "```js\n    docker run -p 3000:3000 --link db:db <your docker user name>\n            /<projectname>\n\n    ```", "```js\n     docker login\n\n    ```", "```js\n     docker push <your docker user name>/<projectname>\n\n    ```"]