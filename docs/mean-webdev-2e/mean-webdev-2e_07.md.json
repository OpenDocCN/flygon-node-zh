["```js\nlet firstName: string = \"John\";\nlet lastName = 'Smith';\nlet height: number = 6;\nlet isDone: boolean = false;\n```", "```js\nvar numbers:number[] = [1, 2, 3];\nvar names:Array<string> = ['Alice', 'Helen', 'Claire'];\n```", "```js\nvar x: any;\nvar y;\n```", "```js\ninterface IVehicle {\n  wheels: number;\n  engine: string;\n  drive();\n}\n```", "```js\nclass Car implements IVehicle  {\n  wheels: number;\n  engine: string;\n\n  constructor(wheels: number, engine: string) {\n    this.wheels = wheels;\n    this.engine = engine;\n  }\n\n  drive() {\n    console.log('Driving...');\n  }\n}\n```", "```js\nfunction Decorator(target: any) {\n\n}\n@Decorator\nclass MyClass {\n\n}\n```", "```js\nfunction DecoratorWithArgs(options: Object) {\n  return (target: Object) => {\n\n  }\n}\n\n@DecoratorWithArgs({ type: 'SomeType' })\nclass MyClass {\n\n}\n```", "```js\nimport { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { RouterModule }   from '@angular/router';\n\nimport { AppComponent }       from './app.component';\nimport { AppRoutes }       from './app.routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(AppRoutes),\n  ],\n  declarations: [\n    AppComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```", "```js\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mean-app',\n  template: '<h1>I AM AN APPLICATION COMPONENT</h1>'\n})\nexport class AppComponent { \t}\n```", "```js\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mean-app',\n  templateUrl: 'app.template.html'\n})\nexport class AppComponent { \t}\n```", "```js\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mean-app',\n  template: '<h1>{{title}}</h1>'\n})\nexport class AppComponent {\n  title = 'MEAN Application';\n}\n```", "```js\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mean-app',\n  template: '<button [disabled]=\"isButtonDisabled\">My Button</button>'\n})\nexport class AppComponent {\n  isButtonDisabled = true;\n}\n```", "```js\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mean-app',\n  template: '<button (click)=\"showMessage()\">Show Message</button>'\n})\nexport class AppComponent {\n  showMessage() {\n    alert('This is a message!')\n  }\n}\n```", "```js\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mean-app',\n  template: '<h1>Hello {{name}}</h1><br><input [(ngModel)]=\"name\">'\n})\nexport class AppComponent {\n  name = ''\n}\n```", "```js\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'sample-component',\n  template: '<h1>I'm a component</h1>'\n})\nexport class SampleComponent {\n\n}\n```", "```js\nimport { Component } from '@angular/core';\nimport { SampleComponent } from 'sample.component';\n\n@Component({\n  selector: 'mean-app',\n  template: '<sample-component></sample-component>',\n  directives: [SampleComponent]\n})\nexport class AppComponent {\n\n}\n```", "```js\nconst Notifier = function() {\n  this.userService = new UserService();\n};\n\nNotifier.prototype.notify = function() {\n  const user = this.userService.getUser();\n\n  if (user.role === 'admin') {\n    alert('You are an admin!');\n  } else {\n    alert('Hello user!');\n  }\n};\n```", "```js\nconst Notifier = function(userService) {\n  this.userService = userService;\n};\n\nNotifier.prototype.notify = function() {\n  const user = this.userService.getUser();\n\n  if (user.role === 'admin') {\n    alert('You are an admin!');\n  } else {\n    alert('Hello user!');\n  }\n};\n```", "```js\nimport { Component } from '@angular/core';\nimport { SomeService } from '../users/services/some.service';\n\n@Component({\n  selector: 'some-component',\n  template: 'Hello Services',\n providers: [SomeService]\n})\nexport class SomeComponent {\n  user = null;\n  constructor (private _someService: SomeService) {\n    this.user = _someService.user;\n  }\n}\n```", "```js\nimport { Routes } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nexport const HomeRoutes: Routes = [{\n  path: '',\n  component: HomeComponent,\n}];\n```", "```js\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mean-app',\n  template: '<h1>Application Title</h1>\n    <br>\n <router-outlet></router-outlet>'\n})\nexport class AppComponent { ... }\n```", "```js\n<a [routerLink]=\"['/about']\">Some</a>\n```", "```js\n{\n  \"name\": \"MEAN\",\n  \"version\": \"0.0.7\",\n \"scripts\": {\n \"tsc\": \"tsc\",\n \"tsc:w\": \"tsc -w\",\n \"app\": \"node server\",\n \"start\": \"concurrently \\\"npm run tsc:w\\\" \\\"npm run app\\\" \",\n \"postinstall\": \"typings install\"\n },\n  \"dependencies\": {\n \"@angular/common\": \"2.1.1\",\n \"@angular/compiler\": \"2.1.1\",\n \"@angular/core\": \"2.1.1\",\n \"@angular/forms\": \"2.1.1\",\n \"@angular/http\": \"2.1.1\",\n \"@angular/platform-browser\": \"2.1.1\",\n \"@angular/platform-browser-dynamic\": \"2.1.1\",\n \"@angular/router\": \"3.1.1\",\n    \"body-parser\": \"1.15.2\",\n \"core-js\": \"2.4.1\",\n    \"compression\": \"1.6.0\",\n    \"connect-flash\": \"0.1.1\",\n    \"ejs\": \"2.5.2\",\n    \"express\": \"4.14.0\",\n    \"express-session\": \"1.14.1\",\n    \"method-override\": \"2.3.6\",\n    \"mongoose\": \"4.6.5\",\n    \"morgan\": \"1.7.0\",\n    \"passport\": \"0.3.2\",\n    \"passport-facebook\": \"2.1.1\",\n    \"passport-google-oauth\": \"1.0.0\",\n    \"passport-local\": \"1.0.0\",\n    \"passport-twitter\": \"1.0.4\",\n \"reflect-metadata\": \"0.1.8\",\n \"rxjs\": \"5.0.0-beta.12\",\n \"systemjs\": \"0.19.39\",\n \"zone.js\": \"0.6.26\"\n  },\n  \"devDependencies\": {\n \"concurrently\": \"3.1.0\",\n \"traceur\": \"0.0.111\",\n    \"typescript\": \"2.0.3\",\n    \"typings\": \"1.4.0\"\n  }\n}\n```", "```js\n{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"module\": \"system\",\n    \"moduleResolution\": \"node\",\n    \"sourceMap\": true,\n    \"emitDecoratorMetadata\": true,\n    \"experimentalDecorators\": true,\n    \"removeComments\": false,\n    \"noImplicitAny\": false\n  },\n  \"exclude\": [\n    \"node_modules\",\n    \"typings/main\",\n    \"typings/main.d.ts\"\n  ]\n}\n```", "```js\n{\n  \"globalDependencies\": {\n  \"core-js\": \"registry:dt/core-js#0.0.0+20160914114559\",\n    \"jasmine\": \"registry:dt/jasmine#2.5.0+20161025102649\",\n    \"socket.io-client\": \"registry:dt/socket.io-client#1.4.4+20160317120654\",\n    \"node\": \"registry:dt/node#6.0.0+20161102143327\"\n  }\n}\n```", "```js\n$ npm install\n\n```", "```js\nconst path = require('path'),\nconst config = require('./config'),\nconst express = require('express'),\nconst morgan = require('morgan'),\nconst compress = require('compression'),\nconst bodyParser = require('body-parser'),\nconst methodOverride = require('method-override'),\nconst session = require('express-session'),\nconst flash = require('connect-flash'),\nconst passport = require('passport');\n\nmodule.exports = function() {\n  const app = express();\n\n  if (process.env.NODE_ENV === 'development') {\n    app.use(morgan('dev'));\n  } else if (process.env.NODE_ENV === 'production') {\n    app.use(compress());\n  }\n\n  app.use(bodyParser.urlencoded({\n    extended: true\n  }));\n  app.use(bodyParser.json());\n  app.use(methodOverride());\n\n  app.use(session({\n    saveUninitialized: true,\n    resave: true,\n    secret: config.sessionSecret\n  }));\n\n  app.set('views', './app/views');\n  app.set('view engine', 'ejs');\n\n  app.use(flash());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  app.use('/', express.static(path.resolve('./public')));\n app.use('/lib', express.static(path.resolve('./node_modules')));\n\n  require('../app/routes/users.server.routes.js')(app);\n  require('../app/routes/index.server.routes.js')(app);\n\n  return app;\n};\n```", "```js\nmodule.exports = function(app) {\n  const index = require('../controllers/index.server.controller');\n\n  app.get('/*', index.render);\n};\n```", "```js\nimport { NgModule }       from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\n\nimport { AppComponent }       from './app.component';\n\n@NgModule({\n  imports: [\n    BrowserModule\n  ],\n  declarations: [\n    AppComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```", "```js\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mean-app',\n  template: '<h1>Hello World</h1>',\n})\nexport class AppComponent {}\n```", "```js\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n```", "```js\n(function(global) {\n  var packages = {\n    app: {\n      main: './bootstrap.js',\n      defaultExtension: 'js'\n    }\n  };\n\n  var map = {\n    '@angular': 'lib/@angular',\n    'rxjs': 'lib/rxjs'\n  };\n\n  var ngPackageNames = [\n    'common',\n    'compiler',\n    'core',\n    'forms',\n    'http',\n    'router',\n    'platform-browser',\n    'platform-browser-dynamic',\n  ];\n\n  ngPackageNames.forEach(function(pkgName) {\t\n    packages['@angular/' + pkgName] = { main: '/bundles/' + pkgName + '.umd.js', defaultExtension: 'js' };\n  });\n\n  System.config({\n    defaultJSExtensions: true,\n    transpiler: null,\n    packages: packages,\n    map: map\n  });\n})(this);\n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n  <title><%= title %></title>\n <base href=\"/\">\n</head>\n<body>\n  <mean-app>\n    <h1>Loading...</h1>\n  </mean-app>\n\n <script src=\"img/shim.min.js\"></script>\n <script src=\"img/zone.js\"></script>\n <script src=\"img/Reflect.js\"></script>\n <script src=\"img/system.js\"></script>\n\n <script src=\"img/systemjs.config.js\"></script>\n <script>\n System.import('app').catch(function(err){ console.error(err); });\n </script>\n</body>\n</html>\n```", "```js\n$ npm start\n\n```", "```js\nexports.render = function(req, res) {\n  const user = (!req.user) ? null : {\n    _id: req.user.id,\n    firstName: req.user.firstName,\n    lastName: req.user.lastName\n  };\n\n  res.render('index', {\n    title: 'Hello World',\n    user: JSON.stringify(user)\n  });\n};\n```", "```js\n<!DOCTYPE html>\n<html>\n<head>\n  <title><%= title %></title>\n  <base href=\"/\">\n</head>\n<body>\n  <mean-app>\n    <h1>Loading...</h1>\n  </mean-app>\n\n <script type=\"text/javascript\">\n window.user = <%- user || 'null' %>;\n </script>\n\n  <script src=\"img/shim.min.js\"></script>\n  <script src=\"img/zone.js\"></script>\n  <script src=\"img/Reflect.js\"></script>\n  <script src=\"img/system.js\"></script>\n\n  <script src=\"img/systemjs.config.js\"></script>\n\n  <script>\n    System.import('app').catch(function(err){ console.error(err); });\n  </script>\n</body>\n</html>\n```", "```js\nconst User = require('mongoose').model('User'),\n  passport = require('passport');\n\nconst getErrorMessage = function(err) {\n  const message = '';\n\n  if (err.code) {\n    switch (err.code) {\n      case 11000:\n      case 11001:\n      message = 'Username already exists';\n      break;\n      default:\n      message = 'Something went wrong';\n    }\n  } else {\n    for (let errName in err.errors) {\n      if (err.errors[errName].message) message = err.errors[errName].message;\n    }\n  }\n\n  return message;\n};\n\nexports.signin = function(req, res, next) {\n  passport.authenticate('local', function(err, user, info) {\n    if (err || !user) {\n      res.status(400).send(info);\n    } else {\n      // Remove sensitive data before login\n      user.password = undefined;\n      user.salt = undefined;\n\n      req.login(user, function(err) {\n        if (err) {\n          res.status(400).send(err);\n        } else {\n          res.json(user);\n        }\n      });\n    }\n  })(req, res, next);\n};\n\nexports.signup = function(req, res) {\n  const user = new User(req.body);\n  user.provider = 'local';\n\n  user.save((err) => {\n    if (err) {\n      return res.status(400).send({\n        message: getErrorMessage(err)\n      });\n    } else {\n      // Remove sensitive data before login\n      user.password = undefined;\n      user.salt = undefined;\n\n      req.login(user, function(err) {\n        if (err) {\n          res.status(400).send(err);\n        } else {\n          res.json(user);\n        }\n      });\n    }\n  });\n};\n\nexports.signout = function(req, res) {\n  req.logout();\n  res.redirect('/');\n};\n\nexports.saveOAuthUserProfile = function(req, profile, done) {\n  User.findOne({\n    provider: profile.provider,\n    providerId: profile.providerId\n  }, function(err, user) {\n    if (err) {\n      return done(err);\n    } else {\n      if (!user) {\n        const possibleUsername = profile.username ||\n        ((profile.email) ? profile.email.split('@')[0] : '');\n\n        User.findUniqueUsername(possibleUsername, null,\n        function(availableUsername) {\n          profile.username = availableUsername;\n\n          user = new User(profile);\n\n          user.save((err) => {\n            if (err) {\n              const message = _this.getErrorMessage(err);\n\n              req.flash('error', message);\n              return res.redirect('/signup');\n            }\n\n            return done(err, user);\n          });\n        });\n      } else {\n        return done(err, user);\n      }\n    }\n  });\n};\n```", "```js\nconst users = require('../../app/controllers/users.server.controller'),\n  passport = require('passport');\n\nmodule.exports = function(app) {\n  app.route('/api/auth/signup').post(users.signup);\n  app.route('/api/auth/signin').post(users.signin);\n  app.route('/api/auth/signout').get(users.signout);\n\n  app.get('/api/oauth/facebook', passport.authenticate('facebook', {\n    failureRedirect: '/signin'\n  }));\n  app.get('/api/oauth/facebook/callback', passport.authenticate('facebook', {\n    failureRedirect: '/signin',\n    successRedirect: '/'\n  }));\n\n  app.get('/api/oauth/twitter', passport.authenticate('twitter', {\n     failureRedirect: '/signin'\n  }));\n  app.get('/api/oauth/twitter/callback', passport.authenticate('twitter', {\n    failureRedirect: '/signin',\n    successRedirect: '/'\n  }));\n\n  app.get('/api/oauth/google', passport.authenticate('google', {\n    failureRedirect: '/signin',\n    scope: [\n      'https://www.googleapis.com/auth/userinfo.profile',\n      'https://www.googleapis.com/auth/userinfo.email'\n    ],\n  }));\n  app.get('/api/oauth/google/callback', passport.authenticate('google', {\n    failureRedirect: '/signin',\n    successRedirect: '/'\n  }));\n\n};\n```", "```js\nimport { NgModule }       from '@angular/core';\nimport { FormsModule }    from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { AuthenticationRoutes } from './authentication.routes';\nimport { AuthenticationComponent } from './authentication.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    RouterModule.forChild(AuthenticationRoutes),\n  ],\n  declarations: [\n    AuthenticationComponent,\n    SigninComponent,\n    SignupComponent,\n  ]\n})\nexport class AuthenticationModule {}\n```", "```js\nimport { Component } from '@angular/core';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\n@Component({\n  selector: 'authentication',\n  templateUrl: 'app/authentication/authentication.template.html',\n})\nexport class AuthenticationComponent { }\n```", "```js\nimport { Routes } from '@angular/router';\n\nimport { AuthenticationComponent } from './authentication.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\n\nexport const AuthenticationRoutes: Routes = [{\n  path: 'authentication',\n  component: AuthenticationComponent,\n  children: [\n    { path: 'signin', component: SigninComponent },\n    { path: 'signup', component: SignupComponent },\n  ],\n}];\n```", "```js\n<div>\n  <a href=\"/api/oauth/google\">Sign in with Google</a>\n  <a href=\"/api/oauth/facebook\">Sign in with Facebook</a>\n  <a href=\"/api/oauth/twitter\">Sign in with Twitter</a>\n  <router-outlet></router-outlet>\n</div>\n```", "```js\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'signin',\n  templateUrl: 'app/authentication/signin/signin.template.html'\n})\nexport class SigninComponent {\n  errorMessage: string;\n  credentials: any = {};\n\n  constructor (private _authenticationService: AuthenticationService, private _router: Router) {\t}\n\n  signin() {\n    this._authenticationService.signin(this.credentials).subscribe(result  => this._router.navigate(['/']),\n      error =>  this.errorMessage = error );\n  }\n}\n```", "```js\n<form (ngSubmit)=\"signin()\">\n  <div>\n    <label>Username:</label>\n    <input type=\"text\" [(ngModel)]=\"credentials.username\" name=\"username\">\n  </div>\n  <div>\n    <label>Password:</label>\n    <input type=\"password\" [(ngModel)]=\"credentials.password\" name=\"password\">\n  </div>\n  <div>\n    <input type=\"submit\" value=\"Sign In\">\n  </div>\n  <span>{{errorMessage}}</span>\n</form>\n```", "```js\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../authentication.service';\n\n@Component({\n  selector: 'signup',\n  templateUrl: 'app/authentication/signup/signup.template.html'\n})\nexport class SignupComponent {\n  errorMessage: string;\n  user: any = {};\n\n  constructor (private _authenticationService: \n    AuthenticationService,\n    private _router: Router) {}\n\n  signup() {\n    this._authenticationService.signup(this.user)\n    .subscribe(result  => this._router.navigate(['/']),\n    error =>  this.errorMessage = error);\n  }\n}\n```", "```js\n<form (ngSubmit)=\"signup()\">\n  <div>\n  <label>First Name:</label>\n    <input type=\"text\" [(ngModel)]=\"user.firstName\" name=\"firstName\">\n  </div>\n  <div>\n    <label>Last Name:</label>\n    <input type=\"text\" [(ngModel)]=\"user.lastName\" name=\"lastName\">\n  </div>\n  <div>\n    <label>Email:</label>\n    <input type=\"text\" [(ngModel)]=\"user.email\" name=\"email\">\n  </div>\n  <div>\n    <label>Username:</label>\n    <input type=\"text\" [(ngModel)]=\"user.username\" name=\"username\">\n  </div>\n  <div>\n    <label>Password:</label>\n    <input type=\"password\" [(ngModel)]=\"user.password\" name=\"password\">\n  </div>\n  <div>\n    <input type=\"submit\" value=\"Sign up\" />\n  </div>\n  <span>{{errorMessage}}</span>\n</form>\n```", "```js\nimport 'rxjs/Rx';\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class AuthenticationService {\n  public user = window['user'];\n\n  private _signinURL = 'api/auth/signin';\n  private _signupURL = 'api/auth/signup';\n\n  constructor (private http: Http) {\n\n  }\n  isLoggedIn(): boolean {\n    return (!!this.user);\n  }\n\n  signin(credentials: any): Observable<any> {\n    let body = JSON.stringify(credentials);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(this._signinURL, body, options)\n    .map(res => this.user = res.json())\n    .catch(this.handleError)\n  }\n\n  signup(user: any): Observable<any> {\n    let body = JSON.stringify(user);\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(this._signupURL, body, options)\n    .map(res => this.user = res.json())\n    .catch(this.handleError)\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().message || 'Server error');\n  }\n}\n```", "```js\nimport { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { HomeRoutes } from './home.routes';\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(HomeRoutes),\n  ],\n  declarations: [\n    HomeComponent,\n  ]\n})\nexport class HomeModule {}\n```", "```js\nimport { Component } from '@angular/core';\nimport { AuthenticationService } from '../authentication/authentication.service';\n\n@Component({\n  selector: 'home',\n  templateUrl: './app/home/home.template.html'\n})\nexport class HomeComponent {\n  user: any;\n\n  constructor (private _authenticationService: AuthenticationService) {\n    this.user = _authenticationService.user;\n  }\n}\n```", "```js\n<div *ngIf=\"user\">\n  <h1>Hello {{user.firstName}}</h1>\n  <a href=\"/api/auth/signout\">Signout</a>\n</div>\n\n<div *ngIf=\"!user\">\n  <a [routerLink]=\"['/authentication/signup']\">Signup</a>\n  <a [routerLink]=\"['/authentication/signin']\">Signin</a>\n</div>\n```", "```js\nimport { Routes } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nexport const HomeRoutes: Routes = [{\n  path: '',\n  component: HomeComponent,\n}];\n```", "```js\nimport { NgModule }       from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { RouterModule }   from '@angular/router';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent }       from './app.component';\nimport { AppRoutes }       from './app.routes';\n\nimport { HomeModule } from './home/home.module';\nimport { AuthenticationService } from './authentication/authentication.service';\nimport { AuthenticationModule } from './authentication/authentication.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpModule,\n AuthenticationModule,\n HomeModule,\n RouterModule.forRoot(AppRoutes),\n  ],\n  declarations: [\n    AppComponent\n  ],\n  providers: [\n    AuthenticationService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n```", "```js\nimport { Routes } from '@angular/router';\n\nexport const AppRoutes: Routes = [{\n  path: '**',\n  redirectTo: '/',\n}];\n```", "```js\n$ npm start\n\n```"]