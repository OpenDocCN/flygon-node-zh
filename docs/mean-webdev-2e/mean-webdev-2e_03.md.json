["```js\n$ npm install express\n\n```", "```js\n{\n  \"name\" : \"MEAN\",\n  \"version\" : \"0.0.3\",\n  \"dependencies\" : {\n    \"express\" : \"4.14.0\"\n  }\n}\n```", "```js\n$ npm install\n\n```", "```js\nconst express = require('express');\nconst app = express();\n\napp.use('/', (req, res) => {\n  res.status(200).send('Hello World');\n});\n\napp.listen(3000);\nconsole.log('Server running at http://localhost:3000/');\n\nmodule.exports = app;\n```", "```js\n$ node server\n\n```", "```js\n{\n  \"name\" : \"MEAN\",\n  \"version\" : \"0.0.3\",\n  \"dependencies\" : {\n    \"express\" : \"4.14.0\"\n  }\n}\n```", "```js\nexports.render = function(req, res) {\n  res.status(200).send('Hello World');\n};\n```", "```js\napp.get('/', (req, res) => {\n  res.status(200).send('This is a GET request');\n});\n```", "```js\napp.post('/', (req, res) => {\n  res.status(200).send('This is a POST request');\n});\n```", "```js\napp.route('/').get((req, res) => {\n  res.status(200).send('This is a GET request');\n}).post((req, res) => {\n  res.status(200).send('This is a POST request');\n});\n```", "```js\nconst express = require('express');\n\nfunction hasName(req, res, next) {\n if (req.param('name')) {\n next();\n } else {\n res.status(200).send('What is your name?');\n }\n};\n\nfunction sayHello(req, res, next) {\n res.status(200).send('Hello ' + req.param('name'));\n}\n\nconst app = express();\napp.get('/', hasName, sayHello);\n\napp.listen(3000);\nconsole.log('Server running at http://localhost:3000/');\n```", "```js\nmodule.exports = function(app) {\n    const index = require('../controllers/index.server.controller');\n app.get('/', index.render);\n};\n```", "```js\nconst express = require('express');\n\nmodule.exports = function() {\n  const app = express();\n require('../app/routes/index.server.routes.js')(app);\n  return app;\n};\n```", "```js\nconst configureExpress = require('./config/express');\n\nconst app = configureExpress();\napp.listen(3000);\nmodule.exports = app;\n\nconsole.log('Server running at http://localhost:3000/');\n```", "```js\n$ npm install\n\n```", "```js\n$ node server \n\n```", "```js\n{\n  \"name\": \"MEAN\",\n  \"version\": \"0.0.3\",\n  \"dependencies\": {\n \"body-parser\": \"1.15.2\",\n \"compression\": \"1.6.0\",\n    \"express\": \"4.14.0\",\n \"method-override\": \"2.3.6\",\n \"morgan\": \"1.7.0\"\n  }\n}\n```", "```js\nconst express = require('express');\nconst morgan = require('morgan');\nconst compress = require('compression');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\n\nmodule.exports = function() {\n  const app = express();\n\n if (process.env.NODE_ENV === 'development') {\n app.use(morgan('dev'));\n } else if (process.env.NODE_ENV === 'production') {\n app.use(compress());\n }\n\n app.use(bodyParser.urlencoded({\n extended: true\n }));\n app.use(bodyParser.json());\n app.use(methodOverride());\n\n  require('../app/routes/index.server.routes.js')(app);\n\n  return app;\n};\n```", "```js\nprocess.env.NODE_ENV = process.env.NODE_ENV || 'development';\n\nconst configureExpress = require('./config/express');\n\nconst app = configureExpress();\napp.listen(3000);\nmodule.exports = app;\n\nconsole.log('Server running at http://localhost:3000/');\n```", "```js\n> set NODE_ENV=development\n```", "```js\n$ export NODE_ENV=development\n```", "```js\n$ npm install\n\n```", "```js\n$ node server\n\n```", "```js\nmodule.exports = {\n  // Development configuration options\n};\n```", "```js\nmodule.exports = require('./env/' + process.env.NODE_ENV + '.js');\n```", "```js\n{\n  \"name\": \"MEAN\",\n  \"version\": \"0.0.3\",\n  \"dependencies\": {\n    \"body-parser\": \"1.15.2\",\n    \"compression\": \"1.6.0\",\n \"ejs\": \"2.5.2\",\n    \"express\": \"4.14.0\",\n    \"method-override\": \"2.3.6\",\n    \"morgan\": \"1.7.0\"  }\n}\n```", "```js\n$ npm update\n\n```", "```js\nconst express = require('express');\nconst morgan = require('morgan');\nconst compress = require('compression');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\n\nmodule.exports = function() {\n  const app = express();\n  if (process.env.NODE_ENV === 'development') {\n    app.use(morgan('dev'));\n  } else if (process.env.NODE_ENV === 'production') {\n    app.use(compress());\n  }\n\n  app.use(bodyParser.urlencoded({\n    extended: true\n  }));\n  app.use(bodyParser.json());\n  app.use(methodOverride());\n\n  app.set('views', './app/views');\n  app.set('view engine', 'ejs');\n\n  require('../app/routes/index.server.routes.js')(app);\n\n  return app;\n};\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <title><%= title %></title>\n  </head>\n  <body>\n    <h1><%= title %></h1>\n  </body>\n</html>\n```", "```js\nexports.render = function(req, res) {\n  res.render('index', {\n    title: 'Hello World'\n  });\n};\n```", "```js\n$ node server\n\n```", "```js\nconst express = require('express');\nconst morgan = require('morgan');\nconst compress = require('compression');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\n\nmodule.exports = function() {\n  const app = express();\n  if (process.env.NODE_ENV === 'development') {\n    app.use(morgan('dev'));\n  } else if (process.env.NODE_ENV === 'production') {\n    app.use(compress());\n  }\n\n  app.use(bodyParser.urlencoded({\n    extended: true\n  }));\n  app.use(bodyParser.json());\n  app.use(methodOverride());\n\n  app.set('views', './app/views');\n  app.set('view engine', 'ejs'); \n\n  require('../app/routes/index.server.routes.js')(app); \n\n  app.use(express.static('./public'));\n\n  return app;\n};\n```", "```js\n<!DOCTYPE html>\n<html>\n  <head>\n    <title><%= title %></title>\n  </head>\n  <body>\n    <img src=\"img/logo.png\" alt=\"Logo\">\n    <h1><%= title %></h1>\n  </body>\n</html>\n```", "```js\n$ node server\n\n```", "```js\n{\n  \"name\": \"MEAN\",\n  \"version\": \"0.0.3\",\n  \"dependencies\": {\n    \"body-parser\": \"1.15.2\",\n    \"compression\": \"1.6.0\",\n    \"ejs\": \"2.5.2\",\n    \"express\": \"4.14.0\",\n \"express-session\": \"1.14.1\",\n    \"method-override\": \"2.3.6\",\n    \"morgan\": \"1.7.0\"\n  }\n}\n```", "```js\n$ npm update\n\n```", "```js\nmodule.exports = {\n  sessionSecret: 'developmentSessionSecret'\n};\n```", "```js\nconst config = require('./config');\nconst express = require('express');\nconst morgan = require('morgan');\nconst compress = require('compression');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\nconst session = require('express-session');\n\nmodule.exports = function() {\n  const app = express();\n\n  if (process.env.NODE_ENV === 'development') {\n    app.use(morgan('dev'));\n  } else if (process.env.NODE_ENV === 'production') {\n    app.use(compress());\n  }\n\n  app.use(bodyParser.urlencoded({\n    extended: true\n  }));\n  app.use(bodyParser.json());\n  app.use(methodOverride());\n\n  app.use(session({\n    saveUninitialized: true,\n    resave: true,\n    secret: config.sessionSecret\n  }));\n\n  app.set('views', './app/views');\n  app.set('view engine', 'ejs');\n\n  app.use(express.static('./public'));\n\n  require('../app/routes/index.server.routes.js')(app); \n\n  return app;\n};\n```", "```js\nexports.render = function(req, res) {\n  if (req.session.lastVisit) {\n    console.log(req.session.lastVisit);\n  }\n\n  req.session.lastVisit = new Date();\n\n  res.render('index', {\n    title: 'Hello World'\n  });\n};\n```", "```js\n$ node server\n\n```"]