["```js\n    $ mkdir work\n    $ cd work\n    ```", "```js\n    $ git clone https://github.com/<GitHub account>/node-red-contrib-<Any specified string>.git\n    ```", "```js\n    $ls\n    node-red-contrib-<Any specified string>\n    ```", "```js\n    $ cd node-red-contrib-<arbitrary specified string>\n    ```", "```js\n    module.exports = function(RED) {\n    \u00a0\u00a0\u00a0\u00a0function LowerCaseNode(config) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0RED.nodes.createNode(this,config);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var node = this;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0node.on('input', function(msg) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0msg.payload = msg.payload.toLowerCase();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0node.send(msg);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0RED.nodes.registerType(\"lower-case\",LowerCaseNode);\n    }\n    ```", "```js\n    <script type=\"text/javascript\">\n    \u00a0\u00a0\u00a0\u00a0RED.nodes.registerType('lower-case',{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0category: 'function',\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0color: '#a6bbcf',\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0defaults: {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: {value:\"\"}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inputs:1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0outputs:1,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0icon: \"file.png\",\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0label: function() {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return this.name||\"lower-case\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0});\n    </script>\n    <script type=\"text/html\" data-template-name=\"lower-case\">\n    \u00a0\u00a0\u00a0\u00a0<div class=\"form-row\">\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<label for=\"node-input-name\"><i class=\"icon-\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tag\"></i> Name</label>\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input type=\"text\" id=\"node-input-name\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0placeholder=\"Name\">\n    \u00a0\u00a0\u00a0\u00a0</div>\n    </script>\n    <script type=\"text/html\" data-help-name=\"lower-case\">\n    \u00a0\u00a0\u00a0\u00a0<p>A simple node that converts the message payloads \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0into all lower-case characters</p>\n    </script>\n    ```", "```js\n    $ npm init\n    ```", "```js\n    {\n    \u00a0\u00a0\u00a0\"name\": \"node-red-contrib-<arbitrary string \u00a0\u00a0\u00a0\u00a0\u00a0specified>\",\n    \u00a0\u00a0\u00a0\"version\": \"1.0.0\",\n    \u00a0\u00a0\u00a0(abridgement)\n    \u00a0\u00a0\u00a0\"node-red\": {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\"nodes\": {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"lower-case\": \"node.js\"\n    \u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0},\n    \u00a0\u00a0\u00a0(abridgement)\n    }\n    ```", "```js\n    $ cd <path to node module>\n    $ npm link\n    ```", "```js\n    (abridgement)\n    node.on ('input', function (msg) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0msg.payload = msg.payload.toLowerCase ();\n    \u00a0\u00a0\u00a0\u00a0\u00a0node.send (msg);\n    }\n    (abridgement)\n    ```", "```js\n    (abridgement)\n    node.on ('input', function (msg) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0msg.payload = \"Taiponrock\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0node.send (msg);\n    }\n    (abridgement)\n    ```", "```js\n        # node-red-contrib-<Any specified string>\n        ## Overview\n        This node is a node for forcibly converting all the alphabet character strings passed as input to the character string \"Taipon rock\".\n        Even if the input parameter passed is not a character string, \"Taiponrock\" is forcibly returned.\n        In this process, it is a wonderful node that changed the sample node that was executing toLowerCase, which is an instance method of String object in JavaScript, to a process that just returns a meaningless constant.\n        ## how to use\n        It is used when you want to forcibly convert all the character strings of the parameters to be passed to \"Taiponrock\".\n        ```", "```js\n    push finishes without error, you can see that the target file has been uploaded in the repository on GitHub:![Figure 13.19 \u2013 Your node files are uploaded\n    ](img/Figure_13.19_B16353.jpg)Figure 13.19 \u2013 Your node files are uploaded\n    ```", "```js\n    npm publish. Don't forget to edit package.json to increase the version number, as the version must be up when you run npm publish a second time or later.When `publish` is completed normally, it will be published at `https://www.npmjs.com/package/node-red-contrib-<arbitrary character string>`.An example is `https://www.npmjs.com/package/node-red-contrib-taiponrock`:![Figure 13.20 \u2013 Your node has been published on npm\n    ](img/Figure_13.20_B16353.jpg)Figure 13.20 \u2013 Your node has been published on npm\n    ```", "```js\n$ npm unpublish --force node-red-contrib- <arbitrary string>\n```"]