["```js\nionic start secureApp\n\n```", "```js\nangular.module('secureApp', [])\n.run(function ($ionicPlatform) {\n  $ionicPlatform.ready(function () {\n    // Hide the accessory bar by default (remove this to show\n    // the accessory bar above the keyboard for form inputs)\n    if (window.cordova && window.cordova.plugins.Keyboard) {\n      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n    }\n    if (window.StatusBar) {\n      // org.apache.cordova.statusbar required\n      StatusBar.styleDefault();\n    }\n  });\n})\n.config(function ($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('app', {\n       url: \"/app\",\n       abstract: true,\n       templateUrl: \"templates/menu.html\"\n    })\n    .state('app.home', {\n      url: \"/home\",\n      views: {\n        'menuContent': {\n          templateUrl: \"templates/home.html\"\n        }\n      }\n    })\n    .state('app.private', {\n      url: \"/private\",\n      views: {\n        'menuContent': {\n          templateUrl: \"templates/private.html\"\n        }\n      }\n    });\n    // if none of the above states are matched, use this as the fallback\n    $urlRouterProvider.otherwise('/app/home');\n  });\n```", "```js\n<ion-side-menus enable-menu-with-back-views=\"false\">\n  <ion-side-menu-content>\n    <ion-nav-bar class=\"bar-stable\">\n      <ion-nav-back-button></ion-nav-back-button>\n        <ion-nav-buttons side=\"left\">\n          <button class=\"button button-icon button-clear ion-navicon\"\n          menu-toggle=\"left\">\n          </button>\n        </ion-nav-buttons>\n      </ion-nav-bar>\n      <ion-nav-view name=\"menuContent\"></ion-nav-view>\n      </ion-side-menu-content>\n      <ion-side-menu side=\"left\">\n        <ion-header-bar class=\"bar-stable\">\n          <h1 class=\"title\">Left</h1>\n        </ion-header-bar>\n        <ion-content>\n          <ion-list>\n            <ion-item menu-close\n            href=\"#/app/home\">\n              Home\n            </ion-item>\n            <ion-item menu-close\n            href=\"#/app/private\">\n              Private\n            </ion-item>\n          </ion-list>\n        </ion-content>\n      </ion-side-menu>\n    </ion-side-menus>\n```", "```js\n<ion-view view-title=\"Search\">\n  <ion-content class=\"has-header\">\n    <h1>A secure app!</h1>\n    <div class=\"card\">\n      <div class=\"item item-text-wrap\">\n        This app contains extremely secretive confidential\n        mustneverbeseen-ish information that will cause a\n        disaster if it leaks out. It will also kill all\n        dolphins. Please save the dolphins.\n      </div>\n    </div>\n  </ion-content>\n</ion-view>\n```", "```js\n<ion-view view-title=\"Search\">\n  <ion-content class=\"has-header\">\n    <h1>Secret content!</h1>\n    <div class=\"card\">\n      <div class=\"item item-text-wrap\">\n        You are authorized to see the grand secrets\n        of the Universe!\n      </div>\n    </div>\n  </ion-content>\n</ion-view>\n```", "```js\nIonic serve -l\n\n```", "```js\nangular.module('secureApp.services', [])\n.factory('AuthFactory', function ($scope, $timeout) {\n  var currentUser = null;\n  var login = function (username, password) {\n    return null;\n  };\n  var isAuthenticated = function () {\n    return false;\n  };\n  var getCurrent = function () {\n    return isAuthenticated() ? currentUser : null;\n  };\n  return {\n    login: login,\n    isAuthenticated: isAuthenticated,\n    getCurrent: getCurrent\n  }\n});\n```", "```js\nvar validUsers = [\n{\n  firstName: 'Johanna',\n  lastName: 'Doe',\n  username: 'johnny',\n  password: 'suchsecret'\n},\n{\n  firstName: 'Jane',\n  lastName: 'Doe',\n  username: 'zo1337',\n  password: 'muchhide'\n},\n{\n  firstName: 'Mary',\n  lastName: 'Doe',\n  username: 'bl00dy',\n  password: 'wow'\n}\n];\n```", "```js\nvar login = function (username, password) {\n  var deferred = $q.defer();\n  // We use timeout in order to simulate a roundtrip to a server,\n  // which will be present in any realistic authentication scenario.\n  $timeout(function () {\n    // Clear any existing, cached user data before logging in\n    currentUser = null;\n    // See if we can find a matching username-password match\n    validUsers.forEach(function (user) {\n      if (user.username === username && user.password === password) {\n        // If we have a match, cache it as the current user\n        currentUser = user;\n        deferred.resolve();\n      }\n    });\n    // If no match could be found, reject the promise\n    if (!currentUser) {\n      deferred.reject();\n    }\n  }, 1000);\n  // Return the promise to the caller\n  return deferred.promise;\n};\n```", "```js\nvar isAuthenticated = function () {\n  return currentUser ? true : false;\n};\n```", "```js\nvar getCurrent = function () {\n  return isAuthenticated() ? currentUser : null;\n};\n```", "```js\n<script src=\"img/services.js\"></script>\n```", "```js\nangular.module('secureApp',\n[\n  'ionic',\n  'secureApp.services',\n])\n```", "```js\n.state('app.private', {\n  url: \"/private\",\n  views: {\n    'menuContent': {\n    templateUrl: \"templates/private.html\",\n    resolve: {\n      isAuthenticated: function ($q, AuthFactory) {\n        if (AuthFactory.isAuthenticated()) {\n          return $q.when();\n        } else {\n          $timeout(function () {\n          $state.go('app.home')\n        },0);\n        return $q.reject()\n      }\n    }\n   }\n});\n```", "```js\nangular.module('secureApp.controllers', ['secureApp.services'])\n.controller('AppCtrl', function ($scope, $ionicModal, $timeout, AuthFactory) {\n  // Form data for the login modal\n  $scope.loginData = {};\n  // Create the login modal that we will use later\n  $ionicModal.fromTemplateUrl('templates/login.html', {\n    scope: $scope\n  }).then(function (modal) {\n    $scope.modal = modal;\n  });\n  // Triggered in the login modal to close it\n  $scope.closeLogin = function () {\n    $scope.modal.hide();\n  };\n  // Open the login modal\n  $scope.login = function () {\n    $scope.modal.show();\n  };\n  // Perform the login action when the user submits the login form\n  $scope.doLogin = function () {\n    AuthFactory.login($scope.loginData.username, $scope.loginData.password)\n    .then(function () {\n      $scope.closeLogin();\n    });\n  };\n});\n```", "```js\n<ion-modal-view>\n  <ion-header-bar>\n    <h1 class=\"title\">Login</h1>\n    <div class=\"buttons\">\n      <button class=\"button button-clear\"\n      ng-click=\"closeLogin()\">\n        Close\n      </button>\n    </div>\n  </ion-header-bar>\n  <ion-content>\n    <form ng-submit=\"doLogin()\">\n      <div class=\"list\">\n        <label class=\"item item-input\">\n          <span class=\"input-label\">\n            Username\n          </span>\n          <input type=\"text\"\n          ng-model=\"loginData.username\">\n        </label>\n        <label class=\"item item-input\">\n          <span class=\"input-label\">\n            Password\n          </span>\n          <input type=\"password\"\n          ng-model=\"loginData.password\">\n        </label>\n        <label class=\"item\">\n          <button class=\"button button-block button-positive\"\n          type=\"submit\">\n            Log in\n          </button>\n        </label>\n      </div>\n    </form>\n  </ion-content>\n</ion-modal-view>\n```", "```js\n<script src=\"img/controllers.js\"></script>\n```", "```js\nangular.module('secureApp',\n[\n  'ionic',\n  'secureApp.services',\n  'secureApp.controllers'\n])\n```"]