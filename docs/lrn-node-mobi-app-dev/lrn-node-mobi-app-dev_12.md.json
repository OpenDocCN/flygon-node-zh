["```js\nnpm init\n```", "```js\n{\n  \"name\": \"ionic-chat-server\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A websocket server for chatting.\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"csvan\",\n  \"license\": \"MIT\"\n}\n```", "```js\nnpm install socket.io\n```", "```js\nvar http = require('http');\nvar url = require('url');\nvar fs = require('fs');\nvar server = http.createServer(function (req, res) {\n  var parsedUrl = url.parse(req.url, true);\n  switch (parsedUrl.pathname) {\n    case '/':\n    // Read the file into memory and push it to the client\n    fs.readFile('index.html', function (err, content) {\n      if (err) {\n        res.writeHead(500);\n        res.end();\n      }\n      else {\n        res.writeHead(200, {'Content-Type': 'text/html'});\n        res.end(content, 'utf-8');\n      }\n    });\n    break;\n  }\n});\n// Connect the websocket handler to our server\nvar websocket = require('socket.io')(server);\n\n// Create a handler for incoming websocket connections\nwebsocket.on('UserConnectedEvent', function (socket) {\n  console.log(\"New user connected\");\n\n  // Tell others a new user connected\n  socket.broadcast.emit('UserConnectedEvent', null);\n\n  // Bind event handler for incoming messages\n  socket.on('MessageSentEvent', function (chatData) {\n    console.log('Received new chat message');\n\n    // By using the 'broadcast' connector, we will\n    // send the message to everyone except the sender.\n    socket.broadcast.emit('MessageReceivedEvent', chatData);\n  });\n});\nserver.listen(8080);\n```", "```js\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n  <meta charset=\"UTF-8\">\n    <title>Socket.io chat application</title>\n    <link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css\"/>\n</head>\n  <body>\n    <ul id=\"messages\"></ul>\n    <div class=\"container\">\n      <div class=\"row\">\n         <div id=\"chat-box\" class=\"well\">\n           <ul id=\"chat-view\" class=\"list-unstyled\"></ul>\n         </div>\n      </div>\n      <form action=\"\">\n        <div class=\"row\">\n        <input type=\"text\"\n        id=\"chat-name\"\n        class=\"form-control\"\n        placeholder=\"Your name\">\n        </div>\n        <div class=\"row\">\n          <input type=\"text\"\n          id=\"chat-message\"\n          class=\"form-control\"\n          placeholder=\"Enter message\">\n          <button id=\"chat-submit\"\n          type=\"submit\"\n          class=\"btn btn-default\">Send\n          </button>\n        </div>\n      </form>\n    </div>\n    <script src=\"img/socket.io.js\"></script>\n    <script src=\"img/jquery-1.11.0.min.js\"></script>\n    <script>\n      var websocket = io();\n      var appendChatMessage = function (sender, message) {\n        $('#chat-view').append($('<li>').text(sender + ': ' + message));\n      };\n      var clearChatField = function () {\n        $('#chat-message').text('');\n      };\n      // Notify the server when we send a new message\n\n      $('#chat-submit').click(function () {\n        var chatData = {\n          name: $('#chat-name').val(),\n          message: $('#chat-message').val()\n        };\n        appendChatMessage(chatData.name, chatData.message);\n        clearChatField();\n        websocket.emit('newChatMessage', chatData);\n        return false;\n      });\n\n      // Update the state of the chat when we receive a new chat message\n      websocket.on('new chat message', function (chatData) {\n        appendChatMessage(chatData.name, chatData.message);\n      });\n    </script>\n  </body>\n</html>\n```", "```js\nionic start ionic-chat-app blank\n```", "```js\nionic serve -l\n```", "```js\nangular.module('ionic-chat-app', ['ionic'])\n.run(function ($ionicPlatform) {\n  $ionicPlatform.ready(function () {\n    if (window.cordova && window.cordova.plugins.Keyboard) {\n      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n    }\n    if (window.StatusBar) {\n      StatusBar.styleDefault();\n    }\n  })\n})\n.config(function ($stateProvider, $urlRouterProvider) {\n  // Configure the routing\n  $stateProvider.\n  state('app', {\n    url: \"/app\",\n    abstract: true,\n    templateUrl: 'index.html'\n  })\n  .state('app.chat', {\n    url: '/chat',\n    templateUrl: 'templates/app-chat.html'\n  });\n  $urlRouterProvider.otherwise('/app/chat');\n});\n```", "```js\n<ion-view view-title=\"chat\">\n  <ion-content class=\"padding\">\n    Chat awesomeness goes here!\n  </ion-content>\n</ion-view>\n```", "```js\n<ion-view view-title=\"chat\">\n  <ion-content class=\"padding\">\n  </ion-content>\n  <div class=\"bar bar-footer bar-balanced\">\n    <label class=\"item-input-wrapper\">\n      <input id=\"message-input\" type=\"text\" placeholder=\"Message\">\n    </label>\n    <button class=\"button button-small\">\n      Submit\n    </button>\n  </div>\n</ion-view>\n```", "```js\n#message-input {\n  width: 100%;\n}\n```", "```js\n<ion-content>\n  <div class=\"list\">\n    <a class=\"item item-avatar\">\n      <h2>Me</h2>\n      <p>Anyone out there!?</p>\n    </a>\n    <a class=\"item item-avatar other-chatbox\">\n      <h2>Anyone</h2>\n      <p>Yes.</p>\n    </a>\n    <a class=\"item item-avatar\">\n      <h2>Me</h2>\n      <p><3</p>\n    </a>\n  </div>\n</ion-content>\n```", "```js\n.item-avatar {\n  padding-left: 16px;\n}\n.other-chatbox {\n  text-align: right;\n}\n```", "```js\nangular.module('ionic-chat-app-services', [])\n.service('ChatService', function ChatService($rootScope) {\n  this.emit = function (message) {\n    // Send a message\n  };\n  this.on = {\n    userConnected: function (callback) {\n      $rootScope.$on('UserConnectedEvent', function (event, user) {\n        callback(user);\n      })\n    },\n    messageReceived: function (callback) {\n      $rootScope.$on('MessageReceivedEvent', function (event, message) {\n        callback(message);\n      })\n    }\n  }\n});\n```", "```js\n<script src=\"img/app.services.js\"></script>\n```", "```js\nangular.module('ionic-chat-app',\n[\n  'ionic',\n  'ionic-chat-app-services'\n])\n```", "```js\n<script src=\"img/socket.io-x.x.x.js\"></script>\n```", "```js\nangular.module('ionic-chat-app-services', [])\n.service('ChatService', function ChatService($rootScope) {\n\n  // Init the Websocket connection\n  var socket = io.connect('http://localhost:8080');\n\n  // Bridge events from the Websocket connection to the rootScope\n  socket.on('UserConnectedEvent', function(user) {\n    $rootScope.emit('UserConnectedEvent', user);\n  });\n  socket.on('MessageReceivedEvent', function(message) {\n    $rootScope.emit('MessageReceivedEvent', message);\n  });\n\n  /*\n  * Send a message to the server.\n  * @param message\n  */\n  this.emit = function (message) {\n    socket.emit('MessageSentEvent', message);\n  };\n  this.on = {\n    userConnected: function (callback) {\n      $rootScope.$on('UserConnectedEvent', function (event, user) {\n        callback(user);\n      })\n    },\n    messageReceived: function (callback) {\n      $rootScope.$on('MessageReceivedEvent', function (event, message) {\n        callback(message);\n      })\n    }\n  }\n});\n```", "```js\n<script src=\"img/app.controllers.js\"></script>\n\nangular.module('ionic-chat-app',\n[\n  'ionic',\n  'ionic-chat-app-services',\n  'ionic-chat-app-controllers'\n])\n```", "```js\nangular.module('ionic-chat-app-controllers', [])\n.controller('ChatController', function ($scope) {\n});\n```", "```js\n$stateProvider.\nstate('app', {\n  url: \"/app\",\n  abstract: true,\n  templateUrl: 'index.html'\n})\n.state('app.chat', {\n  url: '/chat',\n  templateUrl: 'templates/app-chat.html',\n  controller: 'ChatController'\n});\n```", "```js\nangular.module('ionic-chat-app-controllers', [])\n.controller('ChatController', function ($scope, ChatService) {\n  // The chat messages\n  $scope.messages = [];\n  // Notify whenever a new user connects\n  ChatService.on.userConnected(function (user) {\n    $scope.messages.push({\n      name: 'Chat Bot',\n      text: 'A new user has connected!'\n    });\n  });\n  // Whenever a new message appears, append it\n  ChatService.on.messageReceived(function (message) {\n    message.external = true;\n    $scope.messages.push(message);\n  });\n  $scope.inputMessage = '';\n  $scope.onSend = function () {\n    $scope.messages.push({\n      name: 'Me',\n      text: $scope.inputMessage\n    });\n    // Send the message to the server\n    ChatService.emit({\n      name: 'Anonymous',\n      text: $scope.inputMessage\n    });\n    // Clear the chatbox\n    $scope.inputMessage = '';\n  }\n});\n```", "```js\n<ion-view view-title=\"chat\">\n  <ion-content>\n    <div class=\"list\">\n      <a collection-repeat=\"message in messages\"\n      class=\"item item-avatar\"\n      ng-class=\"{'other-chatbox' : message.external}\">\n        <h2>{{message.name}}</h2>\n        <p>{{message.text}}</p>\n      </a>\n    </div>\n  </ion-content>\n  <div class=\"bar bar-footer bar-balanced\">\n    <label class=\"item-input-wrapper\">\n      <input id=\"message-input\"\n      type=\"text\"\n      placeholder=\"Message\"\n      ng-model=\"inputMessage\">\n    </label>\n    <button class=\"button button-small\"\n    ng-click=\"onSend()\">\n      Submit\n    </button>\n  </div>\n</ion-view>\n```"]