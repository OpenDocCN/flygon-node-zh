["```js\nhttp://<domain>/[api name]/[api version]/<resource>\n```", "```js\n{\n  name: 'Apple',\n  price: 50,\n  id: 'abcd1234'\n}\n```", "```js\n{\n  id: 'abcd1234'\n  price: 500000000,\n}\n```", "```js\n{\n  name: \"Apple\",\n  price: 500000000,\n  id: \"abcd1234\"\n}\n```", "```js\nnpm init\n\n```", "```js\nnpm install mongodb\n\n```", "```js\nvar http = require('http');\n```", "```js\nvar server = http.createServer(function (req, res) {\n    res.writeHead(200);\n    res.end(\"I am a fledgling API, and I am alright\");\n});\nserver.listen(8080);\n\nconsole.log('Up, running and ready for action!');\n```", "```js\nfunction (req, res) {\n  res.writeHead(200);\n  res.end(\"I am a fledgling API, and I am alright\");\n}\n```", "```js\nres.writeHead(200);\n```", "```js\nres.writeHead(200, {'Content-Type': 'application/json'});\n```", "```js\nvar myProduct = {\n  name: 'Apple',\n  price: 600\n};\n```", "```js\nres.end('I am a fledgling API, and I am alright');\n```", "```js\nres.end(JSON.stringify(myProduct));\n```", "```js\n{\n  'name':'Apple',\n  'price':600\n}\n```", "```js\nvar URL = require('URL');\n```", "```js\nvar server = http.createServer(function (req, res) {\n\n  // Break down the incoming URL into its components\n  var parsedURL = URL.parse(req.URL, true);\n\n  // Determine a response based on the URL\n  switch (parsedURL.pathname) {\n    case '/api/products':\n    // Find and return the product with the given id\n    if (parsedURL.query.id) {\n      findProductById(id, req, res);\n    }\n    // There is no id specified, return all products\n    else {\n      findAllProducts(req, res);\n    }\n    break;\n    default:\n    res.end('You shall not pass!');\n  }\n});\n```", "```js\n// Generic find methods (GET)\n\nfunction findAllResources(resourceName, req, res) {\n  database.find('OrderBase', resourceName, {}, function (err, resources) {\n  res.writeHead(200, {'Content-Type': 'application/json'});\n  res.end(JSON.stringify(resources));\n  });\n};\n\nvar findResourceById = function (resourceName, id, req, res) {\n  database.find('OrderBase', resourceName, {'_id': id}, function (err, resource) {\n  res.writeHead(200, {'Content-Type': 'application/json'});\n  res.end(JSON.stringify(resource));\n  });\n};\n\n// Product methods\n\nvar findAllProducts = function (req, res) {\n  findAllResources('Products', req, res);\n};\n\nvar findProductById = function (id, req, res) {\n  findResourceById('Products', id, req, res);\n};\n```", "```js\nvar server = http.createServer(function (req, res) {\n\n  // breaks down the incoming URL into its components\n  var parsedURL = URL.parse(req.URL, true);\n\n  // determine a response based on the URL\n  switch (parsedURL.pathname) {\n    case '/api/products':\n    if (req.method === 'GET') {\n      // Find and return the product with the given id\n      if (parsedURL.query.id) {\n        findProductById(id, req, res)\n      }\n      // There is no id specified, return all products\n      else {\n        findAllProducts(req, res);\n      }\n    }\n    else if (req.method === 'POST') {\n\n      //Extract the data stored in the POST body\n      var body = '';\n      req.on('data', function (dataChunk) {\n        body += dataChunk;\n      });\n      req.on('end', function () {\n        // Done pulling data from the POST body.\n        // Turn it into JSON and proceed to store it in the database.\n        var postJSON = JSON.parse(body);\n        insertProduct(postJSON, req, res);\n      });\n    }\n    break;\n    default:\n    res.end('You shall not pass!');\n  }\n});\n```", "```js\n// Generic insert/update methods (POST, PUT)\n\nvar insertResource = function (resourceName, resource, req, res) {\n  database.insert('OrderBase', resourceName, resource, function (err, resource) {\n  res.writeHead(200, {'Content-Type': 'application/json'});\n  res.end(JSON.stringify(resource));\n  });\n};\n\n// Product methods\n\nvar insertProduct = function (product, req, res) {\n  insertResource('OrderBase', 'Product', product, function (err, result) {\n  res.writeHead(200, {'Content-Type': 'application/json'});\n  res.end(JSON.stringify(result));\n  });\n};\n```"]